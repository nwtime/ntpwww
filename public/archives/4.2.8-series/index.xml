<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NTP: Network Time Protocol – 4.2.8-series</title>
    <link>/archives/4.2.8-series/</link>
    <description>Recent content in 4.2.8-series on NTP: Network Time Protocol</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/archives/4.2.8-series/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Archives: </title>
      <link>/archives/4.2.8-series/toc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/toc/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;4.2.8p15 is the latest stable and recommended version of NTP. Click &lt;a href=&#34;/archives/4.2.8-series&#34;&gt;here&lt;/a&gt; to read the latest version of the docs. Refer to the table below for the release announcement for each patch level in the 4.2.8-series.&lt;/p&gt;

&lt;/div&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Release Date&lt;/th&gt;
&lt;th&gt;Release Announcement&lt;/th&gt;
&lt;th&gt;# of Security Fixes&lt;/th&gt;
&lt;th&gt;# of Fixes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;June 23, 2020&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#June_2020_ntp_4_2_8p15_NTP_Relea&#34;&gt;4.2.8p15&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1 MEDIUM&lt;/td&gt;
&lt;td&gt;13 bugs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;March 3, 2020&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#March_2020_ntp_4_2_8p14_NTP_Rele&#34;&gt;4.2.8p14&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2 MEDIUM&lt;/td&gt;
&lt;td&gt;46 bugs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;March 7, 2019&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#March_2019_ntp_4_2_8p13_NTP_Rele&#34;&gt;4.2.8p13&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1 MEDIUM&lt;/td&gt;
&lt;td&gt;17 bugs&lt;br&gt; 1 improvement&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;August 14, 2018&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#August_2018_ntp_4_2_8p12_NTP_Rel&#34;&gt;4.2.8p12&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1 MEDIUM&lt;br&gt; 1 LOW&lt;/td&gt;
&lt;td&gt;27 bugs&lt;br&gt; 4 improvements&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;February 27, 2018&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#February_2018_ntp_4_2_8p11_NTP_S&#34;&gt;4.2.8p11&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;4 MEDIUM&lt;br&gt; 2 LOW&lt;/td&gt;
&lt;td&gt;33 bugs&lt;br&gt; 32 improvements&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;March 21, 2017&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#March_2017_ntp_4_2_8p10_NTP_Secu&#34;&gt;4.2.8p10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;6 MEDIUM&lt;br&gt; 5 LOW&lt;br&gt; 4 INF&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;November 21, 2016&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#November_2016_ntp_4_2_8p9_NTP_Se&#34;&gt;4.2.8p9&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1 HIGH&lt;br&gt; 4 MEDIUM&lt;br&gt; 5 LOW&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;June 2, 2016&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#June_2016_ntp_4_2_8p8_NTP_Securi&#34;&gt;4.2.8p8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1 HIGH&lt;br&gt; 4 LOW&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;April 26, 2016&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#April_2016_ntp_4_2_8p7_Security&#34;&gt;4.2.8p7&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;7 MEDIUM&lt;br&gt; 4 LOW&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;January 20, 2016&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#January_2016_NTP_4_2_8p6_Securit&#34;&gt;4.2.8p6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;11 MEDIUM/LOW&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;January 7, 2016&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#January_2016_NTP_4_2_8p5_Securit&#34;&gt;4.2.8p5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1 MEDIUM&lt;/td&gt;
&lt;td&gt;14 bugs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;October 21, 2015&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#October_2015_NTP_4_2_8p4_Securit&#34;&gt;4.2.8p4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;13 MEDIUM/LOW&lt;/td&gt;
&lt;td&gt;3 bugs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;June 27, 2015&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#June_2015_NTP_4_2_8p3_Security_V&#34;&gt;4.2.8p3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1 LOW&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;April 7, 2015&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#April_2015_NTP_4_2_8p2_Security&#34;&gt;4.2.8p2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;February 4, 2015&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://support.ntp.org/bin/view/Main/SecurityNotice#December_2014_NTP_4_2_8p1_Securi&#34;&gt;4.2.8p1&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;December 19, 2014&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://lists.ntp.org/pipermail/announce/2014-December/000122.html&#34;&gt;4.2.8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;6 HIGH&lt;/td&gt;
&lt;td&gt;1100+&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Access Control Commands and Options</title>
      <link>/archives/4.2.8-series/accopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/accopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo6.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The skunk watches for intruders and sprays.&lt;/p&gt;
&lt;p&gt;Last update: 7-Jan-2018 23:56 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;commands-and-options&#34;&gt;Commands and Options&lt;/h4&gt;
&lt;p&gt;Unless noted otherwise, further information about these commands is on the &lt;a href=&#34;/archives/4.2.8-series/access&#34;&gt;Access Control Support&lt;/a&gt; page.&lt;/p&gt;
&lt;dt id=&#34;discard&#34;&gt;&lt;tt&gt;discard [ average _avg_ ][ minimum _min_ ] [ monitor _prob_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the parameters of the rate control facility which protects the server from client abuse. If the &lt;tt&gt;limited&lt;/tt&gt; flag is present in the ACL, packets that violate these limits are discarded. If, in addition, the &lt;tt&gt;kod&lt;/tt&gt; flag is present, a kiss-o&#39;-death packet is returned. See the &lt;a href=&#34;/archives/4.2.8-series/rate&#34;&gt;Rate Management&lt;/a&gt; page for further information. The options are:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;average _avg_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the minimum average interpacket spacing (minimum average headway time) in log&lt;sub&gt;2&lt;/sub&gt; s with default 3.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;minimum _min_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the minimum interpacket spacing (guard time) in seconds with default 2.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;monitor&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the probability of being recorded for packets that overflow the MRU list size limit set by &lt;tt&gt;mru maxmem&lt;/tt&gt; or &lt;tt&gt;mru maxdepth&lt;/tt&gt;. This is a performance optimization for servers with aggregate arrivals of 1000 packets per second or more.&lt;/p&gt;
&lt;dt id=&#34;restrict&#34;&gt;&lt;tt&gt;restrict [-4 | -6] default [ippeerlimit _num_] [_flag_][...]&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;tt&gt;restrict source [ippeerlimit _num_] [_flag_][...]&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;tt&gt;restrict _address_ [mask _mask_] [ippeerlimit _num_] [_flag_][...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The &lt;tt&gt;&lt;em&gt;address&lt;/em&gt;&lt;/tt&gt; argument expressed in IPv4 or IPv6 numeric address form is the address of a host or network. Alternatively, the &lt;tt&gt;&lt;em&gt;address&lt;/em&gt;&lt;/tt&gt; argument can be a valid host DNS name. The &lt;tt&gt;&lt;em&gt;mask&lt;/em&gt;&lt;/tt&gt; argument expressed in IPv4 or IPv6 numeric address form defaults to all mask bits on, meaning that the &lt;tt&gt;&lt;em&gt;address&lt;/em&gt;&lt;/tt&gt; is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0 for IPv4 and address :: mask :: for IPv6) is always the first entry in the list. &lt;tt&gt;restrict default&lt;/tt&gt;, with no mask option, modifies both IPv4 and IPv6 default entries. &lt;tt&gt;restrict source&lt;/tt&gt; configures a template restriction automatically added at runtime for each association, whether configured, ephemeral, or preemptible, and removed when the association is demobilized.&lt;/p&gt;
&lt;p&gt;The optional &lt;tt&gt;ippeerlimit&lt;/tt&gt; takes a numeric argument that indicates how many incoming (at present) peer requests will be permitted for each IP, regardless of whether or not the request comes from an authenticated source. A value of -1 means &amp;ldquo;unlimited&amp;rdquo;, which is the current default. A value of 0 means &amp;ldquo;none&amp;rdquo;. Ordinarily one would expect at most 1 of these sessions to exist per IP, however if the remote side is operating thru a proxy there would be one association for each remote peer at that IP.&lt;/p&gt;
&lt;p&gt;Some flags have the effect to deny service, some have the effect to enable service and some are conditioned by other flags. The flags are not orthogonal, in that more restrictive flags will often make less restrictive ones redundant. The flags that deny service are classed in two categories, those that restrict time service and those that restrict informational queries and attempts to do run-time reconfiguration of the server. One or more of the following flags may be specified:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;flake&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Discard received NTP packets with probability 0.1; that is, on average drop one packet in ten. This is for testing and amusement. The name comes from Bob Braden&amp;rsquo;s &lt;em&gt;flakeway&lt;/em&gt;, which once did a similar thing for early Internet testing.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;ignore&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Deny packets of all kinds, including &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;kod&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Send a kiss-o&#39;-death (KoD) packet if the &lt;tt&gt;limited&lt;/tt&gt; flag is present and a packet violates the rate limits established by the &lt;tt&gt;discard&lt;/tt&gt; command. KoD packets are themselves rate limited for each source address separately. If the &lt;tt&gt;kod&lt;/tt&gt; flag is used in a restriction which does not have the &lt;tt&gt;limited&lt;/tt&gt; flag, no KoD responses will result.&lt;/p&gt;
&lt;dt id=&#34;limited&#34;&gt;&lt;tt&gt;limited&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Deny time service if the packet violates the rate limits established by the &lt;tt&gt;discard&lt;/tt&gt; command. This does not apply to &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;lowpriotrap&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Declare traps set by matching hosts to be low priority. The number of traps a server can maintain is limited (the current limit is 3). Traps are usually assigned on a first come, first served basis, with later trap requestors being denied service. This flag modifies the assignment algorithm by allowing low priority traps to be overridden by later requests for normal priority traps.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;mssntp&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable Microsoft Windows MS-SNTP authentication using Active Directory services.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    Potential users should be aware that these services involve a TCP connection to another process that could potentially block, denying services to other users. Therefore, this flag should be used only for a dedicated server with no clients other than MS-SNTP.

&lt;/div&gt;

&lt;dt&gt;&lt;tt&gt;noepeer&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Deny packets that would mobilize an ephemeral peering association, even if authenticated.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;nomodify&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Deny &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries which attempt to modify the state of the server (i.e., run time reconfiguration). Queries which return information are permitted.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;noquery&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Deny &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries. Time service is not affected.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;nopeer&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Deny packets that might mobilize an association unless authenticated. This includes broadcast, symmetric-active and manycast server packets when a configured association does not exist. It also includes &lt;tt&gt;pool&lt;/tt&gt; associations, so if you want to use servers from a &lt;tt&gt;pool&lt;/tt&gt; directive and also want to use &lt;tt&gt;nopeer&lt;/tt&gt; by default, you&amp;rsquo;ll want a &lt;tt&gt;&amp;ldquo;restrict source &amp;hellip;&amp;quot;&lt;/tt&gt; line as well that does &lt;em&gt;not&lt;/em&gt; include the &lt;tt&gt;nopeer&lt;/tt&gt; directive. Note that this flag does not apply to packets that do not attempt to mobilize an association.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;noserve&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Deny all packets except &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;notrap&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Decline to provide mode 6 control message trap service to matching hosts. The trap service is a subsystem of the &lt;tt&gt;ntpdc&lt;/tt&gt; control message protocol which is intended for use by remote event logging programs.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;notrust&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Deny packets that are not cryptographically authenticated. Note carefully how this flag interacts with the &lt;tt&gt;auth&lt;/tt&gt; option of the &lt;tt&gt;enable&lt;/tt&gt; and &lt;tt&gt;disable&lt;/tt&gt; commands. If &lt;tt&gt;auth&lt;/tt&gt; is enabled, which is the default, authentication is required for all packets that might mobilize an association. If &lt;tt&gt;auth&lt;/tt&gt; is disabled, but the &lt;tt&gt;notrust&lt;/tt&gt; flag is not present, an association can be mobilized whether or not authenticated. If &lt;tt&gt;auth&lt;/tt&gt; is disabled, but the &lt;tt&gt;notrust&lt;/tt&gt; flag is present, authentication is required only for the specified address/mask range.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;ntpport&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This is actually a match algorithm modifier, rather than a restriction flag. Its presence causes the restriction entry to be matched only if the source port in the packet is the standard NTP UDP port (123). A restrict line containing &lt;tt&gt;ntpport&lt;/tt&gt; is considered more specific than one with the same address and mask, but lacking &lt;tt&gt;ntpport&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;serverresponse fuzz&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;When responding to server requests, fuzz the low order bits of the &lt;tt&gt;reftime&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;version&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Deny packets that do not match the current NTP version.&lt;/p&gt;
&lt;p&gt;Default restriction list entries with the flags &lt;tt&gt;ignore, ntpport&lt;/tt&gt;, for each of the local host&amp;rsquo;s interface addresses are inserted into the table at startup to prevent the server from attempting to synchronize to its own time. A default entry is also always present, though if it is otherwise unconfigured; no flags are associated with the default entry (i.e., everything besides your own NTP server is unrestricted).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Access Control Support</title>
      <link>/archives/4.2.8-series/access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/access/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo6.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The skunk watches for intruders and sprays.&lt;/p&gt;
&lt;p&gt;Last update: 26-Jul-2017 20:10 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; daemon implements a general purpose access control list (ACL) containing address/match entries sorted first by increasing address values and then by increasing mask values. A match occurs when the bitwise AND of the mask and the packet source address is equal to the bitwise AND of the mask and address in the list. The list is searched in order with the last match found defining the restriction flags associated with the entry.&lt;/p&gt;
&lt;p&gt;The ACL is specified as a list of &lt;tt&gt;restrict&lt;/tt&gt; commands in the following format:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;restrict &lt;em&gt;address&lt;/em&gt; [mask &lt;em&gt;mask&lt;/em&gt;] [&lt;em&gt;flag&lt;/em&gt;][&amp;hellip;]&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;&lt;em&gt;address&lt;/em&gt;&lt;/tt&gt; argument expressed in dotted-quad form is the address of a host or network. Alternatively, the &lt;tt&gt;&lt;em&gt;address&lt;/em&gt;&lt;/tt&gt; argument can be a valid host DNS name. The &lt;tt&gt;&lt;em&gt;mask&lt;/em&gt;&lt;/tt&gt; argument expressed in IPv4 or IPv6 numeric address form defaults to all mask bits on, meaning that the &lt;tt&gt;&lt;em&gt;address&lt;/em&gt;&lt;/tt&gt; is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0 for IPv4 and address :: mask :: for IPv6) is always the first entry in the list. &lt;tt&gt;restrict default&lt;/tt&gt;, with no mask option, modifies both IPv4 and IPv6 default entries. &lt;tt&gt;restrict source&lt;/tt&gt; configures a template restriction automatically added at runtime for each association, whether configured, ephemeral, or preemptable, and removed when the association is demobilized.&lt;/p&gt;
&lt;p&gt;Some flags have the effect to deny service, some have the effect to enable service and some are conditioned by other flags. The flags are not orthogonal, in that more restrictive flags will often make less restrictive ones redundant. The flags that deny service are classed in two categories, those that restrict time service and those that restrict informational queries and attempts to do run-time reconfiguration of the server.&lt;/p&gt;
&lt;p&gt;An example may clarify how it works. Our campus has two class-B networks, 128.4 for the ECE and CIS departments and 128.175 for the rest of campus. Let&amp;rsquo;s assume (not true!) that subnet 128.4.1 homes critical services like class rosters and spread sheets. A suitable ACL might look like this:&lt;/p&gt;
&lt;pre&gt;restrict default nopeer			# deny new associations
restrict 128.175.0.0 mask 255.255.0.0 		# allow campus access
restrict 128.4.0.0 mask 255.255.0.0 none	# allow ECE and CIS access
restrict 128.4.1.0 mask 255.255.255.0 notrust   # require authentication on subnet 1
restrict time.nist.gov				# allow access
&lt;/pre&gt;
&lt;p&gt;While this facility may be useful for keeping unwanted, broken or malicious clients from congesting innocent servers, it should not be considered an alternative to the NTP authentication facilities. Source address based restrictions are easily circumvented by a determined cracker.&lt;/p&gt;
&lt;p&gt;Default restriction list entries with the flags &lt;tt&gt;ignore, ntpport&lt;/tt&gt;, for each of the local host&amp;rsquo;s interface addresses are inserted into the table at startup to prevent the server from attempting to synchronize to its own time. A default entry is also always present, though if it is otherwise unconfigured; no flags are associated with the default entry (i.e., everything besides your own NTP server is unrestricted).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Association Management</title>
      <link>/archives/4.2.8-series/assoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/assoc/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice51.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Make sure who your friends are.&lt;/p&gt;
&lt;p&gt;Last update: 31-Jan-2014 06:54 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/assoc/#association-modes&#34;&gt;Association Modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/assoc/#clientserver-mode&#34;&gt;Client/Server Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/assoc/#symmetric-activepassive-mode&#34;&gt;Symmetric Active/Passive Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/assoc/#broadcastmulticast-modes&#34;&gt;Broadcast/Multicast Modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/assoc/#manycast-and-pool-modes&#34;&gt;Manycast and Pool Modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/assoc/#poll-interval-management&#34;&gt;Poll Interval Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/assoc/#burst-options&#34;&gt;Burst Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;association-modes&#34;&gt;Association Modes&lt;/h4&gt;
&lt;p&gt;This page describes the various modes of operation provided in NTPv4. There are three types of associations in NTP: &lt;em&gt;persistent&lt;/em&gt;, &lt;em&gt;preemptable&lt;/em&gt; and &lt;em&gt;ephemeral&lt;/em&gt;. Persistent associations are mobilized by a configuration command and never demobilized. Preemptable associations, which are new to NTPv4, are mobilized by a configuration command which includes the &lt;tt&gt;preempt&lt;/tt&gt; option or upon arrival of an automatic server discovery packet. They are demobilized by timeout or when preempted by a &amp;ldquo;better&amp;rdquo; server, as described on the &lt;a href=&#34;/archives/4.2.8-series/discover&#34;&gt;Automatic Server Discovery Schemes&lt;/a&gt; page. Ephemeral associations are mobilized upon arrival of broadcast or multicast server packets and demobilized by timeout.&lt;/p&gt;
&lt;p&gt;Ordinarily, successful mobilization of ephemeral associations requires the server to be cryptographically authenticated to the client. This can be done using either symmetric key or Autokey public key cryptography, as described on the &lt;a href=&#34;/archives/4.2.8-series/authentic&#34;&gt;Authentication Support&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;There are three principal modes of operation in NTP: client/server, symmetric active/passive and broadcast/multicast. There are three automatic server discovery schemes in NTP: broadcast/multicast, manycast and pool described on the &lt;a href=&#34;/archives/4.2.8-series/discover&#34;&gt;Automatic Server Discovery Schemes&lt;/a&gt; page. In addition, the &lt;a href=&#34;/archives/4.2.8-series/assoc/#burst-options&#34;&gt;burst options&lt;/a&gt; and &lt;a href=&#34;/archives/4.2.8-series/orphan&#34;&gt;orphan mode&lt;/a&gt; can be used in appropriate cases.&lt;/p&gt;
&lt;p&gt;Following is a summary of the operations in each mode. Note that reference to option applies to the commands described on the &lt;a href=&#34;/archives/4.2.8-series/confopt&#34;&gt;Server Commands and Options&lt;/a&gt; page. See that page for applicability and defaults.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clientserver-mode&#34;&gt;Client/Server Mode&lt;/h4&gt;
&lt;p&gt;Client/server mode is the most common configuration in the Internet today. It operates in the classic remote-procedure-call (RPC) paradigm with stateless servers and stateful clients. In this mode a host sends a client (mode 3) request to the specified server and expects a server (mode 4) reply at some future time. In some contexts this would be described as a &amp;ldquo;pull&amp;rdquo; operation, in that the host pulls the time and related values from the server.&lt;/p&gt;
&lt;p&gt;A host is configured in client mode using the &lt;tt&gt;server&lt;/tt&gt; (sic) command and specifying the server DNS name or IPv4 or IPv6 address; the server requires no prior configuration. The &lt;tt&gt;iburst&lt;/tt&gt; option described later on this page is recommended for clients, as this speeds up initial synchronization from several minutes to several seconds. The &lt;tt&gt;burst&lt;/tt&gt; option described later on this page can be useful to reduce jitter on very noisy dial-up or ISDN network links.&lt;/p&gt;
&lt;p&gt;Ordinarily, the program automatically manages the poll interval between the default minimum and maximum values. The &lt;tt&gt;minpoll&lt;/tt&gt; and &lt;tt&gt;maxpoll&lt;/tt&gt; options can be used to bracket the range. Unless noted otherwise, these options should not be used with reference clock drivers.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;symmetric-activepassive-mode&#34;&gt;Symmetric Active/Passive Mode&lt;/h4&gt;
&lt;p&gt;Symmetric active/passive mode is intended for configurations where a clique of low-stratum peers operate as mutual backups for each other. Each peer operates with one or more primary reference sources, such as a reference clock, or a set of secondary (stratum, 2) servers known to be reliable and authentic. Should one of the peers lose all reference sources or simply cease operation, the other peers will automatically reconfigure so that time and related values can flow from the surviving peers to all hosts in the subnet. In some contexts this would be described as a &amp;ldquo;push-pull&amp;rdquo; operation, in that the peer either pulls or pushes the time and related values depending on the particular configuration.&lt;/p&gt;
&lt;p&gt;A symmetric active peer sends a symmetric active (mode 1) message to a designated peer. If a matching configured symmetric active association is found, the designated peer returns a symmetric active message. If no matching association is found, the designated peer mobilizes a ephemeral symmetric passive association and returns a symmetric passive (mode 2) message. Since an intruder can impersonate a symmetric active peer and cause a spurious symmetric passive association to be mobilized, symmetric passive mode should always be cryptographically validated.&lt;/p&gt;
&lt;p&gt;A peer is configured in symmetric active mode using the &lt;tt&gt;peer&lt;/tt&gt; command and specifying the other peer DNS name or IPv4 or IPv6 address. The &lt;tt&gt;burst&lt;/tt&gt; and &lt;tt&gt;iburst&lt;/tt&gt; options should not be used in symmetric modes, as this can upset the intended symmetry of the protocol and result in spurious duplicate or dropped messages.&lt;/p&gt;
&lt;p&gt;As symmetric modes are most often used as root servers for moderate to large subnets where rapid response is required, it is generally best to set the minimum and maximum poll intervals of each root server to the same value using the &lt;tt&gt;minpoll&lt;/tt&gt; and &lt;tt&gt;maxpoll&lt;/tt&gt; options.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;broadcastmulticast-modes&#34;&gt;Broadcast/Multicast Modes&lt;/h4&gt;
&lt;p&gt;NTP broadcast and multicast modes are intended for configurations involving one or a few servers and a possibly very large client population. Broadcast mode can be used with Ethernet, FDDI and WiFi spans interconnected by hubs or switches. Ordinarily, broadcast packets do not extend beyond a level-3 router. Where service is intended beyond a level-3 router, multicast mode can be used. Additional information is on the &lt;a href=&#34;/archives/4.2.8-series/discover&#34;&gt;Automatic NTP Configuration Options&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;A server is configured to send broadcast or multicast messages using the &lt;tt&gt;broadcast&lt;/tt&gt; command and specifying the subnet address for broadcast or the multicast group address for multicast. A broadcast client is enabled using the &lt;a href=&#34;/archives/4.2.8-series/confopt/#auxiliary-commands&#34;&gt;&lt;tt&gt;broadcastclient&lt;/tt&gt;&lt;/a&gt; command, while a multicast client is enabled using the &lt;a href=&#34;/archives/4.2.8-series/confopt/#auxiliary-commands&#34;&gt;&lt;tt&gt;multicastclient&lt;/tt&gt;&lt;/a&gt; command and specifying the multicast group address. Multiple commands of either type can be used. However, the association is not mobilized until the first broadcast or multicast message is actually received.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;manycast-and-pool-modes&#34;&gt;Manycast and Pool Modes&lt;/h4&gt;
&lt;p&gt;Manycast and pool modes are automatic discovery and configuration paradigms new to NTPv4. They are intended as a means for a client to troll the nearby network neighborhood to find cooperating willing servers, validate them using cryptographic means and evaluate their time values with respect to other servers that might be lurking in the vicinity. The intended result is that each client mobilizes ephemeral client associations with some number of the &amp;ldquo;best&amp;rdquo; of the nearby servers, yet automatically reconfigures to sustain this number of servers should one or another fail. Additional information is on the &lt;a href=&#34;/archives/4.2.8-series/discover&#34;&gt;Automatic Server Discovery Schemes&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;poll-interval-management&#34;&gt;Poll Interval Management&lt;/h4&gt;
&lt;p&gt;NTP uses an intricate heuristic algorithm to automatically control the poll interval for maximum accuracy consistent with minimum network overhead. The algorithm measures the incidental offset and jitter to determine the best poll interval. When &lt;tt&gt;ntpd&lt;/tt&gt; starts, the interval is the default minimum 64 s. Under normal conditions when the clock discipline has stabilized, the interval increases in steps to the default maximum 1024 s. In addition, should a server become unreachable after some time, the interval increases in steps to the maximum in order to reduce network overhead. Additional information about the algorithm is on the &lt;a href=&#34;/archives/4.2.8-series/poll&#34;&gt;Poll Program&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The default poll interval range is suitable for most conditions, but can be changed using options on the &lt;a href=&#34;/archives/4.2.8-series/confopt&#34;&gt;Server Commands and Options&lt;/a&gt; and &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; pages. However, when using maximum intervals much larger than the default, the residual clock frequency error must be small enough for the discipline loop to capture and correct. The capture range is 500 PPM with a 64-s interval decreasing by a factor of two for each interval doubling. At a 36-hr interval, for example, the capture range is only 0.24 PPM.&lt;/p&gt;
&lt;p&gt;In the NTPv4 specification and reference implementation, the poll interval is expressed in log&lt;sub&gt;2&lt;/sub&gt; units, properly called the &lt;em&gt;poll exponent.&lt;/em&gt; It is constrained by the lower limit &lt;tt&gt;minpoll&lt;/tt&gt; and upper limit &lt;tt&gt;maxpoll&lt;/tt&gt; options of the &lt;a href=&#34;/archives/4.2.8-series/confopt/#server-command-options&#34;&gt;&lt;tt&gt;server&lt;/tt&gt;&lt;/a&gt; command. The limits default to 6 (64 s) and 10 (1024 s), respectively, which are appropriate for the vast majority of cases.&lt;/p&gt;
&lt;p&gt;As a rule of thumb, the expected errors increase by a factor of two as the poll interval increases by a factor of four. The poll interval algorithm slowly increases the poll interval when jitter dominates the error budget, but quickly reduces the interval when wander dominates it. More information about this algorithm is on the &lt;a href=&#34;/archives/4.2.8-series/warp&#34;&gt;How NTP Works&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;There is normally no need to change the poll limits, as the poll interval is managed automatically as a function of prevailing jitter and wander. The most common exceptions are the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With fast, lightly loaded LANs and modern processors, the nominal Allan intercept is about 500 s. In these cases the expected errors can be further reduced using a poll exponent of 4 (16 s). In the case of the pulse-per-second (PPS) driver, this is the recommended value.&lt;/li&gt;
&lt;li&gt;With symmetric modes the most stable behavior results when both peers are configured in symmetric active mode with matching poll intervals of 6 (64 s).&lt;/li&gt;
&lt;li&gt;The poll interval should not be modified for reference clocks, with the single exception the ACTS telephone modem driver. In this case the recommended minimum and maximum intervals are 12 (1.1 hr) and 17 (36 hr), respectively.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;burst-options&#34;&gt;Burst Options&lt;/h4&gt;
&lt;p&gt;Occasionally it is necessary to send packets temporarily at intervals less than the poll interval. For instance, with the &lt;tt&gt;burst&lt;/tt&gt; and &lt;tt&gt;iburst&lt;/tt&gt; options of the &lt;a href=&#34;/archives/4.2.8-series/confopt/#server-command-options&#34;&gt;&lt;tt&gt;server&lt;/tt&gt;&lt;/a&gt; command, the poll program sends a burst of several packets at 2-s intervals. In either case the poll program avoids sending needless packets if the server is not responding. The client begins a burst with a single packet. When the first packet is received from the server, the client continues with the remaining packets in the burst. If the first packet is not received within 64 s, it will be sent again for two additional retries before beginning backoff. The result is to minimize network load if the server is not responding. Additional details are on the &lt;a href=&#34;/archives/4.2.8-series/poll&#34;&gt;Poll Program&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;There are two burst options where a single poll event triggers a burst. They should be used only with the &lt;tt&gt;server&lt;/tt&gt; and &lt;tt&gt;pool&lt;/tt&gt; commands, but not with reference clock drivers nor symmetric mode peers. In both modes, received server packets update the clock filter, which selects the best (most accurate) time values. When the last packet in the burst is sent, the next received packet updates the system variables and adjusts the system clock as if only a single packet exchange had occurred.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;iburst&lt;/tt&gt; option is useful where the system clock must be set quickly or when the network attachment requires an initial calling or training sequence, as in PPP or ISDN services. In general, this option is recommended for &lt;tt&gt;server&lt;/tt&gt; and &lt;tt&gt;pool&lt;/tt&gt; commands. A burst is sent only when the server is unreachable; in particular, when first starting up. Ordinarily, the clock is set within a few seconds after the first received packet. See the &lt;a href=&#34;/archives/4.2.8-series/clock&#34;&gt;Clock State Machine&lt;/a&gt; page for further details about the startup behavior.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;burst&lt;/tt&gt; option is useful in cases of severe network jitter or when the network attachment requires an initial calling or training sequence. This option is recommended when the minimum poll exponent is larger than 10 (1024 s). A burst is sent only when the server is reachable. The number of packets in the burst is determined by the poll interval so that the average interval between packets (headway) is no less than the minimum poll interval for the association.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Authentication Commands and Options</title>
      <link>/archives/4.2.8-series/authopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/authopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice44.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our resident cryptographer; now you see him, now you don&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Last update: 24-Jul-2018 07:27 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;commands-and-options&#34;&gt;Commands and Options&lt;/h4&gt;
&lt;p&gt;Unless noted otherwise, further information about these commands is on the &lt;a href=&#34;/archives/4.2.8-series/authentic&#34;&gt;Authentication Support&lt;/a&gt; page.&lt;/p&gt;
&lt;dt id=&#34;automax&#34;&gt;&lt;tt&gt;automax [_logsec_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the interval between regenerations of the session key list used with the Autokey protocol, as a power of 2 in seconds. Note that the size of the key list for each association depends on this interval and the current poll interval. The default interval is 12 (about 1.1 hr). For poll intervals above the specified interval, a session key list with a single entry will be regenerated for every message sent. See the &lt;a href=&#34;/archives/4.2.8-series/autokey&#34;&gt;Autokey Public Key Authentication&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;dt id=&#34;controlkey&#34;&gt;&lt;tt&gt;controlkey _keyid_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the key ID for the &lt;a href=&#34;/archives/4.2.8-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; utility, which uses the standard protocol defined in RFC-1305. The &lt;tt&gt;&lt;em&gt;keyid&lt;/em&gt;&lt;/tt&gt; argument is the key ID for a &lt;a href=&#34;/archives/4.2.8-series/authopt/#trustedkey&#34;&gt;trusted key&lt;/a&gt;, where the value can be in the range 1 to 65535, inclusive.&lt;/p&gt;
&lt;dt id=&#34;crypto&#34;&gt;&lt;tt&gt;crypto [digest _digest_] [host _name_] [ident _name_] [pw _password_] [randfile _file_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command activates the Autokey public key cryptography and loads the required host keys and certificate. If one or more files are unspecified, the default names are used. Unless the complete path and name of the file are specified, the location of a file is relative to the keys directory specified in the &lt;tt&gt;keysdir&lt;/tt&gt; configuration command with default &lt;tt&gt;/usr/local/etc&lt;/tt&gt;. See the &lt;a href=&#34;/archives/4.2.8-series/autokey&#34;&gt;Autokey Public Key Authentication&lt;/a&gt; page for further information. Following are the options.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;digest&lt;/tt&gt; _digest_&lt;/dt&gt;
&lt;p&gt;Specify the message digest algorithm, with default MD5. If the OpenSSL library is installed, &lt;tt&gt;&lt;em&gt;digest&lt;/em&gt;&lt;/tt&gt; can be any message digest algorithm supported by the library. The current selections are: &lt;tt&gt;MD2&lt;/tt&gt;, &lt;tt&gt;MD4&lt;/tt&gt;, &lt;tt&gt;MD5,&lt;/tt&gt; &lt;tt&gt;MDC2&lt;/tt&gt;, &lt;tt&gt;RIPEMD160&lt;/tt&gt;, &lt;tt&gt;SHA&lt;/tt&gt; and &lt;tt&gt;SHA1&lt;/tt&gt;. All participants in an Autokey subnet must use the same algorithm. The Autokey message digest algorithm is separate and distinct from the symmetric key message digest algorithm. Note: If compliance with FIPS 140-2 is required, the algorithm must be ether &lt;tt&gt;SHA&lt;/tt&gt; or &lt;tt&gt;SHA1&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;host _name_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the cryptographic media names for the host, sign and certificate files. If this option is not specified, the default name is the string returned by the Unix &lt;tt&gt;gethostname()&lt;/tt&gt; routine.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;style1&#34;&gt;Note: In the latest Autokey version, this option has no effect other than to change the cryptographic media file names.&lt;/span&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;ident _group_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the cryptographic media names for the identity scheme files. If this option is not specified, the default name is the string returned by the Unix &lt;tt&gt;gethostname()&lt;/tt&gt; routine.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;style1&#34;&gt;Note: In the latest Autokey version, this option has no effect other than to change the cryptographic media file names.&lt;/span&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pw _password_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the password to decrypt files previously encrypted by the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program with the &lt;tt&gt;-p&lt;/tt&gt; option. If this option is not specified, the default password is the string returned by the Unix &lt;tt&gt;gethostname()&lt;/tt&gt; routine.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;randfile _file_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the location of the random seed file used by the OpenSSL library. The defaults are described on the &lt;a href=&#34;/archives/4.2.8-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt; page&lt;/a&gt;.&lt;/p&gt;
&lt;dt id=&#34;ident&#34;&gt;&lt;tt&gt;ident _group_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the group name for ephemeral associations mobilized by broadcast and symmetric passive modes. See the &lt;a href=&#34;/archives/4.2.8-series/autokey&#34;&gt;Autokey Public-Key Authentication&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;dt id=&#34;keys&#34;&gt;&lt;tt&gt;keys _path_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the complete directory path for the key file containing the key IDs, key types and keys used by &lt;tt&gt;ntpd&lt;/tt&gt;, &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; when operating with symmetric key cryptography. The format of the keyfile is described on the &lt;a href=&#34;/archives/4.2.8-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt; page&lt;/a&gt;. This is the same operation as the &lt;tt&gt;-k&lt;/tt&gt; command line option. Note that the directory path for Autokey cryptographic media is specified by the &lt;tt&gt;keysdir&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt id=&#34;keysdir&#34;&gt;&lt;tt&gt;keysdir _path_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the complete directory path for the Autokey cryptographic keys, parameters and certificates. The default is &lt;tt&gt;/usr/local/etc/&lt;/tt&gt;. Note that the path for the symmetric keys file is specified by the &lt;tt&gt;keys&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt id=&#34;requestkey&#34;&gt;&lt;tt&gt;requestkey _keyid_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the key ID for the &lt;a href=&#34;/archives/4.2.8-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt;&lt;/a&gt; utility program, which uses a proprietary protocol specific to this implementation of &lt;tt&gt;ntpd&lt;/tt&gt;. The &lt;tt&gt;&lt;em&gt;keyid&lt;/em&gt;&lt;/tt&gt; argument is a key ID for a &lt;a href=&#34;/archives/4.2.8-series/authopt/#trustedkey&#34;&gt;trusted key&lt;/a&gt;, in the range 1 to 65535, inclusive.&lt;/p&gt;
&lt;dt id=&#34;revoke&#34;&gt;&lt;tt&gt;revoke [_logsec_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the interval between re-randomization of certain cryptographic values used by the Autokey scheme, as a power of 2 in seconds, with default 17 (36 hr). See the &lt;a href=&#34;/archives/4.2.8-series/autokey&#34;&gt;Autokey Public-Key Authentication&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;dt id=&#34;trustedkey&#34;&gt;&lt;tt&gt;trustedkey [_keyid_ | (_lowid_ ... _highid_)] [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the key ID(s) which are trusted for the purposes of authenticating peers with symmetric key cryptography. Key IDs used to authenticate &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; operations must be listed here and additionally be enabled with &lt;a href=&#34;/archives/4.2.8-series/authopt/#controlkey&#34;&gt;controlkey&lt;/a&gt; and/or &lt;a href=&#34;/archives/4.2.8-series/authopt/#requestkey&#34;&gt;requestkey&lt;/a&gt;. The authentication procedure for time transfer requires that both the local and remote NTP servers employ the same key ID and secret for this purpose, although different keys IDs may be used with different servers. Ranges of trusted key IDs may be specified: &lt;tt&gt;trustedkey (1 &amp;hellip; 19) 1000 (100 &amp;hellip; 199)&lt;/tt&gt; enables the lowest 120 key IDs which start with the digit 1. The spaces surrounding the ellipsis are required when specifying a range.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Authentication Support</title>
      <link>/archives/4.2.8-series/authentic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/authentic/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice44.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our resident cryptographer; now you see him, now you don&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Last update: 24-Jul-2018 09:12 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/authentic/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/authentic/#symmetric-key-cryptography&#34;&gt;Symmetric Key Cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/authentic/#microsoft-windows-authentication&#34;&gt;Microsoft Windows Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/authentic/#public-key-cryptography&#34;&gt;Public Key Cryptography&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This page describes the various cryptographic authentication provisions in NTPv4. Authentication support allows the NTP client to verify that servers are in fact known and trusted and not intruders intending accidentally or intentionally to masquerade as a legitimate server. A detailed discussion of the NTP multi-layer security model and vulnerability analysis is in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/security.html&#34;&gt;NTP Security Analysis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The NTPv3 specification (RFC-1305) defined an authentication scheme properly described as &lt;em&gt;symmetric key cryptography&lt;/em&gt;. It used the Data Encryption Standard (DES) algorithm operating in cipher-block chaining (CBC) mode. Subsequently, this algorithm was replaced by the RSA Message Digest 5 (MD5) algorithm commonly called keyed-MD5. Either algorithm computes a message digest or one-way hash which can be used to verify the client has the same message digest as the server. The MD5 message digest algorithm is included in the distribution, so without further cryptographic support, the distribution can be freely exported.&lt;/p&gt;
&lt;p&gt;If the OpenSSL cryptographic library is installed prior to building the distribution, all message digest algorithms included in the library may be used, including SHA and SHA1. However, if conformance to FIPS 140-2 is required, only a limited subset of these algorithms can be used. This library is available from &lt;a href=&#34;https://www.openssl.org&#34;&gt;here&lt;/a&gt; and can be installed using the procedures outlined in the &lt;a href=&#34;/archives/4.2.8-series/build&#34;&gt;Building and Installing the Distribution&lt;/a&gt; page. Once installed, the configure and build process automatically detects the library and links the library routines required.&lt;/p&gt;
&lt;p&gt;In addition to the symmetric key algorithms, this distribution includes support for the Autokey public key algorithms and protocol specified in RFC-5906 &amp;ldquo;Network Time Protocol Version 4: Autokey Specification&amp;rdquo;. This support is available only if the OpenSSL library has been installed and the &lt;tt&gt;&amp;ndash;enable-autokey&lt;/tt&gt; option is used when the distribution is built.&lt;/p&gt;
&lt;p&gt;Public key cryptography is generally considered more secure than symmetric key cryptography, since the security is based on private and public values which are generated by each participant and where the private value is never revealed. Autokey uses X.509 public certificates, which can be produced by commercial services, the OpenSSL application program, or the &lt;a href=&#34;/archives/4.2.8-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt;&lt;/a&gt; utility program in the NTP software distribution.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    According to US law, NTP binaries including OpenSSL library components, including the OpenSSL library itself, cannot be exported outside the US without license from the US Department of Commerce. Builders outside the US are advised to obtain the OpenSSL library directly from OpenSSL, which is outside the US, and build outside the US.

&lt;/div&gt;

&lt;p&gt;Authentication is configured separately for each association using the &lt;tt&gt;key&lt;/tt&gt; or &lt;tt&gt;autokey&lt;/tt&gt; option of the &lt;tt&gt;server&lt;/tt&gt; configuration command, as described in the &lt;a href=&#34;/archives/4.2.8-series/confopt/#server-command-options&#34;&gt;Server Options&lt;/a&gt; page. The &lt;a href=&#34;/archives/4.2.8-series/keygen&#34;&gt;ntp-keygen&lt;/a&gt; page describes the files required for the various authentication schemes. Further details are in the briefings, papers and reports at the NTP project page linked from &lt;a href=&#34;http://www.ntp.org&#34;&gt;www.ntp.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By default, the client sends non-authenticated packets and the server responds with non-authenticated packets. If the client sends authenticated packets, the server responds with authenticated packets if correct, or a crypto-NAK packet if not. In the case of unsolicited packets which might consume significant resources, such as broadcast or symmetric mode packets, authentication is required, unless overridden by a &lt;tt&gt;disable auth&lt;/tt&gt; command. In the current climate of targeted broadcast or &amp;ldquo;letterbomb&amp;rdquo; attacks, defeating this requirement would be decidedly dangerous. In any case, the &lt;tt&gt;notrust&lt;/tt&gt; flag, described on the &lt;a href=&#34;/archives/4.2.8-series/accopt&#34;&gt;Access Control Options&lt;/a&gt; page, can be used to disable access to all but correctly authenticated clients.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;symmetric-key-cryptography&#34;&gt;Symmetric Key Cryptography&lt;/h4&gt;
&lt;p&gt;The original NTPv3 specification (RFC-1305), as well as the current NTPv4 specification (RFC-5905), allows any one of possibly 65,535 message digest keys (excluding zero), each distinguished by a 32-bit key ID, to authenticate an association. The servers and clients involved must agree on the key ID, key type and key to authenticate NTP packets.&lt;/p&gt;
&lt;p&gt;The message digest is a cryptographic hash computed by an algorithm such as MD5, SHA, or AES-128 CMAC. When authentication is specified, a message authentication code (MAC) is appended to the NTP packet header. The MAC consists of a 32-bit key identifier (key ID) followed by a 128- or 160-bit message digest. The algorithm computes the digest as the hash of a 128- or 160- bit message digest key concatenated with the NTP packet header fields with the exception of the MAC. On transmit, the message digest is computed and inserted in the MAC. On receive, the message digest is computed and compared with the MAC. The packet is accepted only if the two MACs are identical. If a discrepancy is found by the client, the client ignores the packet, but raises an alarm. If this happens at the server, the server returns a special message called a &lt;em&gt;crypto-NAK&lt;/em&gt;. Since the crypto-NAK is protected by the loopback test, an intruder cannot disrupt the protocol by sending a bogus crypto-NAK.&lt;/p&gt;
&lt;p&gt;Keys and related information are specified in a keys file, which must be distributed and stored using secure means beyond the scope of the NTP protocol itself. Besides the keys used for ordinary NTP associations, additional keys can be used as passwords for the &lt;tt&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq&#34;&gt;ntpq&lt;/a&gt;&lt;/tt&gt; and &lt;tt&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdc&#34;&gt;ntpdc&lt;/a&gt;&lt;/tt&gt; utility programs. Ordinarily, the &lt;tt&gt;ntp.keys&lt;/tt&gt; file is generated by the &lt;tt&gt;&lt;a href=&#34;/archives/4.2.8-series/keygen&#34;&gt;ntp-keygen&lt;/a&gt;&lt;/tt&gt; program, but it can be constructed and edited using an ordinary text editor.&lt;/p&gt;
&lt;p&gt;Each line of the keys file consists of three or four fields: a key ID in the range 1 to 65,535, inclusive, a key type, a message digest key consisting of a printable ASCII string less than 40 characters or a 40-character hex digit string, and an optional comma-separated list of IPs that are allowed to serve time. If the OpenSSL library is installed, the key type can be any message digest algorithm supported by the library. If the OpenSSL library is not installed, the only permitted key type is MD5.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Typical Symmetric Key File&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/md5.png&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 1 shows a typical symmetric keys file used by the reference implementation when the OpenSSL library is installed. Each line of the file contains three or four fields. The first field is an integer between 1 and 65535, inclusive, representing the key identifier. The second field is the digest algorithm, which in the absence of the OpenSSL library must be &lt;tt&gt;MD5&lt;/tt&gt;, which designates the MD5 message digest algorithm. The third field is the key. The optional fourth field is one or more comma-separated IPs. An IP may end with an optional &lt;tt&gt;/subnetbits&lt;/tt&gt; suffix, which limits the acceptance of the key identifier to packets claiming to be from the described IP space. In this example, for the key IDs in the range 1-10 the key is interpreted as a printable ASCII string. For the key IDs in the range 11-20, the key is a 40-character hex digit string. In either case, the key is truncated or zero-filled internally to either 128 or 160 bits, depending on the key type. The line can be edited later or new lines can be added to change any field. The key can be changed to a password, such as &lt;tt&gt;2late4Me&lt;/tt&gt; for key ID 10. Note that two or more keys files can be combined in any order as long as the key IDs are distinct.&lt;/p&gt;
&lt;p&gt;When &lt;tt&gt;ntpd&lt;/tt&gt; is started, it reads the keys file specified by the &lt;tt&gt;keys&lt;/tt&gt; command and installs the keys in the key cache. However, individual keys must be activated with the &lt;tt&gt;trustedkey&lt;/tt&gt; configuration command before use. This allows, for instance, the installation of possibly several batches of keys and then activating a key remotely using &lt;tt&gt;ntpq&lt;/tt&gt; or &lt;tt&gt;ntpdc&lt;/tt&gt;. The &lt;tt&gt;requestkey&lt;/tt&gt; command selects the key ID used as the password for the &lt;tt&gt;ntpdc&lt;/tt&gt; utility, while the &lt;tt&gt;controlkey&lt;/tt&gt; command selects the key ID used as the password for the &lt;tt&gt;ntpq&lt;/tt&gt; utility.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;microsoft-windows-authentication&#34;&gt;Microsoft Windows Authentication&lt;/h4&gt;
&lt;p&gt;In addition to the above means, &lt;tt&gt;ntpd&lt;/tt&gt; now supports Microsoft Windows MS-SNTP authentication using Active Directory services. This support was contributed by the Samba Team and is still in development. It is enabled using the &lt;tt&gt;mssntp&lt;/tt&gt; flag of the &lt;tt&gt;restrict&lt;/tt&gt; command described on the &lt;a href=&#34;/archives/4.2.8-series/accopt/#commands-and-options&#34;&gt;Access Control Options&lt;/a&gt; page.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    Potential users should be aware that these services involve a TCP connection to another process that could potentially block, denying services to other users. Therefore, this flag should be used only for a dedicated server with no clients other than MS-SNTP.

&lt;/div&gt;

&lt;hr&gt;
&lt;h4 id=&#34;public-key-cryptography&#34;&gt;Public Key Cryptography&lt;/h4&gt;
&lt;p&gt;See the &lt;a href=&#34;/archives/4.2.8-series/autokey&#34;&gt;Autokey Public-Key Authentication&lt;/a&gt; page.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Autokey Public-Key Authentication</title>
      <link>/archives/4.2.8-series/autokey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/autokey/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 3-Oct-2011 21:51 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/autokey/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/autokey#autokey-subnets&#34;&gt;Autokey Subnets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/autokey/#subnet-group-names&#34;&gt;Subnet Group Names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/autokey/#secure-groups&#34;&gt;Secure Groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/autokey/#configuration---authentication-schemes&#34;&gt;Configuration - Authentication Schemes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/autokey/#configuration---identity-schemes&#34;&gt;Configuration - Identity Schemes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/autokey/#identity-schemes-and-cryptotypes&#34;&gt;Identity Schemes and Cryptotypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/autokey/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This distribution includes support for the Autokey public key algorithms and protocol specified in RFC-5906 &amp;ldquo;Network Time Protocol Version 4: Autokey Specification&amp;rdquo;. This support is available only if the OpenSSL library has been installed and the &lt;tt&gt;&amp;ndash;enable-autokey&lt;/tt&gt; option is specified when the distribution is built.&lt;/p&gt;
&lt;p&gt;Public key cryptography is generally considered more secure than symmetric key cryptography. Symmetric key cryptography is based on a shared secret key which must be distributed by secure means to all participants. Public key cryptography is based on a private secret key known only to the originator and a public key known to all participants. A recipient can verify the originator has the correct private key using the public key and any of several digital signature algorithms.&lt;/p&gt;
&lt;p&gt;The Autokey Version 2 protocol described on the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/proto.html&#34;&gt;Autokey Protocol&lt;/a&gt; page verifies packet integrity using message digest algorithms, such as MD5 or SHA, and verifies the source using digital signature schemes, such as RSA or DSA. As used in Autokey, message digests are exceptionally difficult to cryptanalyze, as the keys are used only once.&lt;/p&gt;
&lt;p&gt;Optional identity schemes described on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ident.html&#34;&gt;Autokey Identity Schemes&lt;/a&gt; page are based on cryptographic challenge/response exchanges. Optional identity schemes provide strong security against masquerade and most forms of clogging attacks. These schemes are exceptionally difficult to cryptanalyze, as the challenge/response exchange data are used only once. They are described along with an executive summary, current status, briefing slides and reading list on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/autokey.html&#34;&gt;Autonomous Authentication&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Autokey authenticates individual packets using cookies bound to the IP source and destination addresses. The cookies must have the same IP addresses at both the server and client. For this reason operation with network address translation schemes is not possible. This reflects the intended robust security model where government and corporate NTP servers and clients are operated outside firewall perimeters.&lt;/p&gt;
&lt;p&gt;Autokey is designed to authenticate servers to clients, not the other way around as in SSH. An Autokey server can support an authentication scheme such as the Trusted Certificate (TC) scheme described in RFC 5906, while a client is free to choose between the various options. It is important to understand that these provisions are optional and that selection of which option is at the discretion of the client. If the client does not require authentication, it is free to ignore it, even if some other client of the same server elects to participate in either symmetric key or public key cryptography.&lt;/p&gt;
&lt;p&gt;Autokey uses industry standard X.509 public certificates, which can be produced by commercial services, utility programs in the OpenSSL software library, and the &lt;a href=&#34;/archives/4.2.8-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt;&lt;/a&gt; utility program in the NTP software distribution. A certificate includes the subject name of the client, the issuer name of the server, the public key of the client and the time period over which the public and private keys are valid. All Autokey hosts have a self-signed certificate with the Autokey name as both the subject and issuer. During the protocol, additional certificates are produced with the Autokey host name as subject and the host that signs the certificate as issuer.&lt;/p&gt;
&lt;p&gt;There are two timeouts associated with the Autokey scheme. The &lt;em&gt;key list timeout&lt;/em&gt; is set by the &lt;tt&gt;automax&lt;/tt&gt; command, which specifies the interval between generating new key lists by the client or server. The default timeout of about 1.1 hr is appropriate for the majority of configurations and ordinarily should not be changed. The &lt;em&gt;revoke timeout&lt;/em&gt; is set by the &lt;tt&gt;revoke&lt;/tt&gt; command, which specifies the interval between generating new server private values. It is intended to reduce the vulnerability to cryptanalysis; however, new values require the server to encrypt each client cookie separately. The default timeout of about 36 hr is appropriate for most servers, but might be too short for national time servers.&lt;/p&gt;
&lt;h4 id=&#34;autokey-subnets&#34;&gt;Autokey Subnets&lt;/h4&gt;
&lt;p&gt;An Autokey subnet consists of a collection of hosts configured as an acyclic, directed tree with roots one or more trusted hosts (THs) operating at the lowest stratum of the subnet. Note that the requirement that the NTP subnet be acyclic means that, if two hosts are configured with each other in symmetric modes, each must be a TH. The THs are synchronized directly or indirectly to national time services via trusted means, such as radio, satellite or telephone modem, or one or more trusted agents (TAs) of a parent subnet. NTP subnets can be nested, with the THs of a child subnet configured for one or more TAs of a parent subnet. The TAs can serve one or more child subnets, each with its own security policy and set of THs.&lt;/p&gt;
&lt;p&gt;A certificate trail is a sequence of certificates, each signed by a host one step closer to the THs and terminating at the self-signed certificate of a TH. The requirement that the subnet be acyclic means certificate trails can never loop. NTP servers operate as certificate authorities (CAs) to sign certificates provided by their clients. The CAs include the TAs of the parent subnet and those subnet servers with dependent clients.&lt;/p&gt;
&lt;p&gt;In order for the signature to succeed, the client certificate valid period must begin within the valid period of the server certificate. If the server period begins later than the client period, the client certificate has expired; if the client period begins later than the server period, the server certificate has expired.&lt;/p&gt;
&lt;p&gt;The Autokey protocol runs for each association separately, During the protocol, the client recursively obtains the certificates on the trail to a TH, saving each in a cache ordered from most recent to oldest. If an expired certificate is found, it is invalidated and marked for later replacement. As the client certificate itself is not involved in the certificate trail, it can only be declared valid or expired when the server signs it.&lt;/p&gt;
&lt;p&gt;The certificates derived from each association are combined in the cache with duplicates suppressed. If it happens that two different associations contribute certificates to the cache, a certificate on the trail from one association could expire before any on another trail. In this case the remaining trails will survive until the expired certificate is replaced. Once saved in the cache, a certificate remains valid until it expires or is replaced by a new one.&lt;/p&gt;
&lt;p&gt;It is important to note that the certificate trail is validated only at startup when an association is mobilized. Once validated in this way, the server remains valid until it is demobilized, even if certificates on the trail to the THs expire. While the certificate trail authenticates each host on the trail to the THs, it does not validate the time values themselves. Ultimately, this is determined by the NTP on-wire protocol.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/flt8.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Example Configuration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Figure 1 shows an example configuration with three NTP subnets, Alice, Helen and Carol. Alice and Helen are parent groups for Carol with TA C belonging to Alice and TA S belonging to Helen. Hosts A and B are THs of Alice, host R is the TH of Helen and host X is the TH of Carol. Assume that all associations are client/server, child subnet TH X has two mobilized associations, one to Alice TA host C and the other to Carol TA host S. While not shown in the figure, Alice hosts A and B could configure symmetric mode associations between them for redundancy and backup.&lt;/p&gt;
&lt;p&gt;Note that host D certificate trail is D→C→A or D→C→B, depending on the particular order the trails are built. Host Y certificate trail is only Y→X, since X is a TH. Host X has two certificate trails X→C→A or X→C→B, and X→S→R.&lt;/p&gt;
&lt;h4 id=&#34;subnet-group-names&#34;&gt;Subnet Group Names&lt;/h4&gt;
&lt;p&gt;In some configurations where more than one subnet shares an Ethernet or when multiple subnets exist in a manycast or pool configuration, it is useful to isolate one subnet from another. In Autokey this can be done using group names. An Autokey host name is specified by the &lt;tt&gt;-s&lt;/tt&gt;&lt;tt&gt; &lt;em&gt;host&lt;/em&gt;@&lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; option of the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program, where &lt;em&gt;&lt;tt&gt;host&lt;/tt&gt;&lt;/em&gt; is the host name and &lt;em&gt;&lt;tt&gt;group&lt;/tt&gt;&lt;/em&gt; is the group name. If &lt;em&gt;&lt;tt&gt;host&lt;/tt&gt;&lt;/em&gt; is omitted, the name defaults to the string returned by the Unix &lt;tt&gt;gethostname()&lt;/tt&gt; routine, ordinarily the DNS name of the host. Thus, for host &lt;tt&gt;beauregard.udel.edu&lt;/tt&gt; the option &lt;tt&gt;-s @red&lt;/tt&gt; specifies the Autokey host name &lt;tt&gt;beauegard.udel.edu@red&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;A subnet host with a given group name will discard ASSOC packets from all subnets with a different group name. This effectively disables the Autokey protocol without additional packet overhead. For instance, one or more manycast or pool servers will not respond to ASSOC packets from subnets with difference group names. Groups sharing an Ethernet will be filtered in the same way.&lt;/p&gt;
&lt;p&gt;However, as shown in Figure 1, there are configurations where a TH of one group needs to listen to a TA of a different group. This is accomplished using the &lt;tt&gt;ident &lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; command and/or the &lt;tt&gt;ident &lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; option of the &lt;tt&gt;server&lt;/tt&gt; command. The former case applies to all hosts sharing a common broadcast, manycast or symmetric passive modes, while the latter case applies to each individual client/server or symmetric active mode association. In either case the host listens to the specified group name in addition to the group name specified in the &lt;tt&gt;-s&lt;/tt&gt; option of the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program.&lt;/p&gt;
&lt;h4 id=&#34;secure-groups&#34;&gt;Secure Groups&lt;/h4&gt;
&lt;p&gt;NTP security groups are an extension of the NTP subnets described in the previous section. They include in addition to certificate trails one or another identity schemes described on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ident.html&#34;&gt;Autokey Identity Schemes&lt;/a&gt; page. NTP secure groups are used to define cryptographic compartments and security hierarchies. The identity scheme insures that the server is authentic and not victim of masquerade by an intruder acting as a middleman.&lt;/p&gt;
&lt;p&gt;An NTP secure group is an NTP subnet configured as an acyclic tree rooted on the THs. The THs are at the lowest stratum of the secure group. They run an identity exchange with the TAs of parent subnets All group hosts construct an unbroken certificate trail from each host, possibly via intermediate hosts, and ending at a TH of that group. The TH verifies authenticity with the TA of the parent subnet using an identity exchange.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/flt9.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 2: Identify Scheme&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The identity exchange is run between a TA acting as a server and a TH acting as a client. As shown in Figure 2, the identity exchange involves a challenge-response protocol where a client generates a nonce and sends it to the server. The server performs a mathematical operation involving a second nonce and the secret group key, and sends the result along with a hash to the client. The client performs a another mathematical operation and verifies the result with the hash.&lt;/p&gt;
&lt;p&gt;Since each exchange involves two nonces, even after repeated observations of many exchanges, an intruder cannot learn the secret group key. It is this quality that allows the secret group key to persist long after the longest period of certificate validity. In the Schnorr (Identify Friend or Foe - IFF) scheme, the secret group key is not divulged to the clients, so they cannot conspire to prove identity to other hosts.&lt;/p&gt;
&lt;p&gt;As described on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ident.html&#34;&gt;Autokey Identity Schemes&lt;/a&gt; page, there are five identity schemes, three of which - IFF, GQ and MV - require identity files specific to each scheme. There are two types of files for each scheme, an encrypted server keys file and a nonencrypted client keys file, also called the parameters file, which usually contains a subset of the keys file.&lt;/p&gt;
&lt;p&gt;Figure 2 shows how keys and parameters are distributed to servers and clients. A TA constructs the encrypted keys file and the nonencrypted parameters file. Hosts with no dependent clients can retrieve client parameter files from an archive or web page. The &lt;tt&gt;ntp-keygen&lt;/tt&gt; program can export parameter files using the &lt;tt&gt;-e&lt;/tt&gt; option. By convention, the file name is the name of the secure group and must match the &lt;tt&gt;ident&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; command or the &lt;tt&gt;ident&lt;/tt&gt; option of the &lt;tt&gt;server&lt;/tt&gt; command.&lt;/p&gt;
&lt;p&gt;When more than one TH Is involved in the secure group, it is convenient for the TAs and THs to use the same encrypted key files. To do this, one of the parent TAs includes the &lt;tt&gt;-i &lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; option on the &lt;tt&gt;ntp-keygen&lt;/tt&gt; command line, where &lt;em&gt;&lt;tt&gt;group&lt;/tt&gt;&lt;/em&gt; is the name of the child secure group. The &lt;tt&gt;ntp-keygen&lt;/tt&gt; program can export server keys files using the &lt;tt&gt;-q&lt;/tt&gt; option and a chosen remote password. The files are installed on the TAs and then renamed using the name given as the first line in the file, but without the filestamp. The secure group name must match the &lt;tt&gt;ident&lt;/tt&gt; option for all TAs.&lt;/p&gt;
&lt;p&gt;In the latest Autokey version, the host name and group name are independent of each other and the &lt;tt&gt;host&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; command is deprecated. When compatibility with older versions is required, specify the same name for both the &lt;tt&gt;-s&lt;/tt&gt; and &lt;tt&gt;-i&lt;/tt&gt; options.&lt;/p&gt;
&lt;p&gt;In special circumstances the Autokey message digest algorithm can be changed using the &lt;tt&gt;digest&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; command. The digest algorithm is separate and distinct from the symmetric key message digest algorithm. If compliance with FIPS 140-2 is required, the algorithm must be ether &lt;tt&gt;SHA&lt;/tt&gt; or &lt;tt&gt;SHA1&lt;/tt&gt;. The Autokey message digest algorithm must be the same for all participants in the NTP subnet.&lt;/p&gt;
&lt;p&gt;Returning to the example of Figure 1, Alice, Helen and Carol run run the Trusted Certificate (TC) scheme, internally, as the environment is secure and without threat from external attack, in particular a middleman masquerade. However, TH X of Carol is vulnerable to masquerade on the links between X and C and between X and S. Therefore, both parent subnet TAs C and S run an identity exchange with child subnet TH X. Both have the same encrypted keys file and X the common parameters file.&lt;/p&gt;
&lt;h4 id=&#34;configuration---authentication-schemes&#34;&gt;Configuration - Authentication Schemes&lt;/h4&gt;
&lt;p&gt;Autokey has an intimidating number of options, most of which are not necessary in typical scenarios. However, the Trusted Certificate (TC) scheme is recommended for national NTP time services, such as those operated by NIST and USNO. Configuration for TC is very simple.&lt;/p&gt;
&lt;p&gt;Referring to Figure 1, for each TH, A, B, R and X, as root:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# cd /usr/local/etc&lt;/code&gt;&lt;br&gt;
&lt;code&gt;# ntp-keygen -T&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and for the other hosts the same commands without the &lt;tt&gt;-T&lt;/tt&gt; option. This generates an RSA private/public host key file and a self-signed certificate file for the RSA digital signature algorithm with the MD5 message digest algorithm. For the THs a trusted certificate is generated; for the others a nontreusted certificate is generated. Include in the &lt;tt&gt;ntp.conf&lt;/tt&gt; configuration file for all hosts other than the primary servers, A, B and R, something like&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# server _host_ autokey&lt;/code&gt;&lt;br&gt;
&lt;code&gt;# crypto&lt;/code&gt;&lt;br&gt;
&lt;code&gt;# driftfile /etc/ntp.drift&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;where &lt;em&gt;&lt;tt&gt;host&lt;/tt&gt;&lt;/em&gt; is the selected server name as shown in the figure. Servers A, B and R are configured for local reference clocks or trusted remoter servers as required.&lt;/p&gt;
&lt;p&gt;In the above configuration examples, the default host name is the string returned by the Unix &lt;tt&gt;gethostname()&lt;/tt&gt; routine, ordinarily the DNS name of the host. This name is used as the subject and issuer names on the certificate, as well as the default password for the encrypted keys file. The host name can be changed using the &lt;tt&gt;-s&lt;/tt&gt; option of the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program. The default password can be changed using the &lt;tt&gt;-p&lt;/tt&gt; option of the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program and the &lt;tt&gt;pw&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;p&gt;Group names can be added to this configuration by including the &lt;tt&gt;-s &lt;em&gt;host&lt;/em&gt;@&lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; option with the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program. For the purpose of illustration, the &lt;tt&gt;&lt;em&gt;host&lt;/em&gt;&lt;/tt&gt; string is empty, signifying the default host name. For example, @&lt;tt&gt;yellow&lt;/tt&gt; can be used for the Alice group, @&lt;tt&gt;orange&lt;/tt&gt; for the Helen group and @&lt;tt&gt;blue&lt;/tt&gt; for the Carol group. In addition, for TH X the &lt;tt&gt;ident yellow&lt;/tt&gt; option should be added to the &lt;tt&gt;server&lt;/tt&gt; command for the Alice group and the &lt;tt&gt;ident orange&lt;/tt&gt; option should be added to the &lt;tt&gt;server&lt;/tt&gt; command for the Helen group.&lt;/p&gt;
&lt;h4 id=&#34;configuration---identity-schemes&#34;&gt;Configuration - Identity Schemes&lt;/h4&gt;
&lt;p&gt;The example in this section uses the IFF identity scheme, but others, including GQ and MV, can be used as well. It&amp;rsquo;s best to start with a functioning TC configuration and add commands as necessary. We start with the subnets of Figure 1 configured as in the previous section. Recall that the parent subnet TA for Alice is C and for Helen is S. Each of the TAs generates an encrypted server keys file and nonencrypted client parameters file for the IFF identity scheme using the &lt;tt&gt;-I&lt;/tt&gt; option of the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program. Note the TAs are not necessarily trusted hosts, so may not need the &lt;tt&gt;-T&lt;/tt&gt; option.&lt;/p&gt;
&lt;p&gt;The nonencrypted client parameters can be exported using the command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ntp-keygen -e &amp;gt; file&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;where the &lt;tt&gt;-e&lt;/tt&gt; option redirects the client parameters to &lt;em&gt;&lt;tt&gt;file&lt;/tt&gt;&lt;/em&gt; via the standard output stream for a mail application or stored locally for later distribution to one or more THs. In a similar fashion the encrypted keys file can be exported using the command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ntp-keygen -q passw2 &amp;gt; file&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;where &lt;em&gt;&lt;tt&gt;passwd2&lt;/tt&gt;&lt;/em&gt; is the read password for another TA. We won&amp;rsquo;t need this file here.&lt;/p&gt;
&lt;p&gt;While the file names used for the exported files are arbitrary, it is common practice to use the name given as the first line in the file with the filestamp suppressed. Thus, the nonencryted parameters file from each TA is copied to X with this name.&lt;/p&gt;
&lt;p&gt;To complete the configuration, the TH includes the client parameters file name in the &lt;tt&gt;ident&lt;/tt&gt; option of the &lt;tt&gt;server&lt;/tt&gt; command for the TA association:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;server 1.2.3.4 ident group&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;where &lt;em&gt;&lt;tt&gt;group&lt;/tt&gt;&lt;/em&gt; is the file name given above.&lt;/p&gt;
&lt;h4 id=&#34;identity-schemes-and-cryptotypes&#34;&gt;Identity Schemes and Cryptotypes&lt;/h4&gt;
&lt;p&gt;A specific combination of authentication and identity schemes is called a &lt;em&gt;cryptotype&lt;/em&gt;, which applies to clients and servers separately. A group can be configured using more than one cryptotype combination, although not all combinations are interoperable. Note however that some cryptotype combinations may successfully intemperate with each other, but may not represent good security practice. The server and client cryptotypes are defined by the following codes.&lt;/p&gt;
&lt;dt&gt;NONE&lt;/dt&gt;
&lt;p&gt;A client or server is type NONE if authentication is not available or not configured. Packets exchanged between client and server have no MAC.&lt;/p&gt;
&lt;dt&gt;AUTH&lt;/dt&gt;
&lt;p&gt;A client or server is type AUTH if the &lt;tt&gt;key&lt;/tt&gt; option is specified with the &lt;tt&gt;server&lt;/tt&gt; configuration command and the client and server keys are compatible. Packets exchanged between clients and servers have a MAC.&lt;/p&gt;
&lt;dt&gt;PC&lt;/dt&gt;
&lt;p&gt;A client or server is type PC if the &lt;tt&gt;autokey&lt;/tt&gt; option is specified with the &lt;tt&gt;server&lt;/tt&gt; configuration command and compatible host key and private certificate files are present. Packets exchanged between clients and servers have a MAC.&lt;/p&gt;
&lt;dt&gt;TC&lt;/dt&gt;
&lt;p&gt;A client or server is type TC if the &lt;tt&gt;autokey&lt;/tt&gt; option is specified with the &lt;tt&gt;server&lt;/tt&gt; configuration command and compatible host key and public certificate files are present. Packets exchanged between clients and servers have a MAC.&lt;/p&gt;
&lt;dt&gt;IDENT&lt;/dt&gt;
&lt;p&gt;A client or server is type IDENT if the &lt;tt&gt;autokey&lt;/tt&gt; option is specified with the &lt;tt&gt;server&lt;/tt&gt; configuration command and compatible host key, public certificate and identity scheme files are present. Packets exchanged between clients and servers have a MAC.&lt;/p&gt;
&lt;p&gt;The compatible cryptotypes for clients and servers are listed in the following table.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Client&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Server&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;NONE&lt;/td&gt;
&lt;td&gt;AUTH&lt;/td&gt;
&lt;td&gt;PC&lt;/td&gt;
&lt;td&gt;TC&lt;/td&gt;
&lt;td&gt;IDENT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NONE&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes*&lt;/td&gt;
&lt;td&gt;yes*&lt;/td&gt;
&lt;td&gt;yes*&lt;/td&gt;
&lt;td&gt;yes*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AUTH&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PC&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TC&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IDENT&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;* These combinations are not valid if the restriction list includes the &lt;tt&gt;notrust&lt;/tt&gt; option.&lt;/p&gt;
&lt;h4 id=&#34;error-codes&#34;&gt;Error Codes&lt;/h4&gt;
&lt;p&gt;Errors can occur due to mismatched configurations, unexpected protocol restarts, expired certificates and unfriendly people. In most cases the protocol state machine recovers automatically by retransmission, timeout and restart, where necessary. Some errors are due to mismatched keys, digest schemes or identity schemes and must be corrected by installing the correct media and/or correcting the configuration file. One of the most common errors is expired certificates, which must be regenerated and signed at least once per year using the &lt;a href=&#34;/archives/4.2.8-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt;&lt;/a&gt; program.&lt;/p&gt;
&lt;p&gt;The following error codes are reported via the NTP control and monitoring protocol trap mechanism and to the &lt;tt&gt;cryptostats&lt;/tt&gt; monitoring file if configured.&lt;/p&gt;
&lt;dt&gt;101 bad field format or length&lt;/dt&gt;
&lt;p&gt;The packet has invalid version, length or format.&lt;/p&gt;
&lt;dt&gt;102 bad timestamp&lt;/dt&gt;
&lt;p&gt;The packet timestamp is the same or older than the most recent received. This could be due to a replay or a server clock time step.&lt;/p&gt;
&lt;dt&gt;103 bad filestamp&lt;/dt&gt;
&lt;p&gt;The packet filestamp is the same or older than the most recent received. This could be due to a replay or a key file generation error.&lt;/p&gt;
&lt;dt&gt;104 bad or missing public key&lt;/dt&gt;
&lt;p&gt;The public key is missing, has incorrect format or is an unsupported type.&lt;/p&gt;
&lt;dt&gt;105 unsupported digest type&lt;/dt&gt;
&lt;p&gt;The server requires an unsupported digest/signature scheme.&lt;/p&gt;
&lt;dt&gt;106 unsupported identity type&lt;/dt&gt;
&lt;p&gt;The client or server has requested an identity scheme the other does not support.&lt;/p&gt;
&lt;dt&gt;107 bad signature length&lt;/dt&gt;
&lt;p&gt;The signature length does not match the current public key.&lt;/p&gt;
&lt;dt&gt;108 signature not verified&lt;/dt&gt;
&lt;p&gt;The message fails the signature check. It could be bogus or signed by a different private key.&lt;/p&gt;
&lt;dt&gt;109 certificate not verified&lt;/dt&gt;
&lt;p&gt;The certificate is invalid or signed with the wrong key.&lt;/p&gt;
&lt;dt&gt;110 host certificate expired&lt;/dt&gt;
&lt;p&gt;The old server certificate has expired.&lt;/p&gt;
&lt;dt&gt;111 bad or missing cookie&lt;/dt&gt;
&lt;p&gt;The cookie is missing, corrupted or bogus.&lt;/p&gt;
&lt;dt&gt;112 bad or missing leapseconds table&lt;/dt&gt;
&lt;p&gt;The leapseconds table is missing, corrupted or bogus.&lt;/p&gt;
&lt;dt&gt;113 bad or missing certificate&lt;/dt&gt;
&lt;p&gt;The certificate is missing, corrupted or bogus.&lt;/p&gt;
&lt;dt&gt;114 bad or missing group key&lt;/dt&gt;
&lt;p&gt;The identity key is missing, corrupt or bogus.&lt;/p&gt;
&lt;dt&gt;115 protocol error&lt;/dt&gt;
&lt;p&gt;The protocol state machine has wedged due to unexpected restart.&lt;/p&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;p&gt;See the &lt;a href=&#34;/archives/4.2.8-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt;&lt;/a&gt; page. Note that provisions to load leap second values from the NIST files have been removed. These provisions are now available whether or not the OpenSSL library is available. However, the functions that can download these values from servers remains available.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Automatic Server Discovery Schemes</title>
      <link>/archives/4.2.8-series/discover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/discover/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice51.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Make sure who your friends are.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:04 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/discover/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/discover/#association-management&#34;&gt;Association Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/discover/#broadcastmulticast-scheme&#34;&gt;Broadcast/Multicast Scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/discover/#manycast-scheme&#34;&gt;Manycast Scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/discover/#server-pool-scheme&#34;&gt;Server Pool Scheme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This page describes the automatic server discovery schemes provided in NTPv4. There are three automatic server discovery schemes: broadcast/multicast, many cast, and server pool, which are described on this page. The broadcast/multicast and many cast schemes utilize the ubiquitous broadcast or one-to-many paradigm native to IPv4 and IPv6. The server pool scheme uses DNS to resolve addresses of multiple volunteer servers scattered throughout the world.&lt;/p&gt;
&lt;p&gt;All three schemes work in much the same way and might be described as &lt;em&gt;grab-n&#39;-prune.&lt;/em&gt; Through one means or another they grab a number of associations either directly or indirectly from the configuration file, order them from best to worst according to the NTP mitigation algorithms, and prune the surplus associations.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;association-management&#34;&gt;Association Management&lt;/h4&gt;
&lt;p&gt;All schemes use an iterated process to discover new preemptable client associations as long as the total number of client associations is less than the &lt;tt&gt;maxclock&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command. The &lt;tt&gt;maxclock&lt;/tt&gt; default is 10, but it should be changed in typical configuration to some lower number, usually two greater than the &lt;tt&gt;minclock&lt;/tt&gt; option of the same command.&lt;/p&gt;
&lt;p&gt;All schemes use a stratum filter to select just those servers with stratum considered useful. This can avoid large numbers of clients ganging up on a small number of low-stratum servers and avoid servers below or above specified stratum levels. By default, servers of all strata are acceptable; however, the &lt;tt&gt;tos&lt;/tt&gt; command can be used to restrict the acceptable range from the &lt;tt&gt;floor&lt;/tt&gt; option, inclusive, to the &lt;tt&gt;ceiling&lt;/tt&gt; option, exclusive. Potential servers operating at the same stratum as the client will be avoided, unless the &lt;tt&gt;cohort&lt;/tt&gt; option is present. Additional filters can be supplied using the methods described on the &lt;a href=&#34;/archives/4.2.8-series/authentic&#34;&gt;Authentication Support&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The pruning process uses a set of unreach counters, one for each association created by the configuration or discovery processes. At each poll interval, the counter is increased by one. If an acceptable packet arrives for a persistent (configured) or ephemeral (broadcast/multicast) association, the counter is set to zero. If an acceptable packet arrives for a preemptable (manycast, pool) association and survives the selection and clustering algorithms, the counter is set to zero. If the counter reaches an arbitrary threshold of 10, the association becomes a candidate for pruning.&lt;/p&gt;
&lt;p&gt;The pruning algorithm is very simple. If an ephemeral or preemptable association becomes a candidate for pruning, it is immediately demobilized. If a persistent association becomes a candidate for pruning, it is not demobilized, but its poll interval is set at the maximum. The pruning algorithm design avoids needless discovery/prune cycles for associations that wander in and out of the survivor list, but otherwise have similar characteristics.&lt;/p&gt;
&lt;p&gt;Following is a summary of each scheme. Note that reference to option applies to the commands described on the &lt;a href=&#34;/archives/4.2.8-series/confopt&#34;&gt;Configuration Options&lt;/a&gt; page. See that page for applicability and defaults.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;broadcastmulticast-scheme&#34;&gt;Broadcast/Multicast Scheme&lt;/h4&gt;
&lt;p&gt;A broadcast server generates messages continuously at intervals by default 64 s and time-to-live by default 127. These defaults can be overridden by the &lt;tt&gt;minpoll&lt;/tt&gt; and &lt;tt&gt;ttl&lt;/tt&gt; options, respectively. Not all kernels support the &lt;tt&gt;ttl&lt;/tt&gt; option. A broadcast client responds to the first message received by waiting a randomized interval to avoid implosion at the server. It then polls the server in client/server mode using the &lt;tt&gt;iburst&lt;/tt&gt; option in order to quickly authenticate the server, calibrate the propagation delay and set the client clock. This normally results in a volley of six client/server exchanges at 2-s intervals during which both the synchronization and cryptographic protocols run concurrently.&lt;/p&gt;
&lt;p&gt;Following the volley, the server continues in listen-only mode and sends no further messages. If for some reason the broadcast server does not respond to these messages, the client will cease transmission and continue in listen-only mode with a default propagation delay. The volley can be avoided by using the &lt;tt&gt;broadcastdelay&lt;/tt&gt; command with nonzero argument.&lt;/p&gt;
&lt;p&gt;A server is configured in broadcast mode using the &lt;tt&gt;broadcast&lt;/tt&gt; command and specifying the broadcast address of a local interface. If two or more local interfaces are installed with different broadcast addresses, a &lt;tt&gt;broadcast&lt;/tt&gt; command is needed for each address. This provides a way to limit exposure in a firewall, for example. A broadcast client is configured using the &lt;tt&gt;broadcastclient&lt;/tt&gt; command.&lt;/p&gt;
&lt;p&gt;NTP multicast mode can be used to extend the scope using IPv4 multicast or IPv6 broadcast with defined span. The IANA has assigned IPv4 multicast address 224.0.1.1 and IPv6 address FF05::101 (site local) to NTP, but these addresses should be used only where the multicast span can be reliably constrained to protect neighbor networks. In general, administratively scoped IPv4 group addresses should be used, as described in RFC-2365, or GLOP group addresses, as described in RFC-2770.&lt;/p&gt;
&lt;p&gt;A multicast server is configured using the &lt;tt&gt;broadcast&lt;/tt&gt; command, but specifying a multicast address instead of a broadcast address. A multicast client is configured using the &lt;tt&gt;multicastclient&lt;/tt&gt; command specifying a list of one or more multicast addresses. Note that there is a subtle distinction between the IPv4 and IPv6 address families. The IPv4 broadcast or mulitcast mode is determined by the IPv4 class. For IPv6 the same distinction can be made using the link-local prefix FF02 for each interface and site-local prefix FF05 for all interfaces.&lt;/p&gt;
&lt;p&gt;It is possible and frequently useful to configure a host as both broadcast client and broadcast server. A number of hosts configured this way and sharing a common broadcast address will automatically organize themselves in an optimum configuration based on stratum and synchronization distance.&lt;/p&gt;
&lt;p&gt;Since an intruder can impersonate a broadcast server and inject false time values, broadcast mode should always be cryptographically authenticated. By default, a broadcast association will not be mobilized unless cryptographically authenticated. If necessary, the &lt;tt&gt;auth&lt;/tt&gt; option of the &lt;tt&gt;disable&lt;/tt&gt; command will disable this feature. The feature can be selectively enabled using the &lt;tt&gt;notrust&lt;/tt&gt; option of the &lt;tt&gt;restrict&lt;/tt&gt; command.&lt;/p&gt;
&lt;p&gt;With symmetric key cryptography each broadcast server can use the same or different keys. In one scenario on a broadcast LAN, a set of broadcast clients and servers share the same key along with another set that share a different key. Only the clients with matching key will respond to a server broadcast. Further information is on the &lt;a href=&#34;/archives/4.2.8-series/authentic&#34;&gt;Authentication Support&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Public key cryptography can be used with some restrictions. If multiple servers belonging to different secure groups share the same broadcast LAN, the clients on that LAN must have the client keys for all of them. This scenario is illustrated in the example on the &lt;a href=&#34;/archives/4.2.8-series/autokey&#34;&gt;Autokey Public Key Authentication&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;manycast-scheme&#34;&gt;Manycast Scheme&lt;/h4&gt;
&lt;p&gt;Manycast is an automatic server discovery and configuration paradigm new to NTPv4. It is intended as a means for a client to troll the nearby network neighborhood to find cooperating servers, validate them using cryptographic means and evaluate their time values with respect to other servers that might be lurking in the vicinity. It uses the grab-n&#39;-drop paradigm with the additional feature that active means are used to grab additional servers should the number of associations fall below the &lt;tt&gt;maxclock&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command.&lt;/p&gt;
&lt;p&gt;The manycast paradigm is not the anycast paradigm described in RFC-1546, which is designed to find a single server from a clique of servers providing the same service. The manycast paradigm is designed to find a plurality of redundant servers satisfying defined optimality criteria.&lt;/p&gt;
&lt;p&gt;A manycast client is configured using the &lt;tt&gt;manycastclient&lt;/tt&gt; configuration command, which is similar to the &lt;tt&gt;server&lt;/tt&gt; configuration command. It sends ordinary client mode messages, but with a broadcast address rather than a unicast address and sends only if less than &lt;tt&gt;maxclock&lt;/tt&gt; associations remain and then only at the minimum feasible rate and minimum feasible time-to-live (TTL) hops. The polling strategy is designed to reduce as much as possible the volume of broadcast messages and the effects of implosion due to near-simultaneous arrival of manycast server messages. There can be as many manycast client associations as different addresses, each one serving as a template for future unicast client/server associations.&lt;/p&gt;
&lt;p&gt;A manycast server is configured using the &lt;tt&gt;manycastserver&lt;/tt&gt; command, which listens on the specified broadcast address for manycast client messages. If a manycast server is in scope of the current TTL and is itself synchronized to a valid source and operating at a stratum level equal to or lower than the manycast client, it replies with an ordinary unicast server message.&lt;/p&gt;
&lt;p&gt;The manycast client receiving this message mobilizes a preemptable client association according to the matching manycast client template. This requires the server to be cryptographically authenticated and the server stratum to be less than or equal to the client stratum.&lt;/p&gt;
&lt;p&gt;It is possible and frequently useful to configure a host as both manycast client and manycast server. A number of hosts configured this way and sharing a common multicast group address will automatically organize themselves in an optimum configuration based on stratum and synchronization distance.&lt;/p&gt;
&lt;p&gt;The use of cryptograpic authentication is always a good idea in any server discovery scheme. Both symmetric key and public key cryptography can be used in the same scenarios as described above for the broadast/multicast scheme.&lt;/p&gt;
&lt;h4 id=&#34;server-pool-scheme&#34;&gt;Server Pool Scheme&lt;/h4&gt;
&lt;p&gt;The idea of targeting servers on a random basis to distribute and balance the load is not a new one; however, the NTP pool scheme puts this on steroids. At present, several thousand operators around the globe have volunteered their servers for public access. In general, NTP is a lightweight service and servers used for other purposes don&amp;rsquo;t mind an additional small load. The trick is to randomize over the population and minimize the load on any one server while retaining the advantages of multiple servers using the NTP mitigation algorithms.&lt;/p&gt;
&lt;p&gt;To support this service, custom DNS software is used by pool.ntp.org and its subdomains to discover a random selection of participating servers in response to a DNS query. The client receiving this list mobilizes some or all of them, similar to the manycast discovery scheme, and prunes the excess. Unlike &lt;tt&gt;manycastclient&lt;/tt&gt;, cryptographic authentication is not required. The pool scheme solicits a single server at a time, compared to &lt;tt&gt;manycastclient&lt;/tt&gt; which solicits all servers within a multicast TTL range simultaneously. Otherwise, the pool server discovery scheme operates as manycast does.&lt;/p&gt;
&lt;p&gt;The pool scheme is configured using one or more &lt;tt&gt;pool&lt;/tt&gt; commands with DNS names indicating the pool from which to draw. The &lt;tt&gt;pool&lt;/tt&gt; command can be used more than once; duplicate servers are detected and discarded. In principle, it is possible to use a configuration file containing a single line &lt;tt&gt;pool pool.ntp.org&lt;/tt&gt;. The &lt;a href=&#34;http://www.pool.ntp.org/en/use.html&#34;&gt;NTP Pool Project&lt;/a&gt; offers instructions on using the pool with the &lt;tt&gt;server&lt;/tt&gt; command, which is suboptimal but works with older versions of &lt;tt&gt;ntpd&lt;/tt&gt; predating the &lt;tt&gt;pool&lt;/tt&gt; command. With recent ntpd, consider replacing the multiple &lt;tt&gt;server&lt;/tt&gt; commands in their example with a single &lt;tt&gt;pool&lt;/tt&gt; command.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Build Options</title>
      <link>/archives/4.2.8-series/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/config/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo3a.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gnu autoconfigure tools are in the backpack.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 04:59 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Most modern software distributions include an autoconfigure utility which customizes the build and install configuration according to the specific hardware, operating system and file system conventions. For NTP this utility is called &lt;tt&gt;configure&lt;/tt&gt;, which is run before building and installing the program components. For most installations no additional actions are required other than running &lt;tt&gt;configure&lt;/tt&gt; with no options. However, it is possible to customize the build and install configuration through the use of &lt;tt&gt;configure&lt;/tt&gt; options.&lt;/p&gt;
&lt;p&gt;The available options, together with a concise description, can be displayed by running &lt;tt&gt;configure&lt;/tt&gt; with the &lt;tt&gt;&amp;ndash;help&lt;/tt&gt; option. Various options can be used to reduce the memory footprint, adjust the scheduling priority, enable or disable debugging support or reference clock driver support. The options can be used to specify where to install the program components or where to find various libraries if they are not in the default place.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Building and Installing the Distribution</title>
      <link>/archives/4.2.8-series/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/build/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/beaver.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For putting out compiler fires.&lt;/p&gt;
&lt;p&gt;Last update: 1-Apr-2015 02:57&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/build/#building-and-installing-the-distribution&#34;&gt;Building and Installing the Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/build/#building-and-installing-for-unix&#34;&gt;Building and Installing for Unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/build/#building-and-installing-for-windows&#34;&gt;Building and Installing for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/build/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/build/#if-you-have-problems&#34;&gt;If You Have Problems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/build/#additional-ttmakett-commands&#34;&gt;Additional &lt;tt&gt;make&lt;/tt&gt; Commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;building-and-installing-the-distribution&#34;&gt;Building and Installing the Distribution&lt;/h4&gt;
&lt;p&gt;It is not possible in a software distribution such as this to support every individual computer and operating system with a common executable, even with the same system but different versions and options. Therefore, it is necessary to configure, build and install for each system and version. In almost all cases, these procedures are completely automatic, The user types &lt;tt&gt;./configure&lt;/tt&gt;, and &lt;tt&gt;make install&lt;/tt&gt; in that order and the autoconfigure system does the rest. There are some exceptions, as noted below and on the &lt;a href=&#34;/archives/4.2.8-series/hints&#34;&gt;Hints and Kinks&lt;/a&gt; pages.&lt;/p&gt;
&lt;p&gt;If available, the &lt;a href=&#34;https://www.openssl.org&#34;&gt;OpenSSL library&lt;/a&gt; is used to support public key cryptography. The library must be built and installed prior to building NTP. The procedures for doing that are included in the OpenSSL documentation. The library is found during the normal NTP configure phase and the interface routines compiled automatically. Only the &lt;tt&gt;libcrypto.a&lt;/tt&gt; library file and &lt;tt&gt;openssl&lt;/tt&gt; header files are needed. If the library is not available or disabled, this step is not required.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;/archives/4.2.8-series/config&#34;&gt;Build Options&lt;/a&gt; page describes a number of options that determine whether debug support is included, whether and which reference clock drivers are included and the locations of the executables and library files, if not the default. By default debugging options and all reference clock drivers are included.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;building-and-installing-for-unix&#34;&gt;Building and Installing for Unix&lt;/h4&gt;
&lt;p&gt;This distribution uses common compilers and tools that come with most Unix distributions. Not all of these tools exist in the standard distribution of modern Unix versions (compilers are likely to be an add-on product). If this is the case, consider using the GNU tools and &lt;tt&gt;gcc&lt;/tt&gt; compiler included as freeware in some systems. For a successful build, all of these tools should be accessible via the current path.&lt;/p&gt;
&lt;p&gt;The first thing to do is uncompress the distribution and extract the source tree. In the distribution base directory use the &lt;tt&gt;./configure&lt;/tt&gt; command to perform an automatic configuration procedure. This command inspects the hardware and software environment and configures the build process accordingly. Use the &lt;tt&gt;make&lt;/tt&gt; command to compile and link the distribution and the &lt;tt&gt;install&lt;/tt&gt; command to install the executables by default in &lt;tt&gt;/usr/local/bin&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;If your site supports multiple architectures and uses NFS to share files, you can use a single source tree to build executables for multiple architectures. While running on a particular architecture, change to the base directory and create a subdirectory using a command like &lt;tt&gt;mkdir A.machine,&lt;/tt&gt; which will create an architecture-specific directory, then change to this directory and mumble &lt;tt&gt;../configure&lt;/tt&gt;. The remaining steps are the same whether building in the base directory or in the subdirectory.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;building-and-installing-for-windows&#34;&gt;Building and Installing for Windows&lt;/h4&gt;
&lt;p&gt;NTP supports Windows 2000 and later. See the &lt;a href=&#34;/archives/hints/winnt&#34;&gt;Windows NT&lt;/a&gt; page for directions to compile the sources and install the executables. A precompiled executable is available.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;configuration&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;You are now ready to configure the daemon. You will need to create a NTP configuration file by default in &lt;tt&gt;/etc/ntp.conf.&lt;/tt&gt; Newbies should see the &lt;a href=&#34;/archives/4.2.8-series/quick&#34;&gt;Quick Start&lt;/a&gt; page for orientation. Seasoned veterans can start with the &lt;a href=&#34;/archives/4.2.8-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; - Network Time Protocol (NTP) daemon&lt;/a&gt; page and move on to the specific configuration option pages from there.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;if-you-have-problems&#34;&gt;If You Have Problems&lt;/h4&gt;
&lt;p&gt;If you have problems with your hardware and software environment (e.g. operating system-specific issues), browse the &lt;a href=&#34;/archives/4.2.8-series/hints&#34;&gt;Hints and Kinks&lt;/a&gt; pages. For other problems a tutorial on debugging technique is in the &lt;a href=&#34;/archives/4.2.8-series/debug&#34;&gt;NTP Debugging Technique&lt;/a&gt; page. A list of important system log messages is on the &lt;a href=&#34;/archives/4.2.8-series/msyslog&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; System Log Messages&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The first line of general assistance is the NTP web site &lt;a href=&#34;http://www.ntp.org&#34;&gt;www.ntp.org&lt;/a&gt; and the helpful documents resident there. Requests for assistance of a general nature and of interest to other timekeepers should be sent to the NTP newsgroup comp.protocols.time.ntp.&lt;/p&gt;
&lt;p&gt;Users are invited to report bugs and offer suggestions via the &lt;a href=&#34;/archives/4.2.8-series/bugs&#34;&gt;NTP Bug Reporting Procedures&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;additional-ttmakett-commands&#34;&gt;Additional &lt;tt&gt;make&lt;/tt&gt; commands&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;make clean&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Cleans out object files, programs and temporary files.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;make distclean&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Does the work of &lt;tt&gt;clean&lt;/tt&gt;, but cleans out all directories in preparation for a new distribution release.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;make dist&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Does the work of &lt;tt&gt;make distclean&lt;/tt&gt;, but constructs compressed tar files for distribution. You must have GNU automake to perform this function.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Clock Cluster Algorithm</title>
      <link>/archives/4.2.8-series/cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/cluster/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 15-Nov-2012 06:02 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The clock cluster algorithm processes the truechimers produced by the clock select algorithm to produce a list of &lt;em&gt;survivors&lt;/em&gt;. These survivors are used by the mitigation algorithms to discipline the system clock. The cluster algorithm operates in a series of rounds, where at each round the truechimer furthest from the offset centroid is pruned from the population. The rounds are continued until a specified termination condition is met. This page discusses the algorithm in detail.&lt;/p&gt;
&lt;p&gt;First, the truechimer associations are saved on an unordered list with each candidate entry identified with index &lt;em&gt;i&lt;/em&gt; (&lt;em&gt;i&lt;/em&gt; = 1, &amp;hellip;, &lt;em&gt;n)&lt;/em&gt;, where &lt;em&gt;n&lt;/em&gt; is the number of candidates. Let θ(&lt;em&gt;i&lt;/em&gt;), be the offset and λ(&lt;em&gt;i&lt;/em&gt;) be the root distance of the _i_th entry. Recall that the root distance is equal to the root dispersion plus half the root delay. For the _i_th candidate on the list, a statistic called the &lt;em&gt;select jitter&lt;/em&gt; relative to the _i_th candidate is calculated as follows. Let&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;
&lt;p&gt;&lt;em&gt;d&lt;sub&gt;i&lt;/sub&gt;&lt;/em&gt;(&lt;em&gt;j&lt;/em&gt;) = |θ(&lt;em&gt;j&lt;/em&gt;) − θ(&lt;em&gt;i&lt;/em&gt;)| λ(&lt;em&gt;i&lt;/em&gt;),&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;where θ(&lt;em&gt;i)&lt;/em&gt; is the peer offset of the _i_th entry and θ(&lt;em&gt;j&lt;/em&gt;) is the peer offset of the _j_th entry, both produced by the clock filter algorithm. The metric used by the cluster algorithm is the select jitter φ&lt;sub&gt;S&lt;/sub&gt;(&lt;em&gt;i&lt;/em&gt;) computed as the root mean square (RMS) of the &lt;em&gt;d&lt;sub&gt;i&lt;/sub&gt;&lt;/em&gt;(&lt;em&gt;j&lt;/em&gt;) as &lt;em&gt;j&lt;/em&gt; ranges from 1 to &lt;em&gt;n&lt;/em&gt;. For the purpose of notation in the example to follow, let φ&lt;sub&gt;R&lt;/sub&gt;(&lt;em&gt;i&lt;/em&gt;) be the peer jitter computed by the clock filter algorithm for the _i_th candidate.&lt;/p&gt;
&lt;p&gt;The object at each round is to prune the entry with the largest metric until the termination condition is met. Note that the select jitter must be recomputed at each round, but the peer jitter does not change. At each round the remaining entries on the list represent the survivors of that round. If the candidate to be pruned is preemptable and the number of candidates is greater than the &lt;em&gt;maxclock threshold&lt;/em&gt;, the association is demobilized. This is useful in the schemes described on the &lt;a href=&#34;/archives/4.2.8-series/discover&#34;&gt;Automatic Server Discovery Schemes&lt;/a&gt; page. The maxclock threshold default is 10, but it can be changed using the &lt;tt&gt;maxclock&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command. Further pruning is subject to the following termination conditions, but no associations will be automatically demobilized.&lt;/p&gt;
&lt;p&gt;The termination condition has two parts. First, if the number of survivors is not greater than the_minclock threshold_ set by the &lt;tt&gt;minclock&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command, the pruning process terminates. The &lt;tt&gt;minclock&lt;/tt&gt; default is 3, but can be changed to fit special conditions, as described on the &lt;a href=&#34;/archives/4.2.8-series/prefer&#34;&gt;Mitigation Rules and the prefer Keyword&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/flt7.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Cluster Algorithm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The second termination condition is more intricate. Figure 1 shows a round where a candidate of (a) is pruned to yield the candidates of (b). Let φ&lt;sub&gt;&lt;em&gt;max&lt;/em&gt;&lt;/sub&gt; be the maximum select jitter and φ&lt;sub&gt;&lt;em&gt;min&lt;/em&gt;&lt;/sub&gt; be the minimum peer jitter over all candidates on the list. In (a), candidate 1 has the highest select jitter, so φ&lt;sub&gt;&lt;em&gt;max&lt;/em&gt;&lt;/sub&gt; = φ&lt;sub&gt;S&lt;/sub&gt;(1). Candidate 4 has the lowest peer jitter, so φ&lt;sub&gt;&lt;em&gt;min&lt;/em&gt;&lt;/sub&gt; = φ&lt;sub&gt;R&lt;/sub&gt;(4). Since φ&lt;sub&gt;&lt;em&gt;max&lt;/em&gt;&lt;/sub&gt; &amp;gt; φ&lt;sub&gt;&lt;em&gt;min&lt;/em&gt;&lt;/sub&gt;, select jitter dominates peer jitter,the algorithm prunes candidate 1. In (b), φ&lt;sub&gt;&lt;em&gt;max&lt;/em&gt;&lt;/sub&gt; = φ&lt;sub&gt;S&lt;/sub&gt;(3) and φ&lt;sub&gt;&lt;em&gt;min&lt;/em&gt; &lt;/sub&gt;=φ&lt;sub&gt;R&lt;/sub&gt;(4). Since φ&lt;sub&gt;&lt;em&gt;max&lt;/em&gt;&lt;/sub&gt; &amp;lt; φ&lt;sub&gt;&lt;em&gt;min&lt;/em&gt;&lt;/sub&gt;, pruning additional candidates does not reduce select jitter, the algorithm terminates with candidates 2, 3 and 4 as survivors.&lt;/p&gt;
&lt;p&gt;The survivor list is passed on to the mitigation algorithms, which combine the survivors, select a system peer, and compute the system statistics passed on to dependent clients. Note the use of root distance λ as a weight factor at each round in the clock cluster algorithm. This is to favor the survivors with the lowest root distance and thus the smallest maximum error.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Clock Discipline Algorithm</title>
      <link>/archives/4.2.8-series/discipline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/discipline/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 3-Jan-2020 02:12 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/discipline/#general-overview&#34;&gt;General Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/discipline/#clock-discipline-operations&#34;&gt;Clock Discipline Operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/discipline/#loop-dynamics&#34;&gt;Loop Dynamics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/discipline/#clock-initialization-and-management&#34;&gt;Clock Initialization and Management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;general-overview&#34;&gt;General Overview&lt;/h4&gt;
&lt;p&gt;At the heart of the NTP specification and reference implementation is the clock discipline algorithm, which is best described as an adaptive parameter, hybrid phase/frequency-lock feedback loop. It is an intricately crafted algorithm that automatically adapts for optimum performance while minimizing network overhead. Operation is in two modes, phase-lock loop (PLL), which is used at poll intervals below the Allan intercept, by default 2048 s, and frequency-lock loop (FLL), which is used above that.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clock-discipline-operations&#34;&gt;Clock Discipline Operations&lt;/h4&gt;
&lt;p&gt;A block diagram of the clock discipline is shown in Figure 1. The timestamp of a reference clock or remote server is compared with the timestamp of the system clock, represented as a variable frequency oscillator (VFO), to produce a raw offset sample &lt;em&gt;V&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt;. Offset samples are processed by the clock filter to produce a filtered update &lt;em&gt;V&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;. The loop filter implements a type-2 proportional-integrator controller (PIC). The PIC can minimize errors in both time and frequency using predictors &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, respectively. The clock adjust process samples these predictors once each second for the daemon discipline or once each tick interrupt for the kernel discipline to produce the system clock update &lt;em&gt;V&lt;sub&gt;c&lt;/sub&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/discipline.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Clock Discipline Algorithm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In PLL mode the frequency predictor is an integral of the offset over past updates, while the phase predictor is the offset amortized over time in order to avoid setting the clock backward. In FLL mode the phase predictor is not used, while the frequency predictor is similar to the NIST &lt;em&gt;lockclock&lt;/em&gt; algorithm. In this algorithm, the frequency predictor is computed as a fraction of the current offset divided by the time since the last update in order to minimize the offset at the next update.&lt;/p&gt;
&lt;p&gt;The discipline response in PLL mode is determined by the &lt;em&gt;time constant&lt;/em&gt;, which results in a &amp;ldquo;stiffness&amp;rdquo; depending on the jitter of the available sources and the wander of the system clock oscillator. The scaled time constant is also used as the poll interval described on the &lt;a href=&#34;/archives/4.2.8-series/poll&#34;&gt;Poll Program&lt;/a&gt; page. However, in NTP symmetric mode, each peer manages its own poll interval and the two might not be the same. In such cases either peer uses the minimum of its own poll interval and that of the other peer, which is included in the NTP packet header.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;loop-dynamics&#34;&gt;Loop Dynamics&lt;/h4&gt;
&lt;p&gt;It is necessary to verify that the clock discipline algorithm is stable and satisfies the Nyquist criterion, which requires that the sampling rate be at least twice the bandwidth. In this case the bandwidth can be approximated by the reciprocal of the time constant. In the NTP specification and reference implementation, time constants and poll intervals are expressed as exponents of 2. By construction, the time constant exponent is five times the poll interval exponent. Thus, the default poll exponent of 6 corresponds to a poll interval of 64 s and a time constant of 2048 s. A change in the poll interval changes the time constant by a corresponding amount.. The Nyquist criterion requires the sample interval to be not more than half the time constant or 1024 s. The clock filter guarantees at least one sample in eight poll intervals, so the sample interval is not more than 512 s. This would be described as oversampling by a factor of two. Finally, the PLL parameters have been chosen for a damping factor of 2, which results in a much faster risetime than with critical damping, but results in modest overshoot of 6 percent.&lt;/p&gt;
&lt;p&gt;It is important to understand how the dynamics of the PLL are affected by the time constant and poll interval. At the default poll interval of 64 s and a step offset change of 100 ms, the time response crosses zero in about 50 min and overshoots about 6 ms, as per design. Ordinarily, a step correction would causes a temporary frequency surge of about 5 PPM, which along with the overshoot slowly dissipates over a few hours.&lt;/p&gt;
&lt;p&gt;However, the clock state machine used with the discipline algorithm avoids this transient at startup. It does this using a previously saved frequency file, if present, or by measuring the oscillator frequency, if not. It then quickly amortizes the residual offset at startup without affecting the oscillator frequency. In this way the offset error is less than 0.5 ms within 5 min, if the file is present, and within 10 min if not. See the &lt;a href=&#34;/archives/4.2.8-series/clock&#34;&gt;Clock State Machine&lt;/a&gt; page for further details.&lt;/p&gt;
&lt;p&gt;Since the PLL is linear, the response with different offset step amplitudes and poll intervals has the same characteristic shape, but scaled differently in amplitude and time. The response scales exactly with step amplitude, so that the response to a 10-ms step has the same shape as at 64 s, but with amplitude compressed by one-tenth. The response scales exactly with poll interval, so that response at a poll interval of 8 s has the same shape as at 64 s, but with time compressed by one-eighth.&lt;/p&gt;
&lt;p&gt;The optimum time constant, and thus the poll interval, depends on the network time jitter and the oscillator frequency wander. Errors due to jitter decrease as the time constant increases, while errors due to wander decrease as the time constant decreases. For typical Internet paths, the two error characteristics intersect at a point called the &lt;em&gt;Allan intercept&lt;/em&gt;, which represents the optimum time constant. With a compromise Allan intercept of 2048 s, the optimum poll interval is about 64 s, which corresponds to a compromise poll exponent of 6. For fast LANs with modern computers, the Allan intercept is somewhat lower at around 512 s, so a compromise poll exponent of 4 (16 s) is appropriate. An intricate, heuristic algorithm is used to manage the actual poll interval within a specified range. Details are on the &lt;a href=&#34;/archives/4.2.8-series/poll&#34;&gt;Poll Program&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;In the NTPv4 specification and reference implementation a state machine is used to manage the system clock under exceptional conditions, as when the daemon is first started or when encountering severe network congestion. In extreme cases not likely to be encountered in normal operation, the system time can be stepped forward or backward more than 128 ms. Further details are on the &lt;a href=&#34;/archives/4.2.8-series/clock&#34;&gt;Clock State Machine&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clock-initialization-and-management&#34;&gt;Clock Initialization and Management&lt;/h4&gt;
&lt;p&gt;If left running continuously, an NTP client on a fast LAN in a home or office environment can maintain synchronization nominally within one millisecond. When the ambient temperature variations are less than a degree Celsius, the clock oscillator frequency is disciplined to within one part per million (PPM), even when the clock oscillator native frequency offset is 100 PPM or more.&lt;/p&gt;
&lt;p&gt;For laptops and portable devices when the power is turned off, the battery backup clock offset error can increase as much as one second per day. When power is restored after several hours or days, the clock offset and oscillator frequency errors must be resolved by the clock discipline algorithm, but this can take several hours without specific provisions.&lt;/p&gt;
&lt;p&gt;The provisions described in this section insure that, in all but pathological situations, the startup transient is suppressed to within nominal levels in no more than five minutes after a warm start or ten minutes after a cold start. Following is a summary of these provisions. A detailed discussion of these provisions is on the &lt;a href=&#34;/archives/4.2.8-series/clock&#34;&gt;Clock State Machine&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The reference implementation measures the clock oscillator frequency and updates a frequency file at intervals of one hour or more, depending on the measured frequency wander. This design is intended to minimize write cycles in NVRAM that might be used in a laptop or portable device. In a warm start, the frequency is initialized from this file, which avoids a possibly lengthy convergence time. In a cold start when no frequency file is available, the reference implementation first measures the oscillator frequency over a five-min interval. This generally results in a residual frequency error less than 1 PPM. The measurement interval can be changed using the &lt;tt&gt;stepout&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tinker&lt;/tt&gt;&lt;/a&gt; command.&lt;/p&gt;
&lt;p&gt;In order to reduce the clock offset error at restart, the reference implementation next disables oscillator frequency discipline and enables clock offset discipline with a small time constant. This is designed to quickly reduce the clock offset error without causing a frequency surge. This configuration is continued for an interval of five-min, after which the clock offset error is usually no more than a millisecond. The measurement interval can be changed using the &lt;tt&gt;stepout&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tinker&lt;/tt&gt;&lt;/a&gt; command.&lt;/p&gt;
&lt;p&gt;Another concern at restart is the time necessary for the select and cluster algorithms to refine and validate the initial clock offset estimate. Normally, this takes several updates before setting the system clock. As the default minimum poll interval in most configurations is about one minute, it can take several minutes before setting the system clock. The &lt;tt&gt;iburst&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/confopt/#server-command-options&#34;&gt;&lt;tt&gt;server&lt;/tt&gt;&lt;/a&gt; command changes the behavior at restart and is recommended for client/server configurations. When this option is enabled, the client sends a volley of six requests at intervals of two seconds. This usually insures a reliable estimate is available in about ten seconds before setting the clock. Once this initial volley is complete, the procedures described above are executed.&lt;/p&gt;
&lt;p&gt;As a result of the above considerations, when a backup source, such as the local clock driver, ACTS modem driver or orphan mode is included in the system configuration, it may happen that one or more of them are selectable before one or more of the regular sources are selectable. When backup sources are included in the configuration, the reference implementation waits an interval of several minutes without regular sources before switching to backup sources. This is generally enough to avoid startup transients due to premature switching to backup sources. The interval can be changed using the &lt;tt&gt;orphanwait&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Clock Filter Algorithm</title>
      <link>/archives/4.2.8-series/filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/filter/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 10-Mar-2014 05:05 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The clock filter algorithm processes the offset and delay samples produced by the on-wire protocol for each peer process separately. It uses a sliding window of eight samples and picks out the sample with the least expected error. This page describes the algorithm design principles along with an example of typical performance.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/flt5.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Wedge Scattergram&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Figure 1 shows a typical &lt;em&gt;wedge scattergram&lt;/em&gt; plotting sample points of offset versus delay collected over a 24-hr period. As the delay increases, the offset variation increases, so the best samples are those at the lowest delay. There are two limb lines at slope ±0.5, representing the limits of sample variation. However, it is apparent that, if a way could be found to find the sample of lowest delay, it would have the least offset variation and would be the best candidate to synchronize the system clock.&lt;/p&gt;
&lt;p&gt;The clock filter algorithm works best when the delays are statistically identical in the reciprocal directions between the server and client. This is apparent in Figure 1, where the scattergram is symmetric about the x axis through the apex sample. In configurations where the delays are not reciprocal, or where the transmission delays on the two directions are traffic dependent, this may not be the case. A common case with DSL links is when downloading or uploading a large file. During the download or upload process, the delays may be significantly different resulting in large errrors. However, these errors can be largely eliminated using samples near the limb lines, as described on the &lt;a href=&#34;/archives/4.2.8-series/huffpuff&#34;&gt;Huff-n&#39;-Puff Filter&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;In the clock filter algorithm the offset and delay samples from the on-wire protocol are inserted as the youngest stage of an eight-stage shift register, thus discarding the oldest stage. Each time an NTP packet is received from a source, a dispersion sample is initialized as the sum of the precisions of the server and client. Precision is defined by the latency to read the system clock and varies from 1000 ns to 100 ns in modern machines. The dispersion sample is inserted in the shift register along with the associated offset and delay samples. Subsequently, the dispersion sample in each stage is increased at a fixed rate of 15 μs/s, representing the worst case error due to skew between the server and client clock frequencies.&lt;/p&gt;
&lt;p&gt;In each peer process the clock filter algorithm selects the stage with the smallest delay, which generally represents the most accurate data, and it and the associated offset sample become the peer variables of the same name. The peer jitter statistic is computed as the root mean square (RMS) differences between the offset samples and the offset of the selected stage.&lt;/p&gt;
&lt;p&gt;The peer dispersion statistic is determined as a weighted sum of the dispersion samples in the shift register. Initially, the dispersion of all shift register stages is set to a large number &amp;ldquo;infinity&amp;rdquo; equal to 16 s. The weight factor for each stage, starting from the youngest numbered &lt;em&gt;i&lt;/em&gt; = 1, is 2&lt;sup&gt;-&lt;em&gt;i&lt;/em&gt;&lt;/sup&gt;, which means the peer dispersion is approximately 16 s.&lt;/p&gt;
&lt;p&gt;As samples enter the register, the peer dispersion drops from 16 s to 8 s, 4 s, 2 s, and so forth. In practice, the synchronization distance, which is equal to one-half the delay plus the dispersion, falls below the select threshold of 1.5 s in about four updates. This gives some time for meaningful comparison between sources, if more than one are available. The dispersion continues to grow at the same rate as the sample dispersion. For additional information on statistacl principles and performance metrics, see the &lt;a href=&#34;/archives/4.2.8-series/stats&#34;&gt;Performance Metrics&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;As explained elsewhere, when a source becomes unreachable, the poll process inserts a dummy infinity sample in the shift register for each poll sent. After eight polls, the register returns to its original state.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/flt1.gif&#34; alt=&#34;gif&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/archives/pic/flt2.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 2: Raw (top) and Filtered (bottom) Offsets&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Figure 2 shows the performance of the algorithm for a typical Internet path over a 24-hr period. The graph on the left shows the raw offsets produced by the on-wired protocol, while the figure on the right shows the filtered offsets produced by the clock filter algorithm. If we consider the series formed as the absolute value of the offset samples, the mean error is defined as the mean of this series. Thus, the mean error of the raw samples is 0.724 ms, while the mean error of the filtered series is 0.192 ms. Radio engineers would interpret this as a processing gain of 11.5 dB.&lt;/p&gt;
&lt;p&gt;The reader might notice the somewhat boxy characteristic of the filtered offsets. Once a sample is selected, it remains selected until a newer sample with lower delay is available. This commonly occurs when an older selected sample is discarded from the shift register. The reason for this is to preserve causality; that is, time always moves forward, never backward. The result can be the loss of up to seven samples in the shift register, or more to the point, the output sample rate can never be less than one in eight input samples. The clock discipline algorithm is specifically designed to operate at this rate.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Clock Select Algorithm</title>
      <link>/archives/4.2.8-series/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/select/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 10-Mar-2014 05:22 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The clock select algorithm determines from a set of sources , which are correct (&lt;em&gt;truechimers&lt;/em&gt;) and which are not (&lt;em&gt;falsetickers&lt;/em&gt;) according to a set of formal correctness assertions. The principles are based on the observation that the maximum error in determining the offset of a candidate cannot exceed one-half the roundtrip delay to the primary reference clock at the time of measurement. This must be increased by the maximum error that can accumulate since then. The selection metric, called the &lt;em&gt;root distance,&lt;/em&gt;, is one-half the roundtrip root delay plus the root dispersion plus minor error contributions not considered here.&lt;/p&gt;
&lt;p&gt;First, a number of sanity checks is performed to sift the selectable candidate from among the source population. The sanity checks are sumarized as follows:.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A &lt;em&gt;stratum error&lt;/em&gt; occurs if (1) the source had never been synchronized or (2) the stratum of the source is below the &lt;tt&gt;floor&lt;/tt&gt; option or not below the &lt;tt&gt;ceiling&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command. The default values for these options are 0 and 15, respectively. Note that 15 is a valid stratum, but a server operating at that stratum cannot synchronize clients.&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;distance error&lt;/em&gt; occurs for a source if the root distance (also known ad synchronization distance) of the source is not below the distance threshold &lt;tt&gt;maxdist&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command. The default value for this option is 1.5 s for networks including only the Earth, but this should be increased to 2.5 s for networks including the Moon.&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;loop&lt;/em&gt; &lt;em&gt;error&lt;/em&gt; occurs if the source is synchronized to the client. This can occur if two peers are configured with each other in symmetric modes.&lt;/li&gt;
&lt;li&gt;An &lt;em&gt;unreachable&lt;/em&gt; &lt;em&gt;error&lt;/em&gt; occurs if the source is unreachable or if the &lt;tt&gt;server&lt;/tt&gt; or &lt;tt&gt;peer&lt;/tt&gt; command for the source includes the &lt;tt&gt;noselect&lt;/tt&gt; option.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sources showing one or more of these errors are considered nonselectable; only the selectable candidates are considered in the following algorithm. Given the measured offset θ&lt;sub&gt;0&lt;/sub&gt; and root distance λ, this defines a &lt;em&gt;correctness interval&lt;/em&gt; [θ&lt;sub&gt;0&lt;/sub&gt; − λ, θ&lt;sub&gt;0&lt;/sub&gt; + λ] of points where the true value of θ lies somewhere on the interval. The given problem is to determine from a set of correctness intervals, which represent truechimers and which represent falsetickers. The principles must be given a precise definition. The &lt;em&gt;intersection interval&lt;/em&gt; is the &lt;em&gt;smallest interval containing points from the largest number of correctness intervals.&lt;/em&gt; An algorithm that finds the intersection interval was devised by Keith Marzullo in his doctoral dissertation. It was first implemented in the Digital Time Synchronization Service (DTSS) for the VMS operating system for the VAX.&lt;/p&gt;
&lt;p&gt;While the NTP algorithm is based on DTSS, it remains to establish which point in the correctness interval represents the best estimate of the offset for each candidate. The best point is at the midpoint θ&lt;sub&gt;0&lt;/sub&gt; of the correctness interval; however, the midpoint might not be within the intersection interval. A candidate with a correctness interval that contains points in the intersection interval is a truechimer and the best offset estimate is the midpoint of its correctness interval. A candidate with a correctness interval that contains no points in the intersection interval is a falseticker.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/flt3.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Intersection Interval&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Figure 1 shows correctness intervals for each of four candidates A, B, C and D. We need to find the maximum number of candidates that contain points in common. The result is the interval labeled DTSS. In the figure there are three truechimers A, B and C, and one falseticker D. In DTSS any point in the intersection interval can represent the true time; however, as shown below, this may throw away valuable statistical information. In any case, the clock is considered correct if the number of truechimers found in this way are greater than half the total number of candidates.&lt;/p&gt;
&lt;p&gt;The question remains, which is the best point to represent the true time of each correctness interval? Fortunately, we already have the maximum likelihood estimate at the midpoint of each correctness interval. But, while the midpoint of candidate C is outside the intersection interval, its correctness interval contains points in common with the intersection interval, so the candidate is a truechimer and the midpoint is chosen to represent its time.&lt;/p&gt;
&lt;p&gt;The DTSS correctness assertions do not consider how best to represent the truechimer time. To support the midpoint choice, consider the selection algorithm as a method to reject correctness intervals that cannot contribute to the final outcome; that is, they are falsetickers. The remaining correctness intervals can contribute to the final outcome; that is, they are truechimers. Samples in the intersection interval are usually of very low probability and thus poor estimates for truechimer time. On the other hand, the midpoint sample produced by the clock filter algorithm is the maximum likelihood estimate and thus best represents the truechimer time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/flt6.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 2: Clock Select Algorithm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The algorithm operates as shown in Figure 2. Let &lt;em&gt;m&lt;/em&gt; be the number of candidates and &lt;em&gt;f&lt;/em&gt; the number of falsetickers, initially zero. Move a pointer from the leftmost endpoint towards the rightmost endpoint in Figure 1 and count the number of candidates, stopping when that number reaches &lt;em&gt;m&lt;/em&gt; − &lt;em&gt;f&lt;/em&gt;; this is the left endpoint of the intersection interval. Then, do the same, but moving from the rightmost endpoint towards the leftmost endpoint; this is the right endpoint of the intersection interval. If the left endpoint is less than the right endpoint, the intersection interval has been found. Otherwise, increase &lt;em&gt;f&lt;/em&gt; by 1. If &lt;em&gt;f&lt;/em&gt; is less than &lt;em&gt;n&lt;/em&gt; / 2, try again; otherwise, the algorithm fails and no truechimers could be found.&lt;/p&gt;
&lt;p&gt;The clock select algorithm again scans the correctness intervals. If the right endpoint of the correctness interval for a candidate is greater than the left endpoint of the intersection interval, or if the left endpoint of the correctness interval is less than the right endpoint of the intersection interval, the candidate is a truechimer; otherwise, it is a falseticker.&lt;/p&gt;
&lt;p&gt;In practice, with fast LANs and modern computers, the correctness interval can be quite small, especially when the candidates are multiple reference clocks. In such cases the intersection interval might be empty, due to insignificant differences in the reference clock offsets. To avoid this, the size of the correctness interval is padded to the value of &lt;tt&gt;mindist&lt;/tt&gt;, with default 1 ms. This value can be changed using the &lt;tt&gt;mindist&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Clock State Machine</title>
      <link>/archives/4.2.8-series/clock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/clock/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 4-Aug-2011 23:40 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/clock/#general-overview&#34;&gt;General Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/clock/#panic-threshold&#34;&gt;Panic Threshold&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/clock/#step-and-stepout-thresholds&#34;&gt;Step and Stepout Thresholds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/clock/#hold-timer&#34;&gt;Hold Timer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/clock/#operating-intervals&#34;&gt;Operating Intervals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/clock/#state-transition-function&#34;&gt;State Transition Function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;general-overview&#34;&gt;General Overview&lt;/h4&gt;
&lt;p&gt;In the NTPv4 specification and reference implementation a state machine is used to manage the system clock under exceptional conditions, as when the daemon is first started or when encountering severe network congestion. This page describes the design and operation of the state machine in detail.&lt;/p&gt;
&lt;p&gt;The state machine is activated upon receipt of an update by the clock discipline algorithm. its primary purpose is to determines whether the clock is slewed or stepped and how the initial time and frequency are determined using three thresholds: &lt;em&gt;panic&lt;/em&gt;, &lt;em&gt;step&lt;/em&gt; and &lt;em&gt;stepout&lt;/em&gt;, and one timer: &lt;em&gt;hold&lt;/em&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;panic-threshold&#34;&gt;Panic Threshold&lt;/h4&gt;
&lt;p&gt;Most computers today incorporate a time-of-year (TOY) chip to maintain the time when the power is off. When the computer is restarted, the chip is used to initialize the operating system time. In case there is no TOY chip or the TOY time is different from NTP time by more than the panic threshold, the daemon assumes something must be terribly wrong, so exits with a message to the system operator to set the time manually. With the &lt;tt&gt;-g&lt;/tt&gt; option on the command line, the daemon sets the clock to NTP time at the first update, but exits if the offset exceeds the panic threshold at subsequent updates. The panic threshold default is 1000 s, but it can be changed with the &lt;tt&gt;panic&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tinker&lt;/tt&gt;&lt;/a&gt; command.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;step-and-stepout-thresholds&#34;&gt;Step and Stepout Thresholds&lt;/h4&gt;
&lt;p&gt;Under ordinary conditions, the clock discipline gradually slews the clock to the correct time, so that the time is effectively continuous and never stepped forward or backward. If, due to extreme network congestion, an offset spike exceeds the step threshold, by default 128 ms, the spike is discarded. However, if offset spikes greater than the step threshold persist for an interval more than the stepout threshold, by default 300 s, the system clock is stepped to the correct time.&lt;/p&gt;
&lt;p&gt;In practice, the need for a step has been extremely rare and almost always the result of a hardware failure or operator error. The step threshold and stepout threshold can be changed using the &lt;tt&gt;step&lt;/tt&gt; and &lt;tt&gt;stepout&lt;/tt&gt; options of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tinker&lt;/tt&gt;&lt;/a&gt; command, respectively. If the step threshold is set to zero, the step function is entirely disabled and the clock is always slewed. The daemon sets the step threshold to 600 s using the &lt;tt&gt;-x&lt;/tt&gt; option on the command line. If the &lt;tt&gt;-g&lt;/tt&gt; option is used or the step threshold is set greater than 0.5 s, the precision time kernel support is disabled.&lt;/p&gt;
&lt;p&gt;Historically, the most important application of the step function was when a leap second was inserted in the Coordinated Universal Time (UTC) timescale and the kernel precision time support was not available. This also happened with older reference clocks that indicated an impending leap second, but the radio itself did not respond until it resynchronized some minutes later. Further details are on the &lt;a href=&#34;/archives/4.2.8-series/leap&#34;&gt;Leap Second Processing&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;In some applications the clock can never be set backward, even it accidentally set forward a week by some evil means. The issues should be carefully considered before using these options. The slew rate is fixed at 500 parts-per-million (PPM) by the Unix kernel. As a result, the clock can take 33 minutes to amortize each second the clock is outside the acceptable range. During this interval the clock will not be consistent with any other network clock and the system cannot be used for distributed applications that require correctly synchronized network time.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;hold-timer&#34;&gt;Hold Timer&lt;/h4&gt;
&lt;p&gt;When the daemon is started after a considerable downtime, it could be the TOY chip clock has drifted significantly from NTP time. This can cause a transient at system startup. In the past, this has produced a phase transient and resulted in a frequency surge that could take some time, even hours, to subside. When the highest accuracy is required, some means is necessary to manage the startup process so that the clock is quickly set correctly and the frequency is undisturbed. The hold timer is used to suppress frequency adjustments during the training and startup intervals described below. At the beginning of the interval the hold timer is set to the stepout threshold and decrements at one second intervals until reaching zero. However, the hold timer is forced to zero if the residual clock offset is less than 0.5 ms. When nonzero, the discipline algorithm uses a small time constant (equivalent to a poll exponent of 2), but does not adjust the frequency. Assuming that the frequency has been set to within 1 PPM, either from the frequency file or by the training interval described later, the clock is set to within 0.5 ms in less than 300 s.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;operating-intervals&#34;&gt;Operating Intervals&lt;/h4&gt;
&lt;p&gt;The state machine operates in one of four nonoverlapping intervals.&lt;/p&gt;
&lt;dt&gt;Training interval&lt;/dt&gt;
&lt;p&gt;This interval is used at startup when the frequency file is nor present at startup. It begins when the first update is received by the discipline algorithm and ends when an update is received following the stepout threshold. The clock phase is steered to the offset presented at the beginning of the interval, but without affecting the frequency. During the interval further updates are ignored. At the end of the interval the frequency is calculated as the phase change during the interval divided by the length of the interval. This generally results in a frequency error less than 0.5 PPM. Note that, if the intrinsic oscillator frequency error is large, the offset will in general have significant error. This is corrected during the subsequent startup interval.&lt;/p&gt;
&lt;dt&gt;Startup interval&lt;/dt&gt;
&lt;p&gt;This interval is used at startup to amortize the residual offset while not affecting the frequency. If the frequency file is present, it begins when the first update is received by the discipline. If not, it begins after the training interval. It ends when the hold timer decrements to zero or when the residual offset falls below 0.5 ms.&lt;/p&gt;
&lt;dt&gt;Step interval&lt;/dt&gt;
&lt;p&gt;This interval is used as a spike blanker during periods when the offsets exceed the step threshold. The interval continues as long as offsets are received that are greater than the step threshold, but ends when either an offset is received less than the step threshold or until the time since the last valid update exceeds the stepout threshold.&lt;/p&gt;
&lt;dt&gt;Sync Interval&lt;/dt&gt;
&lt;p&gt;This interval is implicit; that is, it is used when none of the above intervals are used.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;state-transition-function&#34;&gt;State Transition Function&lt;/h4&gt;
&lt;p&gt;The state machine consists of five states. An event is created when an update is received by the discipline algorithm. Depending on the state and the offset magnitude, the machine performs some actions and transitions to the same or another state. Following is a short description of the states.&lt;/p&gt;
&lt;dt&gt;FSET - The frequency file is present&lt;/dt&gt;
&lt;p&gt;Load the frequency file, initialize the hold timer and continue in SYNC state.&lt;/p&gt;
&lt;dt&gt;NSET - The frequency file is not present&lt;/dt&gt;
&lt;p&gt;Initialize the hold timer and continue in FREQ state.&lt;/p&gt;
&lt;dt&gt;FREQ - Frequency training state&lt;/dt&gt;
&lt;p&gt;Disable the clock discipline until the time since the last update exceeds the stepout threshold. When this happens, calculate the frequency, initialize the hold counter and transition to SYNC state.&lt;/p&gt;
&lt;dt&gt;SPIK - Spike state&lt;/dt&gt;
&lt;p&gt;A update greater than the step threshold has occurred. Ignore the update and continue in this state as long as updates greater than the step threshold occur. If a valid update is received, continue in SYNC state. When the time since the last valid update was received exceeds the stepout threshold, step the system clock and continue in SYNC state.&lt;/p&gt;
&lt;dt&gt;SYNC - Ordinary clock discipline state&lt;/dt&gt;
&lt;p&gt;Discipline the system clock time and frequency using the hybrid phase/frequency feedback loop. However, do not discipline the frequency if the hold timer is nonzero.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Command Index</title>
      <link>/archives/4.2.8-series/comdex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/comdex/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice38.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carrol&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Mad Hatter says &amp;ldquo;Bring it on&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Last update: 31-Jan-2014 06:54 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;related-links&#34;&gt;Related Links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/accopt&#34;&gt;Access Control Commands and Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/authopt&#34;&gt;Authentication Commands and Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/confopt&#34;&gt;Server Commands and Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/monopt&#34;&gt;Monitoring Commands and Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/clockopt&#34;&gt;Reference Clock Commands and Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;Miscellaneous Commands and Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Copyright Notice</title>
      <link>/archives/4.2.8-series/copyright/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/copyright/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/sheepb.jpg&#34; alt=&#34;Clone me,&#34;&gt; Clone me, says Dolly sheepishly.&lt;/p&gt;
&lt;p&gt;Last update: 4-Feb-2020 23:47 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The following copyright notice applies to all files collectively called the Network Time Protocol Version 4 Distribution. Unless specifically declared otherwise in an individual file, this entire notice applies as if the text was explicitly included in the file.&lt;/p&gt;
&lt;pre&gt;***********************************************************************
*                                                                     *
* Copyright (c) University of Delaware 1992-2015                      *
*                                                                     *
* Permission to use, copy, modify, and distribute this software and   *
* its documentation for any purpose with or without fee is hereby     *
* granted, provided that the above copyright notice appears in all    *
* copies and that both the copyright notice and this permission       *
* notice appear in supporting documentation, and that the name        *
* University of Delaware not be used in advertising or publicity      *
* pertaining to distribution of the software without specific,        *
* written prior permission. The University of Delaware makes no       *
* representations about the suitability this software for any         *
* purpose. It is provided &#34;as is&#34; without express or implied          *
* warranty.                                                           *
*                                                                     *
***********************************************************************
&lt;/pre&gt;
&lt;p&gt;Content starting in 2011 from Harlan Stenn, Danny Mayer, and Martin Burnicki is:&lt;/p&gt;
&lt;pre&gt;***********************************************************************
*                                                                     *
* Copyright (c) Network Time Foundation 2011-2020                     *
*                                                                     *
* All Rights Reserved                                                 *
*                                                                     *
* Redistribution and use in source and binary forms, with or without  *
* modification, are permitted provided that the following conditions  *
* are met:                                                            *
* 1. Redistributions of source code must retain the above copyright   *
*    notice, this list of conditions and the following disclaimer.    *
* 2. Redistributions in binary form must reproduce the above          *
*    copyright notice, this list of conditions and the following      *
*    disclaimer in the documentation and/or other materials provided  *
*    with the distribution.                                           *
*                                                                     *
* THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS&#39;&#39; AND ANY EXPRESS  *
* OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED   *
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  *
* ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE    *
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR *
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT   *
* OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR  *
* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF          *
* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT           *
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE   *
* USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH    *
* DAMAGE.                                                             *
***********************************************************************
&lt;/pre&gt;
&lt;p&gt;The following individuals contributed in part to the Network Time Protocol Distribution Version 4 and are acknowledged as authors of this work.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20takao_abe@xurb.jp&#34;&gt;Takao Abe &lt;a href=&#34;mailto:takao_abe@xurb.jp&#34;&gt;takao_abe@xurb.jp&lt;/a&gt;&lt;/a&gt; Clock driver for JJY receivers&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mark_andrews@isc.org&#34;&gt;Mark Andrews &lt;a href=&#34;mailto:mark_andrews@isc.org&#34;&gt;mark_andrews@isc.org&lt;/a&gt;&lt;/a&gt; Leitch atomic clock controller&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20altmeier@atlsoft.de&#34;&gt;Bernd Altmeier &lt;a href=&#34;mailto:altmeier@atlsoft.de&#34;&gt;altmeier@atlsoft.de&lt;/a&gt;&lt;/a&gt; hopf Elektronik serial line and PCI-bus devices&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20vbais@mailman1.intel.co&#34;&gt;Viraj Bais &lt;a href=&#34;mailto:vbais@mailman1.intel.com&#34;&gt;vbais@mailman1.intel.com&lt;/a&gt;&lt;/a&gt; and &lt;a href=&#34;mailto:%20kirkwood@striderfm.intel.com&#34;&gt;Clayton Kirkwood &lt;a href=&#34;mailto:kirkwood@striderfm.intel.com&#34;&gt;kirkwood@striderfm.intel.com&lt;/a&gt;&lt;/a&gt; port to WindowsNT 3.5&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20michael.barone@lmco.com&#34;&gt;Michael Barone &amp;lt;michael,barone@lmco.com&amp;gt;&lt;/a&gt; GPSVME fixes&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20karl@owl.HQ.ileaf.com&#34;&gt;Karl Berry &lt;a href=&#34;mailto:karl@owl.HQ.ileaf.com&#34;&gt;karl@owl.HQ.ileaf.com&lt;/a&gt;&lt;/a&gt; syslog to file option&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20greg.brackley@bigfoot.com&#34;&gt;Greg Brackley &lt;a href=&#34;mailto:greg.brackley@bigfoot.com&#34;&gt;greg.brackley@bigfoot.com&lt;/a&gt;&lt;/a&gt; Major rework of WINNT port. Clean up recvbuf and iosignal code into separate modules.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Marc.Brett@westgeo.com&#34;&gt;Marc Brett &lt;a href=&#34;mailto:Marc.Brett@westgeo.com&#34;&gt;Marc.Brett@westgeo.com&lt;/a&gt;&lt;/a&gt; Magnavox GPS clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Piete.Brooks@cl.cam.ac.uk&#34;&gt;Piete Brooks &lt;a href=&#34;mailto:Piete.Brooks@cl.cam.ac.uk&#34;&gt;Piete.Brooks@cl.cam.ac.uk&lt;/a&gt;&lt;/a&gt; MSF clock driver, Trimble PARSE support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20nelson@bolyard.me&#34;&gt;Nelson B Bolyard &lt;a href=&#34;mailto:nelson@bolyard.me&#34;&gt;nelson@bolyard.me&lt;/a&gt;&lt;/a&gt; update and complete broadcast and crypto features in sntp&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Jean-Francois.Boudreault@viagenie.qc.ca&#34;&gt;Jean-Francois Boudreault &lt;a href=&#34;mailto:Jean-Francois.Boudreault@viagenie.qc.ca&#34;&gt;Jean-Francois.Boudreault@viagenie.qc.ca&lt;/a&gt;&lt;/a&gt; IPv6 support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20reg@dwf.com&#34;&gt;Reg Clemens &lt;a href=&#34;mailto:reg@dwf.com&#34;&gt;reg@dwf.com&lt;/a&gt;&lt;/a&gt; Oncore driver (Current maintainer)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20clift@ml.csiro.au&#34;&gt;Steve Clift &lt;a href=&#34;mailto:clift@ml.csiro.au&#34;&gt;clift@ml.csiro.au&lt;/a&gt;&lt;/a&gt; OMEGA clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20casey@csc.co.za&#34;&gt;Casey Crellin &lt;a href=&#34;mailto:casey@csc.co.za&#34;&gt;casey@csc.co.za&lt;/a&gt;&lt;/a&gt; vxWorks (Tornado) port and help with target configuration&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Sven_Dietrich@trimble.COM&#34;&gt;Sven Dietrich &lt;a href=&#34;mailto:sven_dietrich@trimble.com&#34;&gt;sven_dietrich@trimble.com&lt;/a&gt;&lt;/a&gt; Palisade reference clock driver, NT adj. residuals, integrated Greg&amp;rsquo;s Winnt port.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20dundas@salt.jpl.nasa.gov&#34;&gt;John A. Dundas III &lt;a href=&#34;mailto:dundas@salt.jpl.nasa.gov&#34;&gt;dundas@salt.jpl.nasa.gov&lt;/a&gt;&lt;/a&gt; Apple A/UX port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20duwe@immd4.informatik.uni-erlangen.de&#34;&gt;Torsten Duwe &lt;a href=&#34;mailto:duwe@immd4.informatik.uni-erlangen.de&#34;&gt;duwe@immd4.informatik.uni-erlangen.de&lt;/a&gt;&lt;/a&gt; Linux port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20dennis@mrbill.canet.ca&#34;&gt;Dennis Ferguson &lt;a href=&#34;mailto:dennis@mrbill.canet.ca&#34;&gt;dennis@mrbill.canet.ca&lt;/a&gt;&lt;/a&gt; foundation code for NTP Version 2 as specified in RFC-1119&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20jhay@icomtek.csir.co.za&#34;&gt;John Hay &lt;a href=&#34;mailto:jhay@icomtek.csir.co.za&#34;&gt;jhay@icomtek.csir.co.za&lt;/a&gt;&lt;/a&gt; IPv6 support and testing&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20davehart@davehart.com&#34;&gt;Dave Hart &lt;a href=&#34;mailto:davehart@davehart.com&#34;&gt;davehart@davehart.com&lt;/a&gt;&lt;/a&gt; General maintenance, Windows port interpolation rewrite&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20neoclock4x@linum.com&#34;&gt;Claas Hilbrecht &lt;a href=&#34;mailto:neoclock4x@linum.com&#34;&gt;neoclock4x@linum.com&lt;/a&gt;&lt;/a&gt; NeoClock4X clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20glenn@herald.usask.ca&#34;&gt;Glenn Hollinger &lt;a href=&#34;mailto:glenn@herald.usask.ca&#34;&gt;glenn@herald.usask.ca&lt;/a&gt;&lt;/a&gt; GOES clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20iglesias@uci.edu&#34;&gt;Mike Iglesias &lt;a href=&#34;mailto:iglesias@uci.edu&#34;&gt;iglesias@uci.edu&lt;/a&gt;&lt;/a&gt; DEC Alpha port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:jim@jagubox.gsfc.nasa.gov&#34;&gt;Jim Jagielski &lt;a href=&#34;mailto:jim@jagubox.gsfc.nasa.gov&#34;&gt;jim@jagubox.gsfc.nasa.gov&lt;/a&gt;&lt;/a&gt; A/UX port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20jbj@chatham.usdesign.com&#34;&gt;Jeff Johnson &lt;a href=&#34;mailto:jbj@chatham.usdesign.com&#34;&gt;jbj@chatham.usdesign.com&lt;/a&gt;&lt;/a&gt; massive prototyping overhaul&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Hans.Lambermont@nl.origin-it.com&#34;&gt;Hans Lambermont &lt;a href=&#34;mailto:Hans.Lambermont@nl.origin-it.com&#34;&gt;Hans.Lambermont@nl.origin-it.com&lt;/a&gt;&lt;/a&gt; or &lt;a href=&#34;mailto:H.Lambermont@chello.nl&#34;&gt;&lt;a href=&#34;mailto:H.Lambermont@chello.nl&#34;&gt;H.Lambermont@chello.nl&lt;/a&gt;&lt;/a&gt; ntpsweep&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20phk@FreeBSD.ORG&#34;&gt;Poul-Henning Kamp &lt;a href=&#34;mailto:phk@FreeBSD.ORG&#34;&gt;phk@FreeBSD.ORG&lt;/a&gt;&lt;/a&gt; Oncore driver (Original author)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www4.informatik.uni-erlangen.de/%7ekardel&#34;&gt;Frank Kardel&lt;/a&gt; &lt;a href=&#34;mailto:kardel@ntp.org&#34;&gt;&amp;lt;kardel (at) ntp (dot) org&amp;gt;&lt;/a&gt; PARSE &lt;GENERIC&gt; (driver 14 reference clocks), STREAMS modules for PARSE, support scripts, syslog cleanup, dynamic interface handling&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:kuehn@ntp.org&#34;&gt;Johannes Maximilian Kuehn &lt;a href=&#34;mailto:kuehn@ntp.org&#34;&gt;kuehn@ntp.org&lt;/a&gt;&lt;/a&gt; Rewrote &lt;tt&gt;sntp&lt;/tt&gt; to comply with NTPv4 specification, &lt;tt&gt;ntpq saveconfig&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20jones@hermes.chpc.utexas.edu&#34;&gt;William L. Jones &lt;a href=&#34;mailto:jones@hermes.chpc.utexas.edu&#34;&gt;jones@hermes.chpc.utexas.edu&lt;/a&gt;&lt;/a&gt; RS/6000 AIX modifications, HPUX modifications&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20dkatz@cisco.com&#34;&gt;Dave Katz &lt;a href=&#34;mailto:dkatz@cisco.com&#34;&gt;dkatz@cisco.com&lt;/a&gt;&lt;/a&gt; RS/6000 AIX port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20leres@ee.lbl.gov&#34;&gt;Craig Leres &lt;a href=&#34;mailto:leres@ee.lbl.gov&#34;&gt;leres@ee.lbl.gov&lt;/a&gt;&lt;/a&gt; 4.4BSD port, ppsclock, Magnavox GPS clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20lindholm@ucs.ubc.ca&#34;&gt;George Lindholm &lt;a href=&#34;mailto:lindholm@ucs.ubc.ca&#34;&gt;lindholm@ucs.ubc.ca&lt;/a&gt;&lt;/a&gt; SunOS 5.1 port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20louie@ni.umd.edu&#34;&gt;Louis A. Mamakos &lt;a href=&#34;mailto:louie@ni.umd.edu&#34;&gt;louie@ni.umd.edu&lt;/a&gt;&lt;/a&gt; MD5-based authentication&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20thorinn@diku.dk&#34;&gt;Lars H. Mathiesen &lt;a href=&#34;mailto:thorinn@diku.dk&#34;&gt;thorinn@diku.dk&lt;/a&gt;&lt;/a&gt; adaptation of foundation code for Version 3 as specified in RFC-1305&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mayer@ntp.org&#34;&gt;Danny Mayer &lt;a href=&#34;mailto:mayer@ntp.org&#34;&gt;mayer@ntp.org&lt;/a&gt;&lt;/a&gt;Network I/O, Windows Port, Code Maintenance&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mills@udel.edu&#34;&gt;David L. Mills &lt;a href=&#34;mailto:mills@udel.edu&#34;&gt;mills@udel.edu&lt;/a&gt;&lt;/a&gt; Version 4 foundation, precision kernel; clock drivers: 1, 3, 4, 6, 7, 11, 13, 18, 19, 22, 36&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20moeller@gwdgv1.dnet.gwdg.de&#34;&gt;Wolfgang Moeller &lt;a href=&#34;mailto:moeller@gwdgv1.dnet.gwdg.de&#34;&gt;moeller@gwdgv1.dnet.gwdg.de&lt;/a&gt;&lt;/a&gt; VMS port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mogul@pa.dec.com&#34;&gt;Jeffrey Mogul &lt;a href=&#34;mailto:mogul@pa.dec.com&#34;&gt;mogul@pa.dec.com&lt;/a&gt;&lt;/a&gt; ntptrace utility&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20tmoore@fievel.daytonoh.ncr.com&#34;&gt;Tom Moore &lt;a href=&#34;mailto:tmoore@fievel.daytonoh.ncr.com&#34;&gt;tmoore@fievel.daytonoh.ncr.com&lt;/a&gt;&lt;/a&gt; i386 svr4 port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20kamal@whence.com&#34;&gt;Kamal A Mostafa &lt;a href=&#34;mailto:kamal@whence.com&#34;&gt;kamal@whence.com&lt;/a&gt;&lt;/a&gt; SCO OpenServer port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20derek@toybox.demon.co.uk&#34;&gt;Derek Mulcahy &lt;a href=&#34;mailto:derek@toybox.demon.co.uk&#34;&gt;derek@toybox.demon.co.uk&lt;/a&gt;&lt;/a&gt; and &lt;a href=&#34;mailto:%20d@hd.org&#34;&gt;Damon Hart-Davis &lt;a href=&#34;mailto:d@hd.org&#34;&gt;d@hd.org&lt;/a&gt;&lt;/a&gt; ARCRON MSF clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20neal@ntp.org&#34;&gt;Rob Neal &lt;a href=&#34;mailto:neal@ntp.org&#34;&gt;neal@ntp.org&lt;/a&gt;&lt;/a&gt; Bancomm refclock and config/parse code maintenance&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Rainer.Pruy@informatik.uni-erlangen.de&#34;&gt;Rainer Pruy &lt;a href=&#34;mailto:Rainer.Pruy@informatik.uni-erlangen.de&#34;&gt;Rainer.Pruy@informatik.uni-erlangen.de&lt;/a&gt;&lt;/a&gt; monitoring/trap scripts, statistics file handling&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20dirce@zk3.dec.com&#34;&gt;Dirce Richards &lt;a href=&#34;mailto:dirce@zk3.dec.com&#34;&gt;dirce@zk3.dec.com&lt;/a&gt;&lt;/a&gt; Digital UNIX V4.0 port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20wsanchez@apple.com&#34;&gt;Wilfredo Sánchez &lt;a href=&#34;mailto:wsanchez@apple.com&#34;&gt;wsanchez@apple.com&lt;/a&gt;&lt;/a&gt; added support for NetInfo&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mrapple@quack.kfu.com&#34;&gt;Nick Sayer &lt;a href=&#34;mailto:mrapple@quack.kfu.com&#34;&gt;mrapple@quack.kfu.com&lt;/a&gt;&lt;/a&gt; SunOS streams modules&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20jack@innovativeinternet.com&#34;&gt;Jack Sasportas &lt;a href=&#34;mailto:jack@innovativeinternet.com&#34;&gt;jack@innovativeinternet.com&lt;/a&gt;&lt;/a&gt; Saved a Lot of space on the stuff in the html/pic/ subdirectory&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20schnitz@unipress.com&#34;&gt;Ray Schnitzler &lt;a href=&#34;mailto:schnitz@unipress.com&#34;&gt;schnitz@unipress.com&lt;/a&gt;&lt;/a&gt; Unixware1 port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20shields@tembel.org&#34;&gt;Michael Shields &lt;a href=&#34;mailto:shields@tembel.org&#34;&gt;shields@tembel.org&lt;/a&gt;&lt;/a&gt; USNO clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:jss@pebbles.jpl.nasa.gov&#34;&gt;Jeff Steinman &lt;a href=&#34;mailto:jss@pebbles.jpl.nasa.gov&#34;&gt;jss@pebbles.jpl.nasa.gov&lt;/a&gt;&lt;/a&gt; Datum PTS clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20harlan@pfcs.com&#34;&gt;Harlan Stenn &lt;a href=&#34;mailto:harlan@pfcs.com&#34;&gt;harlan@pfcs.com&lt;/a&gt;&lt;/a&gt; GNU automake/autoconfigure makeover, various other bits (see the ChangeLog)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20ken@sdd.hp.com&#34;&gt;Kenneth Stone &lt;a href=&#34;mailto:ken@sdd.hp.com&#34;&gt;ken@sdd.hp.com&lt;/a&gt;&lt;/a&gt; HP-UX port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20ajit@ee.udel.edu&#34;&gt;Ajit Thyagarajan &lt;a href=&#34;mailto:ajit@ee.udel.edu&#34;&gt;ajit@ee.udel.edu&lt;/a&gt;&lt;/a&gt;IP multicast/anycast support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20tsuruoka@nc.fukuoka-u.ac.jp&#34;&gt;Tomoaki TSURUOKA &lt;a href=&#34;mailto:tsuruoka@nc.fukuoka-u.ac.jp&#34;&gt;tsuruoka@nc.fukuoka-u.ac.jp&lt;/a&gt;&lt;/a&gt;TRAK clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20brian.utterback@oracle.com&#34;&gt;Brian Utterback &lt;a href=&#34;mailto:brian.utterback@oracle.com&#34;&gt;brian.utterback@oracle.com&lt;/a&gt;&lt;/a&gt; General codebase, Solaris issues&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20loganaden@gmail.com&#34;&gt;Loganaden Velvindron &lt;a href=&#34;mailto:loganaden@gmail.com&#34;&gt;loganaden@gmail.com&lt;/a&gt;&lt;/a&gt; Sandboxing (libseccomp) support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20vixie@vix.com&#34;&gt;Paul A Vixie &lt;a href=&#34;mailto:vixie@vix.com&#34;&gt;vixie@vix.com&lt;/a&gt;&lt;/a&gt; TrueTime GPS driver, generic TrueTime clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Ulrich.Windl@rz.uni-regensburg.de&#34;&gt;Ulrich Windl &lt;a href=&#34;mailto:Ulrich.Windl@rz.uni-regensburg.de&#34;&gt;Ulrich.Windl@rz.uni-regensburg.de&lt;/a&gt;&lt;/a&gt; corrected and validated HTML documents according to the HTML DTD&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Debugging Reference Clock Drivers</title>
      <link>/archives/4.2.8-series/rdebug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/rdebug/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/oz2.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;The Wizard of Oz&lt;/em&gt;, L. Frank Baum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Call the girls and they&amp;rsquo;ll sweep your bugs.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:19 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The &lt;a href=&#34;/archives/4.2.8-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; and &lt;a href=&#34;/archives/4.2.8-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt;&lt;/a&gt; utility programs can be used to debug reference clocks, either on the server itself or from another machine elsewhere in the network. The server is compiled, installed and started using the configuration file described in the &lt;a href=&#34;/archives/4.2.8-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt;&lt;/a&gt; page and its dependencies. If the clock appears in the &lt;tt&gt;ntpq&lt;/tt&gt; utility and &lt;tt&gt;pe&lt;/tt&gt; command, no errors have occurred and the daemon has started, opened the devices specified and waiting for peers and radios to come up. If not, the first thing to look for are error messages on the system log. These are usually due to improper configuration, missing links or multiple instances of the daemon.&lt;/p&gt;
&lt;p&gt;It normally takes a minute or so for evidence to appear that the clock is running and the driver is operating correctly. The first indication is a nonzero value in the &lt;tt&gt;reach&lt;/tt&gt; column in the &lt;tt&gt;pe&lt;/tt&gt; billboard. If nothing appears after a few minutes, the next step is to be sure the RS232 messages, if used, are getting to and from the clock. The most reliable way to do this is with an RS232 tester and to look for data flashes as the driver polls the clock and/or as data arrive from the clock. Our experience is that the overwhelming fraction of problems occurring during installation are due to problems such as miswired connectors or improperly configured device links at this stage.&lt;/p&gt;
&lt;p&gt;If RS232 messages are getting to and from the clock, the variables of interest can be inspected using the &lt;tt&gt;ntpq&lt;/tt&gt; program and various commands described on the documentation page. First, use the &lt;tt&gt;pe&lt;/tt&gt; and &lt;tt&gt;as&lt;/tt&gt; commands to display billboards showing the peer configuration and association IDs for all peers, including the radio clock. The assigned clock address should appear in the &lt;tt&gt;pe&lt;/tt&gt; billboard and the association ID for it at the same relative line position in the &lt;tt&gt;as&lt;/tt&gt; billboard.&lt;/p&gt;
&lt;p&gt;Additional information is available with the &lt;tt&gt;rv&lt;/tt&gt; and &lt;tt&gt;clockvar&lt;/tt&gt; commands, which take as argument the association ID shown in the &lt;tt&gt;as&lt;/tt&gt; billboard. The &lt;tt&gt;rv&lt;/tt&gt; command with no argument shows the system variables, while the &lt;tt&gt;rv&lt;/tt&gt; command with association ID argument shows the peer variables for the clock, as well as other peers of interest. The &lt;tt&gt;clockvar&lt;/tt&gt; command with argument shows the peer variables specific to reference clock peers, including the clock status, device name, last received timecode (if relevant), and various event counters. In addition, a subset of the &lt;tt&gt;fudge&lt;/tt&gt; parameters is included. The poll and error counters in the &lt;tt&gt;clockvar&lt;/tt&gt; billboard are useful debugging aids. The &lt;tt&gt;poll&lt;/tt&gt; counts the poll messages sent to the clock, while the &lt;tt&gt;noreply&lt;/tt&gt;, &lt;tt&gt;badformat&lt;/tt&gt; and &lt;tt&gt;baddate&lt;/tt&gt; count various errors. Check the timecode to be sure it matches what the driver expects. This may require consulting the clock hardware reference manual, which is probably pretty dusty at this stage.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpdc&lt;/tt&gt; utility program can be used for detailed inspection of the clock driver status. The most useful are the &lt;tt&gt;clockstat&lt;/tt&gt; and &lt;tt&gt;clkbug&lt;/tt&gt; commands described in the document page. While these commands permit getting quite personal with the particular driver involved, their use is seldom necessary, unless an implementation bug shows up. If all else fails, turn on the debugging trace using two &lt;tt&gt;-d&lt;/tt&gt; flags in the &lt;tt&gt;ntpd&lt;/tt&gt; startup command line. Most drivers will dump status at every received message in this case. While the displayed trace can be intimidating, this provides the most detailed and revealing indicator of how the driver and clock are performing and where bugs might lurk.&lt;/p&gt;
&lt;p&gt;Most drivers write a message to the &lt;tt&gt;clockstats&lt;/tt&gt; file as each timecode or surrogate is received from the radio clock. By convention, this is the last ASCII timecode (or ASCII gloss of a binary-coded one) received from the radio clock. This file is managed by the &lt;tt&gt;filegen&lt;/tt&gt; facility described in the &lt;tt&gt;ntpd&lt;/tt&gt; page and requires specific commands in the configuration file. This forms a highly useful record to discover anomalies during regular operation of the clock. The scripts included in the &lt;tt&gt;./scripts/stats&lt;/tt&gt; directory can be run from a &lt;tt&gt;cron&lt;/tt&gt; job to collect and summarize these data on a daily or weekly basis. The summary files have proven inspirational to detect infrequent misbehavior due to clock implementation bugs in some radios.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Event Messages and Status Words</title>
      <link>/archives/4.2.8-series/decode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/decode/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice47.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Caterpillar knows all the error codes, which is more than most of us do.&lt;/p&gt;
&lt;p&gt;Last update: 26-Jul-2015 06:26 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#system-status-word&#34;&gt;System Status Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#peer-status-word&#34;&gt;Peer Status Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#clock-status-word&#34;&gt;Clock Status Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#flash-status-word&#34;&gt;Flash Status Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#kiss-codes&#34;&gt;Kiss Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#crypto-messages&#34;&gt;Crypto Messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This page lists the status words, event messages and error codes used for &lt;tt&gt;ntpd&lt;/tt&gt; reporting and monitoring. Status words are used to display the current status of the running program. There is one system status word and a peer status word for each association. There is a clock status word for each association that supports a reference clock. There is a flash code for each association which shows errors found in the last packet received (pkt) and during protocol processing (peer). These are commonly viewed using the &lt;tt&gt;ntpq&lt;/tt&gt; program.&lt;/p&gt;
&lt;p&gt;Significant changes in program state are reported as events. There is one set of system events and a set of peer events for each association. In addition, there is a set of clock events for each association that supports a reference clock. Events are normally reported to the &lt;tt&gt;protostats&lt;/tt&gt; monitoring file and optionally to the system log. In addition, if the trap facility is configured, events can be reported to a remote program that can page an administrator.&lt;/p&gt;
&lt;p&gt;This page also includes a description of the error messages produced by the Autokey protocol. These messages are normally sent to the &lt;tt&gt;cryptostats&lt;/tt&gt; monitoring file.&lt;/p&gt;
&lt;p&gt;In the following tables the Event Field is the status or event code assigned and the Message Field a short string used for display and event reporting. The Description field contains a longer explanation of the status or event. Some messages include additional information useful for error diagnosis and performance assessment.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;system-status-word&#34;&gt;System Status Word&lt;/h4&gt;
&lt;p&gt;The system status word consists of four fields LI (0-1), Source (2-7), Count (8-11) and Event (12-15). It is reported in the first line of the &lt;tt&gt;rv&lt;/tt&gt; display produced by the &lt;tt&gt;ntpq&lt;/tt&gt; program.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Leap Field&lt;/strong&gt; displays the system leap indicator bits coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;leap_none&lt;/td&gt;
&lt;td&gt;normal synchronized state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;leap_add_sec&lt;/td&gt;
&lt;td&gt;insert second after 23:59:59 of the current day&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;leap_del_sec&lt;/td&gt;
&lt;td&gt;delete second 23:59:59 of the current day&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;leap_alarm&lt;/td&gt;
&lt;td&gt;never synchronized&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;strong&gt;Source Field&lt;/strong&gt; displays the current synchronization source coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;sync_unspec&lt;/td&gt;
&lt;td&gt;not yet synchronized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;sync_pps&lt;/td&gt;
&lt;td&gt;pulse-per-second signal (Cs, Ru, GPS, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;sync_lf_radio&lt;/td&gt;
&lt;td&gt;VLF/LF radio (WWVB, DCF77, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;sync_hf_radio&lt;/td&gt;
&lt;td&gt;MF/HF radio (WWV, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;sync_uhf_radio&lt;/td&gt;
&lt;td&gt;VHF/UHF radio/satellite (GPS, Galileo, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;sync_local&lt;/td&gt;
&lt;td&gt;local timecode (IRIG, LOCAL driver, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;sync_ntp&lt;/td&gt;
&lt;td&gt;NTP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;sync_other&lt;/td&gt;
&lt;td&gt;other (IEEE 1588, openntp, crony, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;sync_wristwatch&lt;/td&gt;
&lt;td&gt;eyeball and wristwatch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;sync_telephone&lt;/td&gt;
&lt;td&gt;telephone modem (ACTS, PTB, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;strong&gt;Count Field&lt;/strong&gt; displays the number of events since the last time the code changed. Upon reaching 15, subsequent events with the same code are ignored.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Event Field&lt;/strong&gt; displays the most recent event message coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;unspecified&lt;/td&gt;
&lt;td&gt;unspecified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;freq_not_set&lt;/td&gt;
&lt;td&gt;frequency file not available&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;freq_set&lt;/td&gt;
&lt;td&gt;frequency set from frequency file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;spike_detect&lt;/td&gt;
&lt;td&gt;spike detected&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;freq_mode&lt;/td&gt;
&lt;td&gt;initial frequency training mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;clock_sync&lt;/td&gt;
&lt;td&gt;clock synchronized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;restart&lt;/td&gt;
&lt;td&gt;program restart&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07&lt;/td&gt;
&lt;td&gt;panic_stop&lt;/td&gt;
&lt;td&gt;clock error more than 600 s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08&lt;/td&gt;
&lt;td&gt;no_system_peer&lt;/td&gt;
&lt;td&gt;no system peer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;09&lt;/td&gt;
&lt;td&gt;leap_armed&lt;/td&gt;
&lt;td&gt;leap second armed from file or Autokey&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0a&lt;/td&gt;
&lt;td&gt;leap_disarmed&lt;/td&gt;
&lt;td&gt;leap second disarmed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0b&lt;/td&gt;
&lt;td&gt;leap_event&lt;/td&gt;
&lt;td&gt;leap event&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0c&lt;/td&gt;
&lt;td&gt;clock_step&lt;/td&gt;
&lt;td&gt;clock stepped&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0d&lt;/td&gt;
&lt;td&gt;kern&lt;/td&gt;
&lt;td&gt;kernel information message&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0e&lt;/td&gt;
&lt;td&gt;TAI&amp;hellip;&lt;/td&gt;
&lt;td&gt;leapsecond values update from file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0f&lt;/td&gt;
&lt;td&gt;stale leapsecond values&lt;/td&gt;
&lt;td&gt;new NIST leapseconds file needed&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;peer-status-word&#34;&gt;Peer Status Word&lt;/h4&gt;
&lt;p&gt;The peer status word consists of four fields: Status (0-4), Select (5-7), Count (8-11) and Code (12-15). It is reported in the first line of the &lt;tt&gt;rv &lt;em&gt;associd&lt;/em&gt;&lt;/tt&gt; display produced by the &lt;tt&gt;ntpq&lt;/tt&gt; program.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Status Field&lt;/strong&gt; displays the peer status code bits in hexadecimal; each bit is an independent flag. &lt;strong&gt;Note this field is 5 bits wide, and combines with the 3-bit-wide Select Field to create the first full byte of the peer status word.&lt;/strong&gt; The meaning of each bit in the Status Field is listed in the following table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;08&lt;/td&gt;
&lt;td&gt;bcst&lt;/td&gt;
&lt;td&gt;broadcast association&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;reach&lt;/td&gt;
&lt;td&gt;host reachable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;auth&lt;/td&gt;
&lt;td&gt;authentication ok&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;authenb&lt;/td&gt;
&lt;td&gt;authentication enabled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;config&lt;/td&gt;
&lt;td&gt;persistent association&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;strong&gt;Select Field&lt;/strong&gt; displays the current selection status. The T Field gives the corresponding tally codes used in the &lt;tt&gt;ntpq peers&lt;/tt&gt; display. The values are coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;T&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;sel_reject&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;discarded as not valid (TEST10-TEST13)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;sel_falsetick&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;discarded by intersection algorithm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;sel_excess&lt;/td&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;discarded by table overflow (not used)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;sel_outlier&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;discarded by the cluster algorithm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;sel_candidate&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;included by the combine algorithm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;sel_backup&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;backup (more than &lt;tt&gt;tos maxclock&lt;/tt&gt; sources)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;sel_sys.peer&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;system peer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;sel_pps.peer&lt;/td&gt;
&lt;td&gt;o&lt;/td&gt;
&lt;td&gt;PPS peer (when the prefer peer is valid)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;strong&gt;Count Field&lt;/strong&gt; displays the number of events since the last time the code changed. Upon reaching 15, subsequent events with the same code are ignored.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Event Field&lt;/strong&gt; displays the most recent event message coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;mobilize&lt;/td&gt;
&lt;td&gt;association mobilized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;demobilize&lt;/td&gt;
&lt;td&gt;association demobilized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;unreachable&lt;/td&gt;
&lt;td&gt;server unreachable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;reachable&lt;/td&gt;
&lt;td&gt;server reachable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;restart&lt;/td&gt;
&lt;td&gt;association restart&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;no_reply&lt;/td&gt;
&lt;td&gt;no server found (&lt;tt&gt;ntpdate&lt;/tt&gt; mode)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07&lt;/td&gt;
&lt;td&gt;rate_exceeded&lt;/td&gt;
&lt;td&gt;rate exceeded (kiss code &lt;tt&gt;RATE&lt;/tt&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08&lt;/td&gt;
&lt;td&gt;access_denied&lt;/td&gt;
&lt;td&gt;access denied (kiss code &lt;tt&gt;DENY&lt;/tt&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;09&lt;/td&gt;
&lt;td&gt;leap_armed&lt;/td&gt;
&lt;td&gt;leap armed from server LI code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0a&lt;/td&gt;
&lt;td&gt;sys_peer&lt;/td&gt;
&lt;td&gt;become system peer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0b&lt;/td&gt;
&lt;td&gt;clock_event&lt;/td&gt;
&lt;td&gt;see clock status word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0c&lt;/td&gt;
&lt;td&gt;bad_auth&lt;/td&gt;
&lt;td&gt;authentication failure&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0d&lt;/td&gt;
&lt;td&gt;popcorn&lt;/td&gt;
&lt;td&gt;popcorn spike suppressor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0e&lt;/td&gt;
&lt;td&gt;interleave_mode&lt;/td&gt;
&lt;td&gt;entering interleave mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0f&lt;/td&gt;
&lt;td&gt;interleave_error&lt;/td&gt;
&lt;td&gt;interleave error (recovered)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clock-status-word&#34;&gt;Clock Status Word&lt;/h4&gt;
&lt;p&gt;The clock status word consists of four fields: Unused (0-7), Count (8-11) and Code (12-15). It is reported in the first line of the &lt;tt&gt;clockvar &lt;em&gt;associd&lt;/em&gt;&lt;/tt&gt; display produced by the &lt;tt&gt;ntpq&lt;/tt&gt; program.&lt;/p&gt;
&lt;p&gt;The Count Field displays the number of events since the last &lt;tt&gt;lockvar&lt;/tt&gt; command, while the &lt;strong&gt;Event Field&lt;/strong&gt; displays the most recent event message coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;clk_unspe&lt;/td&gt;
&lt;td&gt;nominal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;clk_noreply&lt;/td&gt;
&lt;td&gt;no reply to poll&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;clk_badformat&lt;/td&gt;
&lt;td&gt;bad timecode format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;clk_fault&lt;/td&gt;
&lt;td&gt;hardware or software fault&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;clk_bad_signal&lt;/td&gt;
&lt;td&gt;signal loss&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;clk_bad_date&lt;/td&gt;
&lt;td&gt;bad date format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;clk_bad_time&lt;/td&gt;
&lt;td&gt;bad time format&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;When the clock driver sets the code to a new value, a &lt;tt&gt;clock_alarm&lt;/tt&gt; (11) peer event is reported.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;flash-status-word&#34;&gt;Flash Status Word&lt;/h4&gt;
&lt;p&gt;The flash status word is displayed by the &lt;tt&gt;ntpq&lt;/tt&gt; program &lt;tt&gt;rv&lt;/tt&gt; command. It consists of a number of bits coded in hexadecimal as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Tag&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0001&lt;/td&gt;
&lt;td&gt;TEST1&lt;/td&gt;
&lt;td&gt;pkt_dup&lt;/td&gt;
&lt;td&gt;duplicate packet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0002&lt;/td&gt;
&lt;td&gt;TEST2&lt;/td&gt;
&lt;td&gt;pkt_bogus&lt;/td&gt;
&lt;td&gt;bogus packet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0004&lt;/td&gt;
&lt;td&gt;TEST3&lt;/td&gt;
&lt;td&gt;pkt_unsync&lt;/td&gt;
&lt;td&gt;server not synchronized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0008&lt;/td&gt;
&lt;td&gt;TEST4&lt;/td&gt;
&lt;td&gt;pkt_denied&lt;/td&gt;
&lt;td&gt;access denied&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0010&lt;/td&gt;
&lt;td&gt;TEST5&lt;/td&gt;
&lt;td&gt;pkt_auth&lt;/td&gt;
&lt;td&gt;authentication failure&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0020&lt;/td&gt;
&lt;td&gt;TEST6&lt;/td&gt;
&lt;td&gt;pkt_stratum&lt;/td&gt;
&lt;td&gt;invalid leap or stratum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0040&lt;/td&gt;
&lt;td&gt;TEST7&lt;/td&gt;
&lt;td&gt;pkt_header&lt;/td&gt;
&lt;td&gt;header distance exceeded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0080&lt;/td&gt;
&lt;td&gt;TEST8&lt;/td&gt;
&lt;td&gt;pkt_autokey&lt;/td&gt;
&lt;td&gt;Autokey sequence error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0100&lt;/td&gt;
&lt;td&gt;TEST9&lt;/td&gt;
&lt;td&gt;pkt_crypto&lt;/td&gt;
&lt;td&gt;Autokey protocol error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0200&lt;/td&gt;
&lt;td&gt;TEST10&lt;/td&gt;
&lt;td&gt;peer_stratum&lt;/td&gt;
&lt;td&gt;invalid header or stratum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0400&lt;/td&gt;
&lt;td&gt;TEST11&lt;/td&gt;
&lt;td&gt;peer_dist&lt;/td&gt;
&lt;td&gt;distance threshold exceeded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0800&lt;/td&gt;
&lt;td&gt;TEST12&lt;/td&gt;
&lt;td&gt;peer_loop&lt;/td&gt;
&lt;td&gt;synchronization loop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;TEST13&lt;/td&gt;
&lt;td&gt;peer_unreach&lt;/td&gt;
&lt;td&gt;unreachable or nonselect&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;kiss-codes&#34;&gt;Kiss Codes&lt;/h4&gt;
&lt;p&gt;Kiss codes are used in kiss-o&#39;-death (KoD) packets, billboard displays and log messages. They consist of a string of four zero-padded ASCII charactes. In practice they are informal and tend to change with time and implementation. Some of these codes can appear in the reference identifier field in &lt;tt&gt;ntpq&lt;/tt&gt; billboards. Following is the current list:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ACST&lt;/td&gt;
&lt;td&gt;manycast server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AUTH&lt;/td&gt;
&lt;td&gt;authentication error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AUTO&lt;/td&gt;
&lt;td&gt;Autokey sequence error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BCST&lt;/td&gt;
&lt;td&gt;broadcast server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CRYPT&lt;/td&gt;
&lt;td&gt;Autokey protocol error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DENY&lt;/td&gt;
&lt;td&gt;access denied by server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INIT&lt;/td&gt;
&lt;td&gt;association initialized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MCST&lt;/td&gt;
&lt;td&gt;multicast server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RATE&lt;/td&gt;
&lt;td&gt;rate exceeded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIME&lt;/td&gt;
&lt;td&gt;association timeout&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;STEP&lt;/td&gt;
&lt;td&gt;step time change&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;crypto-messages&#34;&gt;Crypto Messages&lt;/h4&gt;
&lt;p&gt;These messages are sent to the &lt;tt&gt;cryptostats&lt;/tt&gt; file when an error is detected in the Autokey protocol.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;bad_format&lt;/td&gt;
&lt;td&gt;bad extension field format or length&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;bad_timestamp&lt;/td&gt;
&lt;td&gt;bad timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;bad_filestamp&lt;/td&gt;
&lt;td&gt;bad filestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;bad_public_key&lt;/td&gt;
&lt;td&gt;bad or missing public key&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;bad_digest&lt;/td&gt;
&lt;td&gt;unsupported digest type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;bad_identity&lt;/td&gt;
&lt;td&gt;unsupported identity type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07&lt;/td&gt;
&lt;td&gt;bad_siglength&lt;/td&gt;
&lt;td&gt;bad signature length&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08&lt;/td&gt;
&lt;td&gt;bad signature&lt;/td&gt;
&lt;td&gt;extension field signature not verified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;09&lt;/td&gt;
&lt;td&gt;cert_not_verified&lt;/td&gt;
&lt;td&gt;certificate signature not verified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0a&lt;/td&gt;
&lt;td&gt;cert_expired&lt;/td&gt;
&lt;td&gt;host certificate expired&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0b&lt;/td&gt;
&lt;td&gt;bad_cookie&lt;/td&gt;
&lt;td&gt;bad or missing cookie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0c&lt;/td&gt;
&lt;td&gt;bad_leapseconds&lt;/td&gt;
&lt;td&gt;bad or missing leapseconds values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0d&lt;/td&gt;
&lt;td&gt;cert_missing&lt;/td&gt;
&lt;td&gt;bad or missing certificate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0e&lt;/td&gt;
&lt;td&gt;bad_group_key&lt;/td&gt;
&lt;td&gt;bad or missing group key&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0f&lt;/td&gt;
&lt;td&gt;proto_error&lt;/td&gt;
&lt;td&gt;protocol error&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: External Clock Discipline and the Local Clock Driver</title>
      <link>/archives/4.2.8-series/extern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/extern/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 9-May-2014 04:46 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The NTPv4 implementation includes provisions for an external clock, where the system clock is implemented by some external hardware device. One implementation might take the form of a bus peripheral with a high resolution counter disciplined by a GPS receiver, for example. Another implementation might involve another synchronization protocol, such as the Digital Time Synchronization Service (DTSS), where the system time is disciplined to this protocol and NTP clients of the server obtain synchronization indirectly via the server. A third implementation might be a completely separate clock discipline algorithm and synchronization protocol, such as the &lt;tt&gt;Lockclock&lt;/tt&gt; algorithm used with NIST Automated Computer Time Service (ACTS) modem synchronized time.&lt;/p&gt;
&lt;p&gt;When external clocks are used in conjunction with NTP service, some way needs to be provided for the external clock driver and NTP daemon &lt;tt&gt;ntpd&lt;/tt&gt; to communicate and determine which discipline is in control. This is necessary in order to provide backup, for instance if the external clock or protocol were to fail and synchronization service fall back to other means, such as a local reference clock or another NTP server. In addition, when the external clock and driver are in control, some means needs to be provided for the clock driver to pass on status information and error statistics to the NTP daemon.&lt;/p&gt;
&lt;p&gt;Control and monitoring functions for the external clock and driver are implemented using the &lt;a href=&#34;/archives/drivers/driver1&#34;&gt;Local Clock (type 1) driver&lt;/a&gt; and the &lt;tt&gt;ntp_adjtime()&lt;/tt&gt; system call. This system call is implemented by special kernel provisions included in the kernel of several operating systems, including Solaris, Tru64, FreeBSD and Linux, and possibly others. When the external clock is disabled or not implemented, the system call is used to pass time and frequency information, as well as error statistics, to the kernel. Besides disciplining the system time, the same interface can be used by other applications to determine the operating parameters of the discipline.&lt;/p&gt;
&lt;p&gt;When the external clock is enabled, &lt;tt&gt;ntpd&lt;/tt&gt; does not discipline the system clock, nor does it maintain the error statistics. In this case, the external clock and driver do this using mechanisms unknown to &lt;tt&gt;ntpd&lt;/tt&gt;; however, in this case the kernel state variables are retrieved at 64-s intervals by the Local Clock driver and used by the clock selection and mitigation algorithms to determine the system variables presented to other NTP clients and peers. In this way, downstream clients and servers in the NTP subnet can make an intelligent choice when more than one server is available.&lt;/p&gt;
&lt;p&gt;In order to implement a reliable mitigation between ordinary NTP sources and the external clock source, a protocol is necessary between the local clock driver and the external clock driver. This is implemented using Boolean variables and certain bits in the kernel clock status word. The Boolean variables include the following:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp_enable&lt;/tt&gt;. set/reset by the &lt;tt&gt;enable&lt;/tt&gt; command. enables ntpd clock discipline&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp_contro&lt;/tt&gt;l. set during initial configuration if kernel support is available&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;kern_enable&lt;/tt&gt; Set/reset by the &lt;tt&gt;enable&lt;/tt&gt; command&lt;/p&gt;
&lt;p&gt;If the &lt;tt&gt;kern_enable&lt;/tt&gt; switch is set, the daemon computes the offset, frequency, maximum error, estimated error, time constant and status bits, then provides them to the kernel via &lt;tt&gt;ntp_adjtime()&lt;/tt&gt;. If this switch is not set, these values are not passed to the kernel; however, the daemon retrieves their present values and uses them in place of the values computed by the daemon.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;pps_update&lt;/tt&gt; bit set in the protocol routine if the prefer peer has survived and has offset less than 128 ms; otherwise set to zero.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;PPS control&lt;/tt&gt; Updated to the current time by kernel support if the PPS signal is enabled and working correctly. Set to zero in the adjust routine if the interval since the last update exceeds 120 s.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntp_enable&lt;/tt&gt; and &lt;tt&gt;kern_enable&lt;/tt&gt; are set by the configuration module. Normally, both switches default on, so the daemon can control the time and the kernel discipline can be used, if available. The &lt;tt&gt;pps_update&lt;/tt&gt; switch is set by the protocol module when it believes the PPS provider source is legitimate and operating within nominals. The &lt;tt&gt;ntp_control&lt;/tt&gt; switch is set during configuration by interrogating the kernel. If both the &lt;tt&gt;kern_enable&lt;/tt&gt; and &lt;tt&gt;ntp_control&lt;/tt&gt; switches are set, the daemon disciplines the clock via the kernel and the internal daemon discipline is disabled.&lt;/p&gt;
&lt;p&gt;The external clock driver controls the system time and clock selection in the following way. Normally, the driver adjusts the kernel time using the &lt;tt&gt;ntp_adjtime()&lt;/tt&gt; system call in the same way as the daemon. In the case where the kernel discipline is to be used intact, the clock offset is provided in this call and the loop operates as specified. In the case where the driver steers only the frequency, the offset is specified as zero.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Hints and Kinks</title>
      <link>/archives/4.2.8-series/hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/hints/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice35.gif&#34; alt=&#34;gif&#34;&gt; &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mother in law has all the answers.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:06 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This is an index for a set of troubleshooting notes contained in individual text files in the &lt;tt&gt;./hints&lt;/tt&gt; directory. They were supplied by various volunteers in the form of mail messages, patches or just plain word of mouth. Each note applies to a specific computer and operating system and gives information found useful in setting up the NTP distribution or site configuration. The notes are very informal and subject to errors; no attempt has been made to verify the accuracy of the information contained in them.&lt;/p&gt;
&lt;p&gt;Additions or corrections to this list or the information contained in the notes is solicited. The most useful submissions include the name of the computer manufacturer (and model numbers where appropriate), operating system (specific version(s) where appropriate), problem description, problem solution and submitter&amp;rsquo;s name and electric address. If the submitter is willing to continue debate on the problem, please so advise. See the &lt;a href=&#34;/archives/hints/toc&#34;&gt;directory listing&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Historical Notes</title>
      <link>/archives/4.2.8-series/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/history/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 10-Mar-2014 05:07 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;historical-notes-on-ntp-upgrades&#34;&gt;Historical Notes on NTP Upgrades&lt;/h4&gt;
&lt;p&gt;This is an interim report on recent upgrades to the NTPv4 reference implementation code base and documentation. This report documents the upgrade program, which began in June 2007 and continued until March 2008. It is very important to recognize that this historic document describes the upgrade status as of 2008. Additional upgrades have been implemented since then. As of mid 2011, the additional upgrades are documented on the &lt;a href=&#34;/archives/4.2.8-series/release&#34;&gt;NTP Version 4 Release Notes&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The motivation for this project was the overhaul and refinement of the code, some of which dates back twenty years. Some four dozen sets of fingers have introduced sometimes incompatible &amp;ldquo;improvements&amp;rdquo; that to some degree enhance or burden the product. There has been a continuing effort over the years to maintain the briar patch and pluck the more flagrant weeds, but it now requires a more systematic and thorough examination of purpose, design and implementation. The project is not complete, but far enough along to present a status report and review of significant changes.&lt;/p&gt;
&lt;p&gt;Please note THE CHANGES DO NOT AFFECT THE PROTOCOL SPECIFICATION AND DO NOT AFFECT INTEROPERABILITY WITH PREVIOUS VERSIONS.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;1-transparent-design&#34;&gt;1. Transparent Design&lt;/h4&gt;
&lt;p&gt;During the project a number of minor inconsistencies in various algorithms were found and resolved. In most cases this did not result in any changes in behavior, just a more simplified, transparent and easier to maintain design. In a few cases behavior has been modified to correct deficiencies and to avoid hostile attacks, as described below.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;2-documentation&#34;&gt;2. Documentation&lt;/h4&gt;
&lt;p&gt;The documentation required a major upgrade. Many pages have been overhauled, some completely rewritten and new ones added. A site map has been added and sorted by page category. A comprehensive command index has been added and sorted by page category. The command index includes a brief gloss for each command. A page has been added to show the various status word and event decodes used for monitoring and event reporting. The decodes show the internal code, ASCII report and short function gloss.&lt;/p&gt;
&lt;p&gt;New pages have been added on association management, automatic server discovery and rate management. Much of the overburden on the program manual and configuration pages has been moved to these pages with the intent of the original pages to contain primarily a functional description for the commands and command line options. This is still an ongoing process.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;3-bulletproofing&#34;&gt;3. Bulletproofing&lt;/h4&gt;
&lt;p&gt;In a continuing mission the code flow has been carefully adjusted to decrease vulnerability to configuration errors and possibly hostile attack. The order of restriction processing was adjusted to deflect access denials as early as possible and without consuming useless processor cycles. This is especially important in rate defense, as the MRU list should only be used for clients that could be legitimately served. In addition, the Autokey protocol was adjusted to avoid some potentially nasty disruption attacks.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;4-rate-management&#34;&gt;4. Rate Management&lt;/h4&gt;
&lt;p&gt;Strict rate controls have been refined in both outbound and inbound traffic for both minimum headway (guard time) and minimum average headway. This is a major improvement over the original limitreject design of 1992 and upgrade circa 2003. Headway violations result in an optional &lt;em&gt;kiss-o&#39;-death&lt;/em&gt; (KoD) packet. To avoid a clogging vulnerability, the KoD packets are themselves rate controlled for each source address separately.&lt;/p&gt;
&lt;p&gt;The main feature of the revised design is that it is responsive to the server minimum headway and avoids guessing. This is done by setting the ppoll field in the server packet to the maximum of (a) the ppoll field in the client packet and (b) the server headway. The client sets the ppoll field in the association to the maximum of (a) the ppoll field in the server packet and (b) the minpoll field in the association. If this is a KoD and this value is greater than minpoll, minpoll is set to this value. The result is that the client continues sending, but only at headway at least as large as the server.&lt;/p&gt;
&lt;p&gt;The revised design makes possible a decrease in the minimum time constant/poll interval to 3 (8 s), which reduces the risetime to 250 s. This may be useful for rapid convergence when a client is first started, but should not be used for links with moderate to large jitter. This is done using the average option of the discard command, which sets the minimum poll interval and headway from the default 4 (16 s) to a value in the range 3 (8 s) to 6 (64 s). Larger values than 4 might be appropriate for very busy public servers.&lt;/p&gt;
&lt;p&gt;Rate management applies also to Autokey messages. This fixes a problem when iburst and autokey are both in play and when for some reason an association with iburst is repeatedly restarted. This may appear spooky to some folks that frequently restart a client for testing. The server remembers. Further information is in the current web documentation.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;5-frequency-file&#34;&gt;5. Frequency File&lt;/h4&gt;
&lt;p&gt;Initial frequency training has always been a problem, as it can take a very long time to trim the frequency estimate to nominal values. Once this happens and the frequency file is written, subsequent reboots will restore the frequency and frequency training is avoided. The problem is exacerbated using toll modem services such as ACTS which make a call at each poll interval. Until the training is complete the poll interval is held below the desired maximum as toll charges accrue.&lt;/p&gt;
&lt;p&gt;The problem was solved by changing the clock state machine so that, if no frequency file is available, an initial training interval of 300 s occurs, after which the frequency is directly calculated and the discipline then turned over to the feedback loop. The choice of 300 s is based on the assumption that time can be estimated within 1 ms and the resulting frequency estimate within nominal 1 PPM.&lt;/p&gt;
&lt;p&gt;Note that once the initial time offset is either stepped or slewed, no further time offsets are amortized during the training period. If the frequency error is large, the time offset at the end of the period can be moderately large, which then must be amortized by the feedback loop. While this may take up to an hour and result in a minor frequency tweak, the behavior is very much better than without the initial training. The remedy would require intricate and fragile code revisions.&lt;/p&gt;
&lt;p&gt;In the original design the frequency file was written at one-hour intervals. This apparently makes embedded systems folks nervous, since this can tire the flash NVRAM after several years. The interval between writes now depends on the ambient clock stability and normally maxes out at something over one day unless the frequency takes an unusual twitch.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;6-leapseconds&#34;&gt;6. Leapseconds&lt;/h4&gt;
&lt;p&gt;The leapsecond processing has been overhauled once again. The problem is to avoid fake leap warnings displayed by an errant server and to insure correct response in case of large time changes which might validate or invalidate arming for a subsequent leap. No leap information is used unless the client is synchronized to a proventic source. The values obtained from an Autokey server or peer are updated if newer than the current values. Server leap warning bits are disregarded if these values are available. If not, and if either a majority of the servers show leap warning bits or if one or more of the survivors are a reference clock with leap warning bit, the leap is armed. If armed by server leap warning bits and these provisions no longer prevail, the leap is disarmed. The NTPv4 protocol specifically does not speak to this issue.&lt;/p&gt;
&lt;p&gt;The leap armed condition is displayed in the host status word. Transitions between warnings and no warnings are reported to the protostats file, system log and traps.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;7-orphan-mode-and-local-clock-driver&#34;&gt;7. Orphan Mode and Local Clock Driver&lt;/h4&gt;
&lt;p&gt;The orphan mode code has been overhauled to correct some minor bugs and to clarify operation under normal and recovery conditions. The requirement that all subnet hosts have orphan configuration has been removed. The only requirement is that the orphan clients on the DMZ network sharing the root server(s) be so configured The scheme now works if the root servers are configured with each other, either in symmetric or broadcast modes. Orphan mode is not considered in the NTPv4 protocol specification.&lt;/p&gt;
&lt;p&gt;The local clock driver can be very dangerous when used as a fallback when connectivity to Internet time servers is interrupted. Orphan mode was designed to reduce the need for the local clock driver, as it is active only if no server is available. The local clock driver has been modified to have the same characteristics, regardless of stratum. Only if the host running the local clock driver loses all servers, regardless of stratum, is the driver activated. Thus, it is possible, but not recommended, to run the driver at any stratum, including zero.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;8-poll-rate-control&#34;&gt;8. Poll Rate Control&lt;/h4&gt;
&lt;p&gt;One of the most persistent problems is when after long operation and then a failure and then subsequently recovery, a client can take a long time to refresh the clock filter and resynchronize. Once the client has backed off the poll interval after a lengthy outage, it sends polls at that interval until receiving a response. At that time it temporarily retries at the minimum poll interval to fill up the clock filter. If iburst is configured, this will happen after 10 seconds or so and the client then resumes its poll interval required by the discipline time constant. This avoids needless network traffic while the poll interval increases gradually to the maximum. Further information is in the current web documentation.&lt;/p&gt;
&lt;p&gt;The same thing happens on initial startup or when an association is restarted. The intent is to avoid a blast of &lt;tt&gt;iburst&lt;/tt&gt; packets unless the server actually responds to the first one and to retry only while responding to the rate controls.&lt;/p&gt;
&lt;p&gt;In order to speed response to initial startup when a reference clock is available, the clock is set on the first message received from the driver. This exposed an interesting bug, now fixed, with the ACTS modem driver, which began prematurely to ramp up the poll interval.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;9-autokey&#34;&gt;9. Autokey&lt;/h4&gt;
&lt;p&gt;The management of host and group names with respect to Autokey configuration and key generation has been removed and simplified. On host certificates, the subject and issuer fields carry the group name, while other certificates carry the host name, which can be an arbitrary string having nothing to do with the DNS name. This opens up a possible future plan to use the Autokey name rather than the IP address when constructing the session key. It also allows a client to easily switch from one group to another without regenerating the certificate. Further information is in the current web documentation and in the latest Autokey ID.&lt;/p&gt;
&lt;p&gt;Various protocol refinements have been done in the Autokey state machine. A bug was found in symmetric modes where the peer cookies were not EXORed. A bug was found in processing the certificate cache when a participant was a client of two or more server in the same group which themselves had certificate trails to different trusted hosts.&lt;/p&gt;
&lt;p&gt;The protocol machine is now restarted every several days in order to update certificates and leapseconds values when they are changed.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;10-report-log-and-event-codes&#34;&gt;10. Report, Log and Event Codes&lt;/h4&gt;
&lt;p&gt;The status, selection, source, event and log decodes have been adjusted for consistency. Some of the decodes were missing, some with errors and a few new ones added. Old versions of ntpq continue to work without change, but display a new code as space. Except for the new codes, this behavior is consistent with RFC 1305 and proposed for the NTPv4 protocol specification.&lt;/p&gt;
&lt;p&gt;The ntpq as command has been changed to fix some very old bugs. The display is now consistent with the system and peer billboards. The authentication state is correctly displayed for broadcast server associations.&lt;/p&gt;
&lt;p&gt;The event reporting has been cleaned up for more straightforward interpretation by a remote agent. All significant state transitions are reported, including clock state machine changes, mobilization, /demobilization, system and peer restart, system peer change, panic stop and so forth.&lt;/p&gt;
&lt;p&gt;A new protostats monitoring file facility has been added. It works just like the other monitor files. All events are recorded to this file as reported and optionally to the system log. Many reports that sometimes clog up the system log are more usefully directed to this file. The reports also trigger a trap packet that can be sent via an agent to page an administrator.&lt;/p&gt;
&lt;p&gt;When the current mode-6 monitoring protocol was designed circa 1988 the considered intent was that monitoring functions rely only on the NTP packet itself and the system, peer and clock status words provided in the mode-6 packet. While the strongly felt advice at that time was to avoid reformatting the plain ASCII text sent by the server, at various times folks have cheated and reformatted the text. In some places this is good, like displaying the filter shift register; in some places this is bad, like reformatting the timestamps. There is nothing much that can be done about this now without angry mobs rioting when forced to upgrade to a new ntpq. I will not rule this out in future.&lt;/p&gt;
&lt;p&gt;A more serious comment has to do with using other than the NTP packet, status words and events for monitoring purposes. Emphasis added: monitors should not parse such things as the flash codes, clock state or anything else not called out in the NTPv4 specification. The clock state machine is defined in the specification, but no specific numbers are assigned to the states.&lt;/p&gt;
&lt;p&gt;When the numbers were changed to align for reporting purposes, some scripts no longer worked. The scripts should be changed to use only the leap and select fields of the system status word. If the leap field is other than 0, the client has synchronized at least once; if the select field is other than 0, the client is currently synchronized to the source indicated in the decode.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;11-two-step-and-timestamp-capture&#34;&gt;11. Two-step and timestamp capture&lt;/h4&gt;
&lt;p&gt;A number of interesting ideas were found in the IEEE 1588 Precision Time Protocol specification. One of them was the two-step protocol in which the transmit timestamp is sent in a following message. However, the PTP design operates only in a master-slave configuration and is not directly usable in NTP. The protocol was adapted to the NTP symmetric design, which requires four state variables rather than two. It is described on &lt;a href=&#34;http://www.eecis.udel.edu/~mills/stamp.html&#34;&gt;Timestamp Capture Principles&lt;/a&gt;. This might be an interesting project for future research.&lt;/p&gt;
&lt;p&gt;A detailed study of the timestamp capture opportunities for both hardware and software timestamping revealed that the most accurate and interoperable design involves the transmit timestamp at the beginning of the packet and then receive timestamp at the end. This makes it possible to accurately measure the offset and delay even if the ends of the synchronization path operate at different rates. It is described on the Timestamp Capture Principles page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;12-windows-client-bug&#34;&gt;12. Windows client bug&lt;/h4&gt;
&lt;p&gt;The Windows XP and Vista clients send the NTP request in symmetric active mode rather than client mode. An unsuspecting server could mobilize a symmetric passive association, which is a serious security vulnerability. The NTPv4 servers, including those at NIST and USNO, discard symmetric active requests unless cryptographically authenticated, so Windows clients do not work. The Microsoft KB 875424 discusses the preferred workaround; however, an optional workaround is now available so that, if the request is not authenticated, the server responds with symmetric passive mode, but without mobilize an association. The workaround is enabled with the WINTIME build option.&lt;/p&gt;
&lt;p&gt;The spec assumes that either peer in symmetric modes can synchronize the other should a peer lose all sources. The workaround violates that assumption and some legitimate configuration might be badly misused. It should be used only with this understanding.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;13-autonomous-configuration&#34;&gt;13. Autonomous configuration&lt;/h4&gt;
&lt;p&gt;The autonomous configuration (pool and manycast) code was refined to more reliably prune excess servers. If a truechimer is discarded by the clustering algorithm and the total number of survivors is greater than the maxclock option of the tos command, it is considered excess and shows a &amp;ldquo;#&amp;rdquo; tally code. If the association is ephemeral and survives the clustering algorithm, the watchdog counter is reset. If the watchdog timer expires and the total number of associations is greater than the maxclock option of the tos command, it is demobilized. This behavior is not considered in the NTPv4 protocol specification.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;14-code-ornamentation&#34;&gt;14. Code ornamentation&lt;/h4&gt;
&lt;p&gt;When auditing the code and figuring out its historic origin and evolution, additional commentary has been added so future generations can figure it out, too.&lt;/p&gt;
&lt;p&gt;David L. Mills&lt;br&gt;
17 March 2008&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: How NTP Works</title>
      <link>/archives/4.2.8-series/warp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/warp/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 10-Mar-2014 05:24 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/warp/#abstract&#34;&gt;Abstract&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/warp/#introduction-and-overview&#34;&gt;Introduction and Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/warp/#ntp-timescale-and-data-formats&#34;&gt;NTP Timescale and Data Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/warp/#architecture-and-algorithms&#34;&gt;Architecture and Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;abstract&#34;&gt;Abstract&lt;/h4&gt;
&lt;p&gt;This page and its dependencies contain a technical description of the Network Time Protocol (NTP) architecture and operation. It is intended for administrators, operators and monitoring personnel. Additional information for nontechnical readers can be found in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/exec.html&#34;&gt;Executive Summary: Computer Network Time Synchronization&lt;/a&gt;. While this page and its dependencies are primarily concerned with NTP, additional information on related protocols can be found in the white papers &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ptp.html&#34;&gt;IEEE 1588 Precision Time Protocol (PTP)&lt;/a&gt; and &lt;a href=&#34;http://www.eecis.udel.edu/~mills/proximity.html&#34;&gt;Time Synchronization for Space Data Links&lt;/a&gt;. Note that reference to a page in this document collection is to a page in the collection, while reference to a &lt;em&gt;white paper&lt;/em&gt; is to a document at the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ntp.html&#34;&gt;Network Time Synchronization Research Project&lt;/a&gt; web site.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction-and-overview&#34;&gt;Introduction and Overview&lt;/h4&gt;
&lt;p&gt;NTP time synchronization services are widely available in the public Internet. The public NTP subnet currently includes several thousand servers in most countries and on every continent of the globe, including Antarctica, and sometimes in space and on the sea floor. These servers support, directly or indirectly, a total population estimated at over 25 million computers in the global Internet.&lt;/p&gt;
&lt;p&gt;The NTP subnet operates with a hierarchy of levels, where each level is assigned a number called the stratum. Stratum 1 (primary) servers at the lowest level are directly synchronized to national time services via satellite, radio or telephone modem. Stratum 2 (secondary) servers at the next higher level are synchronized to stratum 1 servers and so on. Normally, NTP clients and servers with a relatively small number of clients do not synchronize to public primary servers. There are several hundred public secondary servers operating at higher strata and are the preferred choice.&lt;/p&gt;
&lt;p&gt;This page presents an overview of the NTP implementation included in this software distribution. We refer to this implementation as the &lt;em&gt;reference implementation&lt;/em&gt; only because it was used to test and validate the NTPv4 specification RFC-5905. It is best read in conjunction with the briefings and white papers on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ntp.html&#34;&gt;Network Time Synchronization Research Project&lt;/a&gt; page. An executive summary suitable for management and planning purposes is in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/exec.html&#34;&gt;Executive Summary: Computer Network Time Synchronization&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;ntp-timescale-and-data-formats&#34;&gt;NTP Timescale and Data Formats&lt;/h4&gt;
&lt;p&gt;NTP clients and servers synchronize to the Coordinated Universal Time (UTC) timescale used by national laboratories and disseminated by radio, satellite and telephone modem. This is a global timescale independent of geographic position. There are no provisions to correct for local time zone or daylight savings time; however, these functions can be performed by the operating system on a per-user basis.&lt;/p&gt;
&lt;p&gt;The UT1 timescale, upon which UTC is based, is determined by the rotation of the Earth about its axis. The Earth rotation is gradually slowing down relative to International Atomic Time (TAI). In order to rationalize UTC with respect to TAI, a leap second is inserted at intervals of about 18 months, as determined by the International Earth Rotation Service (IERS). Reckoning with leap seconds in the NTP timescale is described in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/leap.html&#34;&gt;The NTP Timescale and Leap Seconds&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The historic insertions are documented in the &lt;tt&gt;leap-seconds.list&lt;/tt&gt; file, which can be downloaded from the NIST FTP servers. This file is updated at intervals not exceeding six months. Leap second warnings are disseminated by the national laboratories in the broadcast timecode format. These warnings are propagated from the NTP primary servers via other server to the clients by the NTP on-wire protocol. The leap second is implemented by the operating system kernel, as described in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/leap.html&#34;&gt;The NTP Timescale and Leap Seconds&lt;/a&gt;. Implementation details are described on the &lt;a href=&#34;/archives/4.2.8-series/leap&#34;&gt;Leap Second Processing&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/time1.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: NTP Data Formats&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Figure 1 shows two NTP time formats, a 64-bit &lt;em&gt;timestamp&lt;/em&gt; format and a 128-bit &lt;em&gt;datestamp&lt;/em&gt; format. The datestamp format is used internally, while the timestamp format is used in packet headers exchanged between clients and servers. The timestamp format spans 136 years, called an &lt;em&gt;era&lt;/em&gt;. The current era began on 1 January 1900, while the next one begins in 2036. Details on these formats and conversions between them are in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/y2k.html&#34;&gt;The NTP Era and Era Numbering&lt;/a&gt;. However, the NTP protocol will synchronize correctly, regardless of era, as long as the system clock is set initially within 68 years of the correct time. Further discussion on this issue is in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/time.html&#34;&gt;NTP Timestamp Calculations&lt;/a&gt;. Ordinarily, these formats are not seen by application programs, which convert these NTP formats to native Unix or Windows formats.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;architecture-and-algorithms&#34;&gt;Architecture and Algorithms&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/fig_3_1.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 2: NTP Daemon Processes and Algorithms&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The overall organization of the NTP architecture is shown in Figure 2. It is useful in this context to consider the implementation as both a client of upstream (lower stratum) servers and as a server for downstream (higher stratum) clients. It includes a pair of peer/poll processes for each reference clock or remote server used as a synchronization source. Packets are exchanged between the client and server using the &lt;em&gt;on-wire protocol&lt;/em&gt; described in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/onwire.html&#34;&gt;Analysis and Simulation of the NTP On-Wire Protocols&lt;/a&gt;. The protocol is resistant to lost, replayed or spoofed packets.&lt;/p&gt;
&lt;p&gt;The poll process sends NTP packets at intervals ranging from 8 s to 36 hr. The intervals are managed as described on the &lt;a href=&#34;/archives/4.2.8-series/poll&#34;&gt;Poll Process&lt;/a&gt; page to maximize accuracy while minimizing network load. The peer process receives NTP packets and performs the packet sanity tests described on the &lt;a href=&#34;/archives/4.2.8-series/decode&#34;&gt;Event Messages and Status Words&lt;/a&gt; page and &lt;a href=&#34;/archives/4.2.8-series/decode/#flash-status-word&#34;&gt;flash status word&lt;/a&gt;. The flash status word reports in addition the results of various access control and security checks described in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/security.html&#34;&gt;NTP Security Analysis&lt;/a&gt;. A sophisticated traffic monitoring facility described on the &lt;a href=&#34;/archives/4.2.8-series/rate&#34;&gt;Rate Management and the Kiss-o&#39;-Death Packet&lt;/a&gt; page protects against denial-of-service (DoS) attacks.&lt;/p&gt;
&lt;p&gt;Packets that fail one or more of these tests are summarily discarded. Otherwise, the peer process runs the on-wire protocol that uses four raw timestamps: the &lt;em&gt;origin timestamp&lt;/em&gt; &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; upon departure of the client request, the &lt;em&gt;receive timestamp&lt;/em&gt; &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; upon arrival at the server, the &lt;em&gt;transmit timestamp&lt;/em&gt; &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;3&lt;/sub&gt; upon departure of the server reply, and the &lt;em&gt;destination timestamp&lt;/em&gt; &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;4&lt;/sub&gt; upon arrival at the client. These timestamps, which are recorded by the &lt;tt&gt;rawstats&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/monopt/#monitoring-commands-and-options&#34;&gt;&lt;tt&gt;filegen&lt;/tt&gt;&lt;/a&gt; command, are used to calculate the clock offset and roundtrip delay samples:&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;
&lt;p&gt;offset = [(&lt;em&gt;T&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; - &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;) + (&lt;em&gt;T&lt;/em&gt;&lt;sub&gt;3&lt;/sub&gt; - &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;4&lt;/sub&gt;)] / 2,&lt;br&gt;
delay = (&lt;em&gt;T&lt;/em&gt;&lt;sub&gt;4&lt;/sub&gt; - &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;) - (&lt;em&gt;T&lt;/em&gt;&lt;sub&gt;3&lt;/sub&gt; - &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this description the transmit timestamps &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; and &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;3&lt;/sub&gt; are &lt;em&gt;softstamps&lt;/em&gt; measured by the inline code. Softstamps are subject to various queuing and processing delays. A more accurate measurement uses &lt;em&gt;drivestamps&lt;/em&gt;, as described on the &lt;a href=&#34;/archives/4.2.8-series/xleave&#34;&gt;NTP Interleaved Modes&lt;/a&gt; page. These issues along with mathematical models are discussed in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/time.html&#34;&gt;NTP Timestamp Calculations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The offset and delay statistics for one or more peer processes are processed by a suite of mitigation algorithms. The algorithm described on the &lt;a href=&#34;/archives/4.2.8-series/filter&#34;&gt;Clock Filter Algorithm&lt;/a&gt; page selects the offset and delay samples most likely to produce accurate results. Those servers that have passed the sanity tests are declared &lt;em&gt;selectable&lt;/em&gt;. From the selectable population the statistics are used by the algorithm described on the &lt;a href=&#34;/archives/4.2.8-series/select&#34;&gt;Clock Select Algorithm&lt;/a&gt; page to determine a number of &lt;em&gt;truechimers&lt;/em&gt; according to Byzantine agreement and correctness principles. From the truechimer population the algorithm described on the &lt;a href=&#34;/archives/4.2.8-series/cluster&#34;&gt;Clock Cluster Algorithm&lt;/a&gt; page determines a number of &lt;em&gt;survivors&lt;/em&gt; on the basis of statistical clustering principles.&lt;/p&gt;
&lt;p&gt;The algorithms described on the &lt;a href=&#34;/archives/4.2.8-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page combine the survivor offsets, designate one of them as the &lt;em&gt;system peer&lt;/em&gt; and produces the final offset used by the algorithm described on the &lt;a href=&#34;/archives/4.2.8-series/discipline&#34;&gt;Clock Discipline Algorithm&lt;/a&gt; page to adjust the system clock time and frequency. The clock offset and frequency, are recorded by the &lt;tt&gt;loopstats&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/monopt/#monitoring-commands-and-options&#34;&gt;&lt;tt&gt;filegen&lt;/tt&gt;&lt;/a&gt; command. For additional details about these algorithms, see the Architecture Briefing on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ntp.html&#34;&gt;Network Time Synchronization Research Project&lt;/a&gt; page. For additional information on statistacl principles and performance metrics, see the &lt;a href=&#34;/archives/4.2.8-series/stats&#34;&gt;Performance Metrics&lt;/a&gt; page.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: How to Write a Reference Clock Driver</title>
      <link>/archives/4.2.8-series/howto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/howto/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo4.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You need a little magic.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:08 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/howto/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/howto/#conventions-fudge-factors-and-flags&#34;&gt;Conventions, Fudge Factors and Flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/howto/#files-which-need-to-be-changed&#34;&gt;Files Which Need to be Changed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/howto/#interface-routine-overview&#34;&gt;Interface Routine Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/howto/#pulse-per-second-interface&#34;&gt;Pulse-per-Second Interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;NTP reference clock support maintains the fiction that the clock is actually an ordinary server in the NTP tradition, but operating at a synthetic stratum of zero. The entire suite of algorithms filter the received data and select the best sources to correct the system clock. No packets are exchanged with a reference clock; however, the transmit, receive and packet procedures are replaced with code to simulate them.&lt;/p&gt;
&lt;p&gt;The driver assumes three timescales: standard time maintained by a distant laboratory such as USNO or NIST, reference time maintained by the external radio and the system time maintained by NTP. The radio synchronizes reference time via radio, satellite or modem. As the transmission means may not always be reliable, most radios continue to provide clock updates for some time after signal loss using an internal reference oscillator. In such cases the radio may or may not reveal the time since last synchronized or the estimated time error.&lt;/p&gt;
&lt;p&gt;All three timescales run only in Coordinated Universal Time (UTC) and are not adjusted for local timezone or standard/daylight time. The local timezone, standard/daylight indicator and year, if provided, are ignored. However, it is important to determine whether a leap second is to be inserted in the UTC timescale in the near future so NTP can insert it in the system timescale at the appropriate epoch.&lt;/p&gt;
&lt;p&gt;The interface routines in the &lt;tt&gt;ntp_refclock.c&lt;/tt&gt; source file call the following driver routines via a transfer vector:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;startup&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The association has just been mobilized. The driver may allocate a private structure and open the device(s) required.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;shutdown&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The association is about to be demobilized. The driver should close all device(s) and free private structures.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;receive&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A timecode string is ready for retrieval using the &lt;tt&gt;refclock_gtlin()&lt;/tt&gt; or &lt;tt&gt;refclock_gtraw()&lt;/tt&gt; routines and provide clock updates.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;poll&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Called at poll timeout, by default 64 s. Ordinarily, the driver will send a poll sequence to the radio as required.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;timer&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Called once per second. This can be used for housekeeping functions. In the case with pulse-per-second (PPS) signals, this can be used to process the signals and provide clock updates.&lt;/p&gt;
&lt;p&gt;The receive routine retrieves a timecode string via serial or parallel port, PPS signal or other means. It decodes the timecode in days, hours, minutes, seconds and nanoseconds and checks for errors. It provides these data along with the on-time timestamp to the &lt;tt&gt;refclock_process&lt;/tt&gt; routine, which saves the computed offset in a 60-sample circular buffer. On occasion, either by timeout, sample count or call to the poll routine, the driver calls &lt;tt&gt;refclock_receive&lt;/tt&gt; to process the circular buffer samples and update the system clock.&lt;/p&gt;
&lt;p&gt;The best way to understand how the clock drivers work is to study one of the drivers already implemented, such as &lt;tt&gt;refclock_wwvb.c&lt;/tt&gt;. The main interface is the &lt;tt&gt;refclockproc&lt;/tt&gt; structure, which contains for most drivers the decoded timecode, on-time timestamp, reference timestamp, exception reports and statistics tallies, etc. The support routines are passed a pointer to the &lt;tt&gt;peer&lt;/tt&gt; structure, which contains a pointer to the &lt;tt&gt;refclockproc&lt;/tt&gt; structure, which in turn contains a pointer to the unit structure, if used. For legacy purposes, a table &lt;tt&gt;typeunit[type][unit]&lt;/tt&gt; contains the peer structure pointer for each configured clock type and unit. This structure should not be used for new implementations.&lt;/p&gt;
&lt;p&gt;Radio and modem reference clocks by convention have addresses of the form &lt;tt&gt;127.127.&lt;em&gt;t&lt;/em&gt;.&lt;em&gt;u&lt;/em&gt;&lt;/tt&gt;, where &lt;em&gt;t&lt;/em&gt; is the clock type and &lt;em&gt;u&lt;/em&gt; in the range 0-3 is used to distinguish multiple instances of clocks of the same type. Most clocks require a serial or parallel port or special bus peripheral. The particular device is normally specified by adding a soft link &lt;tt&gt;/dev/device_u_&lt;/tt&gt; to the particular hardware device.&lt;/p&gt;
&lt;p&gt;By convention, reference clock drivers are named in the form &lt;tt&gt;refclock__xxxx_.c&lt;/tt&gt;, where &lt;tt&gt;_xxxx_&lt;/tt&gt; is a unique string. Each driver is assigned a unique type number, long-form driver name, short-form driver name and device name. The existing assignments are in the &lt;a href=&#34;/archives/4.2.8-series/refclock&#34;&gt;Reference Clock Drivers&lt;/a&gt; page and its dependencies. All drivers supported by the particular hardware and operating system are automatically detected in the
autoconfigure phase and conditionally compiled.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;conventions-fudge-factors-and-flags&#34;&gt;Conventions, Fudge Factors and Flags&lt;/h4&gt;
&lt;p&gt;Most drivers support manual or automatic calibration for systematic offset bias using values encoded in the &lt;tt&gt;fudge&lt;/tt&gt; configuration command. By convention, the &lt;tt&gt;time1&lt;/tt&gt; value defines the calibration offset in seconds. For those drivers that support statistics collection using the &lt;tt&gt;filegen&lt;/tt&gt; utility and the &lt;tt&gt;clockstats&lt;/tt&gt; file, the &lt;tt&gt;flag4&lt;/tt&gt; switch enables the utility.&lt;/p&gt;
&lt;p&gt;If the calibration feature has been enabled, the &lt;tt&gt;flag1&lt;/tt&gt; switch is set and the PPS signal is actively disciplining the system time, the &lt;tt&gt;time1&lt;/tt&gt; value is automatically adjusted to maintain a residual offset of zero. Once the its value has stabilized, the value can be inserted in the configuration file and the calibration feature disabled.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files-which-need-to-be-changed&#34;&gt;Files Which Need to be Changed&lt;/h4&gt;
&lt;p&gt;When a new reference clock driver is installed, the following files need to be edited. Note that changes are also necessary to properly integrate the driver in the configuration and makefile scripts, but these are decidedly beyond the scope of this page.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;./include/ntp.h&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The reference clock type defines are used in many places. Each driver is assigned a unique type number. Unused numbers are clearly marked in the list. A unique &lt;tt&gt;REFCLK__xxxx_&lt;/tt&gt; identification code should be recorded in the list opposite its assigned type number.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;./libntp/clocktypes.c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The &lt;tt&gt;./libntp/clktype&lt;/tt&gt; array is used by certain display functions. A unique short-form name of the driver should be entered together with its assigned identification code.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;./ntpd/ntp_control.c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The &lt;tt&gt;clocktypes&lt;/tt&gt; array is used for certain control message displays functions. It should be initialized with the reference clock class assigned to the driver, as per the NTP specification RFC-1305. See the &lt;tt&gt;./include/ntp_control.h&lt;/tt&gt; header file for the assigned classes.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;./ntpd/refclock_conf.c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This file contains a list of external structure definitions which are conditionally defined. A new set of entries should be installed similar to those already in the table. The &lt;tt&gt;refclock_conf&lt;/tt&gt; array is a set of pointers to transfer vectors in the individual drivers. The external name of the transfer vector should be initialized in correspondence with the type number.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;interface-routine-overview&#34;&gt;Interface Routine Overview&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;refclock_newpeer&lt;/tt&gt; - initialize and start a reference clock.&lt;/dt&gt;
&lt;p&gt;This routine allocates and initializes the interface structure which supports a reference clock in the form of an ordinary NTP peer. A driver-specific support routine completes the initialization, if used. Default peer variables which identify the clock and establish its reference ID and stratum are set here. It returns one if success and zero if the clock address is invalid or already running, insufficient resources are available or the driver declares a bum rap.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_unpeer&lt;/tt&gt; - shut down a clock&lt;/dt&gt;
&lt;p&gt;This routine is used to shut down a clock and return its resources to the system.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_transmit&lt;/tt&gt; - simulate the transmit procedure&lt;/dt&gt;
&lt;p&gt;This routine implements the NTP transmit procedure for a reference clock. This provides a mechanism to call the driver at the NTP poll interval, as well as provides a reachability mechanism to detect a broken radio or other madness.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_process&lt;/tt&gt; - insert a sample in the circular buffer&lt;/dt&gt;
&lt;p&gt;This routine saves the offset computed from the on-time timestamp and the days, hours, minutes, seconds and nanoseconds in the circular buffer. Note that no provision is included for the year, as provided by some (but not all) radio clocks. Ordinarily, the year is implicit in the Unix file system and hardware/software clock support, so this is ordinarily not a problem.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_receive&lt;/tt&gt; - simulate the receive and packet procedures&lt;/dt&gt;
&lt;p&gt;This routine simulates the NTP receive and packet procedures for a reference clock. This provides a mechanism in which the ordinary NTP filter, selection and combining algorithms can be used to suppress misbehaving radios and to mitigate between them when more than one is available for backup.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_gtraw&lt;/tt&gt;, &lt;tt&gt;refclock_gtlin&lt;/tt&gt; - read the buffer and on-time timestamp&lt;/dt&gt;
&lt;p&gt;These routines return the data received from the clock and the on-time timestamp. The &lt;tt&gt;refclock_gtraw&lt;/tt&gt; routine returns a batch of one or more characters returned by the Unix terminal routines in raw mode. The &lt;tt&gt;refclock_gtlin&lt;/tt&gt; routine removes the parity bit and control characters and returns all the characters up to and including the line terminator. Either routine returns the number of characters delivered.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_open&lt;/tt&gt; - open a serial port for reference clock&lt;/dt&gt;
&lt;p&gt;This routine opens a serial port for I/O and sets default options. It returns the file descriptor if success and zero if failure.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_ioctl&lt;/tt&gt; - set serial port control functions&lt;/dt&gt;
&lt;p&gt;This routine attempts to hide the internal, system-specific details of serial ports. It can handle POSIX (&lt;tt&gt;termios&lt;/tt&gt;), SYSV (&lt;tt&gt;termio&lt;/tt&gt;) and BSD (&lt;tt&gt;sgtty&lt;/tt&gt;) interfaces with varying degrees of success. The routine returns one if success and zero if failure.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_ppsapi&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This routine initializes the Pulse-per-Second interface (see below).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_pps&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This routine is called once per second to read the latest PPS offset and save it in the circular buffer (see below).&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;pulse-per-second-interface&#34;&gt;Pulse-per-Second Interface&lt;/h4&gt;
&lt;p&gt;When the Pulse-per-Second Application Interface (RFC 2783) is present, a compact PPS interface is available to all drivers. See the &lt;a href=&#34;/archives/4.2.8-series/prefer&#34;&gt;Mitigation Rules and the Prefer Peer&lt;/a&gt; page for further information. To use this interface, include the &lt;tt&gt;timeppps.h&lt;/tt&gt; and &lt;tt&gt;refclock_atom.h&lt;/tt&gt; header files and define the &lt;tt&gt;refclock_atom&lt;/tt&gt; structure in the driver private storage. The &lt;tt&gt;timepps.h&lt;/tt&gt; file is specific to each operating system and may not be available for some systems.&lt;/p&gt;
&lt;p&gt;To use the interface, call &lt;tt&gt;refclock_ppsapi&lt;/tt&gt; from the startup routine passing the device file descriptor and &lt;tt&gt;refclock_atom&lt;/tt&gt; structure pointer. Then, call &lt;tt&gt;refclock_pps&lt;/tt&gt; from the timer routine passing the association pointer and &lt;tt&gt;refclock_atom&lt;/tt&gt; structure pointer. See the &lt;tt&gt;refclock_atom.c&lt;/tt&gt; file for examples and calling sequences. If the PPS signal is valid, the offset sample will be save in the circular buffer and a bit set in the association flags word indicating the sample is valid and the driver an be selected as a PPS peer. If this bit is set when the poll routine is called, the driver calls the &lt;tt&gt;refclock_receive&lt;/tt&gt; routine to process the samples in the circular buffer and update the system clock.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/pogo1a.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Kernel Model for Precision Timekeeping</title>
      <link>/archives/4.2.8-series/kern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/kern/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice61.gif&#34; alt=&#34;gif&#34;&gt; &lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alice finds the kernel a house of cards.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:10 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The technical report &lt;sup&gt;&lt;a href=&#34;#myfootnote2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, which is a revision and update of an earlier report &lt;sup&gt;&lt;a href=&#34;#myfootnote3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, describes an engineering model for a precision clock discipline function for a generic operating system. The model is the same hybrid phase/frequecy-lock feedback loop used by &lt;tt&gt;ntpd&lt;/tt&gt;, but implemented in the kernel. The code described in &lt;sup&gt;&lt;a href=&#34;#myfootnote2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; is included in Solaris and Digital/Compaq/HP Tru64. It provides two system calls &lt;tt&gt;ntp_gettime()&lt;/tt&gt; and &lt;tt&gt;ntp_adjtime()&lt;/tt&gt; and can discipline the system clock with microsecond resolution. However, newer hardware and kernels with the same system calls can discipline the clock with nanosecond resolution. The new code described in &lt;sup&gt;&lt;a href=&#34;#myfootnote1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; is in FreeBSD, Linux and Tru64. The software and documentation, including a simulator used to verify correct behavior, but not involving licensed code, is available in the &lt;a href=&#34;https://www.eecis.udel.edu/~ntp/ntp_spool/software/nanokernel.tar.gz&#34;&gt;nanokernel.tar.gz&lt;/a&gt; distribution.&lt;/p&gt;
&lt;p&gt;Ordinarily, the kernel clock discipline function is used with the NTP daemon, but could be used for other purposes. The &lt;a href=&#34;/archives/4.2.8-series/ntptime&#34;&gt;&lt;tt&gt;ntptime&lt;/tt&gt;&lt;/a&gt; utility program can be used to control it manually.&lt;/p&gt;
&lt;p&gt;The kernel model also provides support for an external precision timing source, such as described in the &lt;a href=&#34;/archives/4.2.8-series/pps&#34;&gt;Pulse-per-second (PPS) Signal Interfacing&lt;/a&gt; page. The new system calls are used by the &lt;a href=&#34;/archives/4.2.8-series/kernpps&#34;&gt;PPSAPI interface&lt;/a&gt; and in turn by the &lt;a href=&#34;/archives/drivers/driver22&#34;&gt;PPS Clock Discipline&lt;/a&gt; driver (type 22) to provide synchronization limited in principle only by the accuracy and stability of the external timing source. Typical results with the PPS signal from a GPS receiver and a modern computer are in the 3 μs range.&lt;/p&gt;
&lt;h4 id=&#34;footnotes&#34;&gt;Footnotes&lt;/h4&gt;
&lt;p&gt;&lt;a name=&#34;myfootnote1&#34;&gt;1&lt;/a&gt; Mills, D.L., and P.-H. Kamp. The nanokernel. &lt;em&gt;Proc. Precision Time and Time Interval (PTTI) Applications and Planning Meeting&lt;/em&gt; (Reston VA, November 2000). Paper: &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/papers/nano/nano2.ps&#34;&gt;PostScript&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/papers/nano/nano2.pdf&#34;&gt;PDF&lt;/a&gt;, Slides: &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/brief/nano/nano.ps&#34;&gt;PostScript&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/brief/nano/nano.pdf&#34;&gt;PDF&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/brief/nano/nano.ppt&#34;&gt;PowerPoint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;myfootnote2&#34;&gt;2&lt;/a&gt;  Mills, D.L. Unix kernel modifications for precision time synchronization. Electrical Engineering Department Report 94-10-1, University of Delaware, October 1994, 24 pp. Abstract: &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/reports/kern/kerna.ps&#34;&gt;PostScript&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/reports/kern/kerna.pdf&#34;&gt;PDF&lt;/a&gt;, Body: &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/reports/kern/kernb.ps&#34;&gt;PostScript&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/reports/kern/kernb.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;myfootnote3&#34;&gt;3&lt;/a&gt;  Mills, D.L. A kernel model for precision timekeeping. Network Working Group Report RFC-1589, University of Delaware, March 1994. 31 pp. &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/rfc/rfc1589.txt&#34;&gt;ASCII&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Leap Second Processing</title>
      <link>/archives/4.2.8-series/leap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/leap/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 10-Mar-2014 05:11 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;About every eighteen months the International Earth Rotation Service (IERS) issues a bulletin announcing the insertion of a leap second in the Universal Coordinated Time (UTC) timescale. Ordinarily, this happens at the end of the last day of June or December; but, in principle, it could happen at the end of any month. While these bulletins are available on the Internet at &lt;a href=&#34;http://www.iers.org&#34;&gt;www.iers.org&lt;/a&gt;, advance notice of leap seconds is also available in signals broadcast from national time and frequency stations, in GPS signals and in telephone modem services. Many, but not all, reference clocks recognize these signals and many, but not all, drivers for them can decode the signals and set the leap bits in the timecode accordingly. This means that many, but not all, primary servers can pass on these bits in the NTP packet heard to dependent secondary servers and clients. Secondary servers can pass these bits to their dependents and so on throughout the NTP subnet.&lt;/p&gt;
&lt;p&gt;A leap second is inserted following second 59 of the last minute of the day and becomes second 60 of that day. A leap second is deleted by omitting second 59 of the last minute of the day, although this has never happened and is highly unlikely to happen in future. So far as is known, there are no provisions in the Unix or Windows libraries to account for this occasion other than to affect the conversion of an NTP datestamp or timestamp to conventional civil time.&lt;/p&gt;
&lt;p&gt;When an update is received from a reference clock or downstratum server, the leap bits are inspected for all survivors of the cluster algorithm. If the number of survivors showing a leap bit is greater than half the total number of survivors, a pending leap condition exists until the end of the current month.&lt;/p&gt;
&lt;p&gt;When no means are available to determine the leap bits from a reference clock or downstratum server, a leapseconds file can be downloaded from time.nist.gov and installed using the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;leapfile&lt;/a&gt; command. The file includes a list of historic leap seconds and the NTP time of insertion. It is parsed by the &lt;tt&gt;ntpd&lt;/tt&gt; daemon at startup and the latest leap time saved for future reference. Each time the clock is set, the current time is compared with the last leap time. If the current time is later than the last leap time, nothing further is done. If earlier, the leap timer is initialized with the time in seconds until the leap time and counts down from there. When the leap timer is less than one month, a pending leap condition exists until the end of the current month. If the leapseconds file is present, the leap bits for reference clocks and downstratum servers are ignored.&lt;/p&gt;
&lt;p&gt;If the precision time kernel support is available and enabled, at the beginning of the day of the leap event, the leap bits are set by the Unix &lt;tt&gt;ntp_adjtime()&lt;/tt&gt; system call to arm the kernel for the leap at the end of the day. The kernel automatically inserts one second exactly at the time of the leap, after which the leap bits are turned off. If the kernel support is not availed or disabled, the leap is implemented as a crude hack by setting the clock back one second using the Unix &lt;tt&gt;settimeofday()&lt;/tt&gt; system call, which effectively repeats the last second. Note however that in any case setting the time backwards by one second does not actually set the system clock backwards, but effectively stalls the clock for one second. These points are expanded in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/leap.html&#34;&gt;The NTP Timescale and Leap Seconds&lt;/a&gt;. If the leap timer is less than one day, the leap bits are set for dependent servers and clients.&lt;/p&gt;
&lt;p&gt;As an additional feature when the NIST leap seconds file is installed, it is possible to determine the number of leap seconds inserted in UTC since UTC began on 1 January 1972. This represents the offset between International Atomic Time (TAI) and UTC. If the precision time kernel modifications are available and enabled, the TAI offset is available to application programs using the &lt;tt&gt;antipasti()&lt;/tt&gt; system call. If the Autokey public-key cryptography feature is installed, the TAI offset is automatically propagated along with other cryptographic media to dependent servers and clients.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Making PARSE Clocks</title>
      <link>/archives/4.2.8-series/parsenew/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/parsenew/</guid>
      <description>
        
        
        &lt;p&gt;Here is an attempt to sketch out what you need to do in order to add another clock to the parse driver: Currently the implementation is being cleaned up - so not all information in here is completely correct. Refer to the included code where in doubt.&lt;/p&gt;
&lt;p&gt;Last update: 13-Oct-2010 00:33 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does the system you want the clock connect to have the include files termio.h or termios.h ? (You need that for the parse driver)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What to do:&lt;/p&gt;
&lt;p&gt;Make a conversion module (&lt;code&gt;libparse/clk_\*.c&lt;/code&gt;)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What is the time code format ?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Find year, month, day, hour, minute, second, status (synchronised or not), possibly time zone information (you need to give the offset to UTC). You will have to convert the data from a string into a struct clocktime:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;      struct clocktime                /* clock time broken up from time code */
          {
        long day;
        long month;
        long year;
        long hour;
        long minute;
        long second;
        long usecond;
        long utcoffset;       /* in seconds */
        time_t utcoffset;     /* true utc time instead of date/time */
        long flags;           /* current clock status */
          };
    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Conversion is usually simple and straight forward. For the flags following values can be OR&amp;rsquo;ed together:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;     PARSEB_ANNOUNCE           switch time zone warning (informational only)
         PARSEB_POWERUP            no synchronisation - clock confused (must set then)
         PARSEB_NOSYNC             timecode currently not confirmed (must set then)
                                   usually on reception error when there is still a
                                   chance the the generated time is still ok.

         PARSEB_DST                DST in effect (informational only)
         PARSEB_UTC                timecode contains UTC time (informational only)
         PARSEB_LEAPADD            LEAP addition warning (prior to leap happening - must set when imminent)
                       also used for time code that do not encode the
                       direction (as this is currently the default).
         PARSEB_LEAPDEL            LEAP deletion warning (prior to leap happening - must set when imminent)
         PARSEB_ALTERNATE          backup transmitter (informational only)
         PARSEB_POSITION           geographic position available (informational only)
         PARSEB_LEAPSECOND         actual leap second (this time code is the leap
                                   second - informational only)
    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are feature flags denoting items that are supported by the clock:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;     PARSEB_S_LEAP             supports LEAP - might set PARSEB_LEAP
         PARSEB_S_ANTENNA          supports ANTENNA - might set PARSEB_ALTERNATE
         PARSEB_S_PPS              supports PPS time stamping
         PARSEB_S_POSITION         supports position information (GPS)
       &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the utctime field is non zero this value will be take as time code value. This allows for conversion routines that already have the utc time value. The utctime field gives the seconds since Jan 1st 1970, 0:00:00. The useconds field gives the respective usec value. The fields for date and time (down to second resolution) will be ignored.&lt;/p&gt;
&lt;p&gt;Conversion is done in the &lt;code&gt;cvt_\*&lt;/code&gt; routine in &lt;code&gt;parse/clk_\*.c&lt;/code&gt; files, look in them for examples. The basic structure is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;     struct clockformat &amp;lt;yourclock&amp;gt;_format = {
           lots of fields for you to fill out (see below)
         };

         static cvt_&amp;lt;yourclock&amp;gt;()
           ...
         {
           if (&amp;lt;I do not recognize my time code&amp;gt;) {
             return CVT_NONE;
           } else {
             if (&amp;lt;conversion into clockformat is ok&amp;gt;) {
               &amp;lt;set all necessary flags&amp;gt;;
               return CVT_OK;
             } else {
               return CVT_FAIL|CVT_BADFMT;
             }
           }
    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The struct clockformat is the interface to the rest of the parse driver - it holds all information necessary for finding the clock message and doing the appropriate time stamping.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;struct clockformat
    {
      u_long (*input)();
      /* input routine - your routine - cvt_&amp;lt;yourclock&amp;gt; */
      u_long (*convert)();
      /* conversion routine - your routine - cvt_&amp;lt;yourclock&amp;gt; */
      /* routine for handling RS232 sync events (time stamps) - usually sync_simple */
      u_long (*syncpps)(); 
      /* PPS input routine - usually pps_one */
      void           *data;
      /* local parameters - any parameters/data/configuration info your conversion
         routine might need */
      char           *name;
      /* clock format name - Name of the time code */
      unsigned short  length;
      /* maximum length of data packet for your clock format */
      u_long   flags;
     /* information for the parser what to look for */
    };
    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above should have given you some hints on how to build a &lt;code&gt;clk_\*.c&lt;/code&gt; file with the time code conversion. See the examples and pick a clock closest to yours and tweak the code to match your clock.&lt;/p&gt;
&lt;p&gt;In order to make your &lt;code&gt;clk_\*.c&lt;/code&gt; file usable a reference to the clockformat structure must be put into &lt;code&gt;parse_conf.c&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;TTY setup and initialisation/configuration will be done in &lt;code&gt;ntpd/refclock_parse.c&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Find out the exact tty settings for your clock (baud rate, parity, stop bits, character size, &amp;hellip;) and note them in terms of &lt;code&gt;termio\*.h&lt;/code&gt; c_cflag macros.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;ntpd/refclock_parse.c&lt;/code&gt; fill out a new the struct clockinfo element (that allocates a new &amp;ldquo;IP&amp;rdquo; address - see comments) (see all the other clocks for example).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;   struct clockinfo
         {
          u_long  cl_flags;             /* operation flags (io modes) */
         PARSE_F_PPSPPS       use loopfilter PPS code (CIOGETEV)
         PARSE_F_PPSONSECOND  PPS pulses are on second
         usually flags stay 0 as they are used only for special setups

        void  (*cl_poll)();           /* active poll routine */
             The routine to call when the clock needs data sent to it in order to
             get a time code from the clock (e.g. Trimble clock)

        int   (*cl_init)();           /* active poll init routine */
             The routine to call for very special initializations.

        void  (*cl_event)();          /* special event handling (e.g. reset clock) */
             What to do, when an event happens - used to re-initialize clocks on timeout.

        void  (*cl_end)();            /* active poll end routine */
             The routine to call to undo any special initialisation (free memory/timers)

        void   *cl_data;              /* local data area for &amp;quot;poll&amp;quot; mechanism */
             local data for polling routines

        u_fp    cl_rootdelay;         /* rootdelay */
             NTP rootdelay estimate (usually 0)

             u_long  cl_basedelay;         /* current offset - unsigned l_fp
                                                  fractional part (fraction) by
                                                  which the RS232 time code is
                                                  delayed from the actual time. */

        u_long  cl_ppsdelay;          /* current PPS offset - unsigned l_fp fractional
             time (fraction) by which the PPS time stamp is delayed (usually 0)
       part */

        char   *cl_id;                /* ID code (usually &amp;quot;DCF&amp;quot;) */
             Refclock id - (max 4 chars)

        char   *cl_description;       /* device name */
             Name of this device.

        char   *cl_format;            /* fixed format */
             If the data format cann not ne detected automatically this is the name
         as in clk_*.c clockformat.

        u_char  cl_type;              /* clock type (ntp control) */
             Type if clock as in clock status word (ntp control messages) - usually 0

        u_long  cl_maxunsync;         /* time to trust oscillator after losing synch
      */
             seconds a clock can be trusted after losing synchronisation.

        u_long  cl_speed;             /* terminal input &amp;amp; output baudrate */
        u_long  cl_cflag;             /* terminal io flags */
        u_long  cl_iflag;             /* terminal io flags */
        u_long  cl_oflag;             /* terminal io flags */
        u_long  cl_lflag;             /* terminal io flags */
             termio*.h tty modes.

        u_long  cl_samples;           /* samples for median filter */
        u_long  cl_keep;              /* samples for median filter to keep */
             median filter parameters - smoothing and rejection of bad samples
      } clockinfo[] = {
      ...,&amp;lt;other clocks&amp;gt;,...
      { &amp;lt; your parameters&amp;gt; },
      };

    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, this is very sketchy, I know. But I hope it helps a little bit. The best way is to look which clock comes closest to your and tweak that code.&lt;/p&gt;
&lt;p&gt;Two sorts of clocks are used with parse. Clocks that automatically send their time code (once a second) do not need entries in the poll routines because they send the data all the time. The second sort are the clocks that need a command sent to them in order to reply with a time code (like the Trimble clock).&lt;/p&gt;
&lt;p&gt;For questions: &lt;a href=&#34;mailto:%20kardel@acm.org&#34;&gt;kardel@acm.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please include an exact description on how your clock works. (initialisation, TTY modes, strings to be sent to it, responses received from the clock).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Mitigation Rules and the prefer Keyword</title>
      <link>/archives/4.2.8-series/prefer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/prefer/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice11.gif&#34; alt=&#34;gif&#34;&gt; &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Listen carefully to what I say; it is very complicated.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:18 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/prefer/#introduction-and-overview&#34;&gt;Introduction and Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/prefer/#combine-algorithm&#34;&gt;Combine Algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/prefer/#anti-clockhop-algorithm&#34;&gt;Anti-Clockhop Algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/prefer/#peer-classification&#34;&gt;Peer Classification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/prefer/#the-ttprefertt-peer&#34;&gt;The &lt;tt&gt;prefer&lt;/tt&gt; Peer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/prefer/#mitigation-rules&#34;&gt;Mitigation Rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/prefer/#the-ttminsanett-option&#34;&gt;The &lt;tt&gt;minsane&lt;/tt&gt; Option&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction-and-overview&#34;&gt;Introduction and Overview&lt;/h4&gt;
&lt;p&gt;This page summarizes the criteria for choosing from among the survivors of the clock cluster algorithm a set of contributors to the clock discipline algorithm. The criteria are very meticulous, since they have to handle many different scenarios that may be optimized for special circumstances, including some scenarios designed to support planetary and deep space missions. For additional information on statistical principles and performance metrics, see the &lt;a href=&#34;/archives/4.2.8-series/stats&#34;&gt;Performance Metrics&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Recall the suite of NTP data acquisition and grooming algorithms. These algorithms proceed in five phases. Phase one discovers the available &lt;em&gt;sources&lt;/em&gt; and mobilizes an association for each source found. These sources can result from explicit configuration, broadcast discovery or the pool and manycast autonomous configuration schemes. See the &lt;a href=&#34;/archives/4.2.8-series/discover&#34;&gt;Automatic Server Discovery Schemes&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;p&gt;Phase two selects the &lt;em&gt;candidates&lt;/em&gt; from among the sources by excluding those sources showing one or more of the errors summarized on the &lt;a href=&#34;/archives/4.2.8-series/select&#34;&gt;Clock Select Algorithm&lt;/a&gt; page and to determine the &lt;em&gt;truechimers&lt;/em&gt; from among the candidates, leaving behind the &lt;em&gt;falsetickers&lt;/em&gt;. A server or peer configured with the &lt;tt&gt;true&lt;/tt&gt; option is declared a truechimer independent of this algorithm. Phase four uses the algorithm described on the &lt;a href=&#34;/archives/4.2.8-series/cluster&#34;&gt;Clock Cluster Algorithm&lt;/a&gt; page to prune the statistical outliers from the truechimers, leaving the &lt;em&gt;survivor list&lt;/em&gt; as result.&lt;/p&gt;
&lt;p&gt;Phase five uses a set of algorithms and mitigation rules to combined the survivor statistics and discipline the system clock. The mitigation rules select from among the survivors a &lt;em&gt;system peer&lt;/em&gt; from which a set of system statistics can be inherited and passed along to dependent clients, if any. The mitigation algorithms and rules are the main topic of this page. The clock offset developed from these algorithms can discipline the system clock, either using the &lt;a href=&#34;/archives/4.2.8-series/discipline&#34;&gt;clock discipline algorithm&lt;/a&gt; or using the kernel to discipline the system clock directly, as described on the &lt;a href=&#34;/archives/4.2.8-series/kern&#34;&gt;Kernel Model for Precision Timekeeping&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;combine-algorithm&#34;&gt;Combine Algorithm&lt;/h4&gt;
&lt;p&gt;The clock combine algorithm uses the survivor list to produce a weighted average of both offset and jitter. Absent other considerations discussed later, the &lt;em&gt;combined offset&lt;/em&gt; is used to discipline the system clock, while the &lt;em&gt;combined jitter&lt;/em&gt; is augmented with other components to produce the system jitter statistic inherited by dependent clients, if any.&lt;/p&gt;
&lt;p&gt;The clock combine algorithm uses a weight factor for each survivor equal to the reciprocal of the root distance. This is normalized so that the sum of the reciprocals is equal to unity. This design favors the survivors at the smallest root distance and thus the smallest maximum error.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;anti-clockhop-algorithm&#34;&gt;Anti-Clockhop Algorithm&lt;/h4&gt;
&lt;p&gt;The anti-clockhop algorithm is intended for cases where multiple servers are available on a fast LAN with modern computers. Typical offset differences between servers in such cases are less than 0.5 ms. However, changes between servers can result in unnecessary system jitter. The object of the anti-clockhop algorithm is to avoid changing the current system peer, unless it becomes stale or has significant offset relative to other candidates on the survivor list.&lt;/p&gt;
&lt;p&gt;For the purposes of the following description, call the last selected system peer the &lt;em&gt;old peer&lt;/em&gt;, and the currently selected source the &lt;em&gt;candidate peer&lt;/em&gt;. At each update, the candidate peer is selected as the first peer on the survivor list sorted by increasing root distance. The algorithm initializes the -&lt;em&gt;clockhop threshold&lt;/em&gt; with the value of &lt;tt&gt;mindist&lt;/tt&gt;, by default 1 ms.&lt;/p&gt;
&lt;p&gt;The anti-clockhop algorithm is called immediately after the combine algorithm. If there was no old peer or the old and candidate peers are the same, the candidate peer becomes the system peer. If the old peer and the candidate peer are different, the algorithm measures the difference between the offset of the old peer and the candidate peer. If the difference exceeds the clockhop threshold, the candidate peer becomes the system peer and the clockhop threshold is restored to its original value. If the difference is less than the clockhop threshold, the old peer continues as the system peer. However, at each subsequent update, the algorithm reduces the clockhop threshold by half. Should operation continue in this way, the candidate peer will eventually become the system peer.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;peer-classification&#34;&gt;Peer Classification&lt;/h4&gt;
&lt;p&gt;The behavior of the various algorithms and mitigation rules involved depends on how the various synchronization sources are classified. This depends on whether the source is local or remote and if local, the type of source. The following classes are defined:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A selectable association configured for a remote server or peer is classified as a &lt;em&gt;client association&lt;/em&gt;. All other selectable associations are classified as &lt;em&gt;device driver associations&lt;/em&gt; of one kind or another. In general, one or more sources of either type will be available in each installation.&lt;/li&gt;
&lt;li&gt;If all sources have been lost and one or more hosts on a common DMZ network have specified the orphan stratum in the &lt;tt&gt;orphan&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command, each of them can become an &lt;em&gt;orphan parent&lt;/em&gt;. Dependent orphan children on the same DMZ network will see the orphan parents as if synchronized to a server at the orphan stratum. Note that, as described on the &lt;a href=&#34;/archives/4.2.8-series/orphan&#34;&gt;Orphan Mode&lt;/a&gt; page, all orphan children will select the same orphan parent for synchronization.&lt;/li&gt;
&lt;li&gt;When a device driver has been configured for pulse-per-second (PPS) signals and PPS signals are being received, it is designated the &lt;em&gt;PPS driver.&lt;/em&gt; Note that the Pulse-per-Second driver (type 22) is often used as a PPS driver, but any driver can be configure as a PPS driver if the hardware facilities are available. The PPS driver provides precision clock discipline only within ±0.4 s, so it is always associated with another source or sources that provide the seconds numbering function.&lt;/li&gt;
&lt;li&gt;When the Undisciplined Local Clock driver (type 1) is configured, it is designated the &lt;em&gt;local driver&lt;/em&gt;. It can be used either as a backup source (stratum greater than zero) should all sources fail, or as the primary source (stratum zero) whether or not other sources are available if the &lt;tt&gt;prefer&lt;/tt&gt; option is present. The local driver can be used when the kernel time is disciplined by some other means of synchronization, such as the NIST &lt;tt&gt;lock clock&lt;/tt&gt; scheme, or another synchronization protocol such as the IEEE 1588 Precision Time Protocol (PTP) or Digital Time Synchronization Service (DTSS).&lt;/li&gt;
&lt;li&gt;When the Automated Computer Time Service driver (type 18) is configured, it is designated the &lt;em&gt;modem driver&lt;/em&gt;. It is used either as a backup source, should all other sources fail, or as the primary source if the &lt;tt&gt;prefer&lt;/tt&gt; option is present.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;the-ttprefertt-peer&#34;&gt;The &lt;tt&gt;prefer&lt;/tt&gt; Peer&lt;/h4&gt;
&lt;p&gt;The mitigation rules are designed to provide an intelligent selection of the system peer from among the selectable sources of different types. When used with the &lt;tt&gt;server&lt;/tt&gt; or &lt;tt&gt;peer&lt;/tt&gt; commands, the &lt;tt&gt;prefer&lt;/tt&gt; option designates one or more sources as preferred over all others. While the rules do not forbid it, it is usually not useful to designate more than one source as preferred; however, if more than one source is so designated, they are used in the order specified in the configuration file. If the first one becomes un selectable, the second one is considered and so forth. This order of priority is also applicable to multiple PPS drivers, multiple modem drivers and even multiple local drivers, although that would not normally be useful.&lt;/p&gt;
&lt;p&gt;The cluster algorithm works on the set of truechimers produced by the select algorithm. At each round the algorithm casts off the survivor least likely to influence the choice of system peer. If selectable, the prefer peer is never discarded; on the contrary, its potential removal becomes a termination condition. However, the prefer peer can still be discarded by the select algorithm as a falseticker; otherwise, the prefer peer becomes the system peer.&lt;/p&gt;
&lt;p&gt;Ordinarily, the combine algorithm computes a weighted average of the survivor offset and jitter to produce the final values. However, if a prefer peer is among the survivors, the combine algorithm is not used. Instead, the offset and jitter of the prefer peer are used exclusively as the final values. In the common case involving a radio clock and a flock of remote backup servers, and with the radio clock designated a prefer peer, the radio clock disciplines the system clock as long as the radio itself remains operational. However, if the radio fails or becomes a falseticker, the combined backup sources continue to discipline the system clock.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;mitigation-rules&#34;&gt;Mitigation Rules&lt;/h4&gt;
&lt;p&gt;As the select algorithm scans the associations for selectable candidates, the modem driver and local driver are segregated for later, but only if not designated a prefer peer. If so designated, the driver is included among the candidate population. In addition, if orphan parents are found, the parent with the lowest metric is segregated for later; the others are discarded. For this purpose the metric is defined as the four-octet IPv4 address or the first four octets of the hashed IPv6 address. The resulting candidates, including any prefer peers found, are processed by the select algorithm to produce a possibly empty set of truechimers.&lt;/p&gt;
&lt;p&gt;As previously noted, the cluster algorithm casts out outliers, leaving the survivor list for later processing. The survivor list is then sorted by increasing root distance and the first entry temporarily designated the system peer. At this point the following contributors to the system clock discipline may be available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(potential) system peer, if there are survivors;&lt;/li&gt;
&lt;li&gt;orphan parent, if present;&lt;/li&gt;
&lt;li&gt;local driver, if present;&lt;/li&gt;
&lt;li&gt;modem driver, if present;&lt;/li&gt;
&lt;li&gt;prefer peer, if present;&lt;/li&gt;
&lt;li&gt;PPS driver, if present.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The mitigation algorithm proceeds in three steps in turn.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If there are no survivors, the modem driver becomes the only survivor if there is one. If not, the local driver becomes the only survivor if there is one. If not, the orphan parent becomes the only survivor if there is one. If the number of survivors at this point is less than the &lt;tt&gt;minsane&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command, the algorithm is terminated and the system variables remain unchanged. Note that &lt;tt&gt;minsane&lt;/tt&gt; is by default 1, but can be set at any value including 0.&lt;/li&gt;
&lt;li&gt;If the prefer peer is among the survivors, it becomes the system peer and its offset and jitter are inherited by the corresponding system variables. Otherwise, the combine algorithm computes these variables from the survivor population.&lt;/li&gt;
&lt;li&gt;If there is a PPS driver and the system clock offset at this point is less than 0.4 s, and if there is a prefer peer among the survivors or if the PPS peer is designated as a prefer peer, the PPS driver becomes the system peer and its offset and jitter are inherited by the system variables, thus overriding any variables already computed. Note that a PPS driver is present only if PPS signals are actually being received and enabled by the associated driver.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If none of the above is the case, the data are disregarded and the system variables remain as they are.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;the-ttminsanett-option&#34;&gt;The &lt;tt&gt;minsane&lt;/tt&gt; Option&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;minsane&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command, the &lt;tt&gt;prefer&lt;/tt&gt; option of the &lt;tt&gt;server&lt;/tt&gt; and &lt;tt&gt;peer&lt;/tt&gt; commands and the &lt;tt&gt;flag&lt;/tt&gt; option of the &lt;tt&gt;fudge&lt;/tt&gt; command for a selected driver can be used with the mitigation rules to provide many useful configurations. The &lt;tt&gt;minsane&lt;/tt&gt; option specifies the minimum number of survivors required to synchronize the system clock. The &lt;tt&gt;prefer&lt;/tt&gt; option operates as described in previous sections. The &lt;tt&gt;flag&lt;/tt&gt; option enables the PPS signal for the selected driver.&lt;/p&gt;
&lt;p&gt;A common scenario is a GPS driver with a serial timecode and PPS signal. The PPS signal is disabled until the system clock has been set by some means, not necessarily the GPS driver. If the serial timecode is within 0.4 s of the PPS signal, the GPS driver is designated the PPS driver and the PPS signal disciplines the system clock. If the serial timecode becomes unreliable, or if the PPS signal is disconnected, the GPS driver stops updating the system clock and so eventually becomes unreachable and is replaced by other sources.&lt;/p&gt;
&lt;p&gt;Whether or not the GPS driver disables the PPS signal when the timecode becomes unreliable is at the discretion of the driver. Ordinarily, the PPS signal is disabled in this case; however, when the GPS receiver has a precision holdover oscillator, the driver may elect to continue PPS discipline . In this case, &lt;tt&gt;minsane&lt;/tt&gt; can be set to zero so the PPS signal continues to discipline the system clock.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Monitoring Options</title>
      <link>/archives/4.2.8-series/monopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/monopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo8.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;&lt;/a&gt; from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/p&gt;
&lt;p&gt;Pig was hired to watch the logs.&lt;/p&gt;
&lt;p&gt;Last update: 7-Dec-2017 10:17 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/monopt/#naming-conventions&#34;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/monopt/#monitoring-commands-and-options&#34;&gt;Monitoring Commands and Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/monopt/#file-set-types&#34;&gt;File Set Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;naming-conventions&#34;&gt;Naming Conventions&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; includes a comprehensive monitoring facility which collects statistical data of various types and writes the data to files associated with each type at defined events or intervals. The files associated with a particular type are collectively called the generation file set for that type. The files in the file set are the members of that set.&lt;/p&gt;
&lt;p&gt;File sets have names specific to the type and generation epoch. The names are constructed from three concatenated elements &lt;em&gt;&lt;tt&gt;prefix&lt;/tt&gt;&lt;/em&gt;, &lt;em&gt;&lt;tt&gt;filename&lt;/tt&gt;&lt;/em&gt; and &lt;em&gt;&lt;tt&gt;suffix&lt;/tt&gt;&lt;/em&gt;:&lt;/p&gt;
&lt;dt&gt;_&lt;tt&gt;prefix&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;The directory path specified in the &lt;tt&gt;statsdir&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;_&lt;tt&gt;name&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;The name specified by the &lt;tt&gt;file&lt;/tt&gt; option of the &lt;tt&gt;filegen&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;_&lt;tt&gt;suffix&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;A string of elements beginning with . (dot) followed by a number of elements depending on the file set type.&lt;/p&gt;
&lt;p&gt;Statistics files can be managed using scripts, examples of which are in the &lt;tt&gt;./scripts&lt;/tt&gt; directory. Using these or similar scripts and Unix &lt;tt&gt;cron&lt;/tt&gt; jobs, the files can be automatically summarized and archived for retrospective analysis.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;monitoring-commands-and-options&#34;&gt;Monitoring Commands and Options&lt;/h4&gt;
&lt;p&gt;Unless noted otherwise, further information about these commands is on the &lt;a href=&#34;/archives/4.2.8-series/decode&#34;&gt;Event Messages and Status Codes&lt;/a&gt; page.&lt;/p&gt;
&lt;dt id=&#34;filegen&#34;&gt;&lt;tt&gt;filegen _name_ [file _filename_] [type _type_] [link | nolink] [enable | disable]&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;_&lt;tt&gt;name&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;Specifies the file set type from the list in the next section.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;file _filename_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the filename prefix. The default is the file set type, such as &amp;ldquo;loopstats&amp;rdquo;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;type _typename_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the file set interval. The following intervals are supported with default &lt;tt&gt;day&lt;/tt&gt;:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;none&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The file set is actually a single plain file.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pid&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is created for every incarnation of &lt;tt&gt;ntpd&lt;/tt&gt;. The file name suffix is the string .&lt;tt&gt;n&lt;/tt&gt;, where &lt;tt&gt;n&lt;/tt&gt; is the process ID of the &lt;tt&gt;ntpd&lt;/tt&gt; server process.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;day&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is created per day. A day is defined as the period between 00:00 and 23:59 UTC. The file name suffix is the string .&lt;tt&gt;yyyymmdd&lt;/tt&gt;, where &lt;tt&gt;yyyy&lt;/tt&gt; is the year, &lt;tt&gt;mm&lt;/tt&gt; the month of the year and &lt;tt&gt;dd&lt;/tt&gt; the day of the month. Thus, member created on 10 December 1992 would have suffix &lt;tt&gt;.19921210&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;week&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is created per week. The week is defined as the day of year modulo 7. The file name suffix is the string .&lt;tt&gt;yyyyWww&lt;/tt&gt;, where &lt;tt&gt;yyyy&lt;/tt&gt; is the year, &lt;tt&gt;W&lt;/tt&gt; stands for itself and &lt;tt&gt;ww&lt;/tt&gt; the week number starting from 0. For example, The member created on 10 January 1992 would have suffix &lt;tt&gt;.1992W1&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;month&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is created per month. The file name suffix is the string .&lt;tt&gt;yyyymm&lt;/tt&gt;, where &lt;tt&gt;yyyy&lt;/tt&gt; is the year and &lt;tt&gt;mm&lt;/tt&gt; the month of the year starting from 1. For example, The member created on 10 January 1992 would have suffix &lt;tt&gt;.199201&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;year&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is generated per year. The file name suffix is the string .&lt;tt&gt;yyyy&lt;/tt&gt;, where &lt;tt&gt;yyyy&lt;/tt&gt; is the year. For example, The member created on 1 January 1992 would have suffix &lt;tt&gt;.1992&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;age&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is generated every 24 hours of &lt;tt&gt;ntpd&lt;/tt&gt; operation. The filename suffix is the string &lt;tt&gt;.adddddddd&lt;/tt&gt;, where &lt;tt&gt;a&lt;/tt&gt; stands for itself and &lt;tt&gt;dddddddd&lt;/tt&gt; is the &lt;tt&gt;ntpd&lt;/tt&gt; running time in seconds at the start of the corresponding 24-hour period.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;link | nolink&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;It is convenient to be able to access the current file set members by file name, but without the suffix. This feature is enabled by &lt;tt&gt;link&lt;/tt&gt; and disabled by &lt;tt&gt;nolink&lt;/tt&gt;. If enabled, which is the default, a hard link from the current file set member to a file without suffix is created. When there is already a file with this name and the number of links to this file is one, it is renamed by appending a dot, the letter &lt;tt&gt;C&lt;/tt&gt;, and the pid of the &lt;tt&gt;ntpd&lt;/tt&gt; server process. When the number of links is greater than one, the file is unlinked. This allows the current file to be accessed by a constant name.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;enable | disable&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable or disable the recording function, with default &lt;tt&gt;enable&lt;/tt&gt;. These options are intended for remote configuration commands.&lt;/p&gt;
&lt;dt id=&#34;statistics&#34;&gt;&lt;tt&gt;statistics _name_...&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enables writing of statistics records. Currently, eight kinds of statistics are supported: _name_s specify the file set type(s) from the list in the next section.&lt;/p&gt;
&lt;dt id=&#34;statsdir&#34;&gt;&lt;tt&gt;statsdir _directory_path_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the directory path prefix for statistics file names.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;file-set-types&#34;&gt;File Set Types&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;clockstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record reference clock statistics. Each update received from a reference clock driver appends one line to the &lt;tt&gt;clockstats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;49213 525.624 127.127.4.1 93 226 00:08:29.606 D&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;49213&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;525.624&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;127.127.4.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;reference clock address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;log message&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;tt&gt;&lt;em&gt;message&lt;/em&gt;&lt;/tt&gt; field includes the last timecode received in decoded ASCII format, where meaningful. In some cases a good deal of additional information is displayed. See information specific to each reference clock for further details.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;cryptostats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record significant events in the Autokey protocol. This option requires the OpenSSL cryptographic software library. Each event appends one line to the &lt;tt&gt;cryptostats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;49213 525.624 128.4.1.1 &lt;em&gt;message&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;49213&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;525.624&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;128.4.1.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;source address (&lt;code&gt;0.0.0.0&lt;/code&gt; for system)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;log message&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;tt&gt;&lt;em&gt;message&lt;/em&gt;&lt;/tt&gt; field includes the message type and certain ancillary information. See the &lt;a href=&#34;/archives/4.2.8-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;loopstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record clock discipline loop statistics. Each system clock update appends one line to the &lt;tt&gt;loopstats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;50935 75440.031 0.000006019 13.778 0.000351733 0.013380 6&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;50935&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;75440.031&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000006019&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;clock offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;13.778&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PPM&lt;/td&gt;
&lt;td&gt;frequency offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000351733&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;RMS jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.013380&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PPM&lt;/td&gt;
&lt;td&gt;RMS frequency jitter (aka wander)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;log&lt;sub&gt;2&lt;/sub&gt; s&lt;/td&gt;
&lt;td&gt;clock discipline loop time constant&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt&gt;&lt;tt&gt;peerstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record peer statistics. Each NTP packet or reference clock update received appends one line to the &lt;tt&gt;peerstats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;48773 10847.650 127.127.4.1 9714 -0.001605376 0.000000000 0.001424877 0.000958674&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;48773&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;10847.650&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;127.127.4.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;source address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;9714&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;hex&lt;/td&gt;
&lt;td&gt;status word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-0.001605376&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;clock offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000000000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;roundtrip delay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.001424877&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;dispersion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000958674&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;RMS jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The status field is encoded in hex format as described in Appendix B of the NTP specification RFC 1305.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;protostats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record significant peer, system and protocol events. Each significant event appends one line to the &lt;tt&gt;protostats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;49213 525.624 128.4.1.1 963a 8a &lt;em&gt;message&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;49213&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;525.624&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;128.4.1.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;source address (&lt;code&gt;0.0.0.0&lt;/code&gt; for system)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;963a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;status word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;8a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;event message code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;event message&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The event message code and &lt;tt&gt;&lt;em&gt;message&lt;/em&gt;&lt;/tt&gt; field are described on the &lt;a href=&#34;/archives/4.2.8-series/decode&#34;&gt;Event Messages and Status Words&lt;/a&gt; page.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;rawstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record timestamp statistics. Each NTP packet received appends one line to the &lt;tt&gt;rawstats&lt;/tt&gt; file set. As of ntp-4.2.8p11, each NTP packet written appends one line to the &lt;tt&gt;rawstats&lt;/tt&gt; file set, as well. The format of this line is:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;56285 54575.160 128.4.1.1 192.168.1.5 3565350574.400229473 3565350574.442385200 3565350574.442436000 3565350575.154505763 0 4 4 1 8 -21 0.000000 0.000320 .PPS.&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;56285 54575.160 128.4.1.1 192.168.1.5 3565350574.400229473 3565350574.442385200 3565350574.442436000 3565350575.154505763 0 4 4 1 8 -21 0.000000 0.000320 .PPS. 4: 0000&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;56285&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;54575.160&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;128.4.1.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;source address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;192.168.1.5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;destination address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3565350574.400229473&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP s&lt;/td&gt;
&lt;td&gt;origin timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3565350574.442385200&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP s&lt;/td&gt;
&lt;td&gt;receive timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3565350574.442436000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP s&lt;/td&gt;
&lt;td&gt;transmit timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3565350575.154505763&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP s&lt;/td&gt;
&lt;td&gt;destination timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;0: OK &lt;br&gt; 1: insert pending&lt;br&gt; 2: delete pending&lt;br&gt; 3: not synced&lt;/td&gt;
&lt;td&gt;leap warning indicator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4 was current in 2020&lt;/td&gt;
&lt;td&gt;NTP version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3: client&lt;br&gt; 4: server&lt;br&gt; 5: broadcast&lt;/td&gt;
&lt;td&gt;mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1-15&lt;br&gt; 16: not synced&lt;/td&gt;
&lt;td&gt;stratum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;log&lt;sub&gt;2&lt;/sub&gt; seconds&lt;/td&gt;
&lt;td&gt;poll&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-21&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;log&lt;sub&gt;2&lt;/sub&gt; seconds&lt;/td&gt;
&lt;td&gt;precision&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;seconds&lt;/td&gt;
&lt;td&gt;total roundtrip delay to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000320&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;seconds&lt;/td&gt;
&lt;td&gt;total dispersion to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.PPS.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;REFID&lt;/td&gt;
&lt;td&gt;system peer, association ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;If there is data beyond the base packet:&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;4:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;Length, in bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Hex data&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt&gt;&lt;tt&gt;sysstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record system statistics. Each hour one line is appended to the &lt;tt&gt;sysstats&lt;/tt&gt; file set in the following format:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;50928 2132.543 3600 81965 0 9546 56 512 540 10 4 147 1&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;50928&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2132.543&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3600&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time since reset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;81965&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;packets received&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;packets for this host&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;9546&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;current versions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;56&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;old version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;512&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;access denied&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;540&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;bad length or format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;bad authentication&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;declined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;147&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;rate exceeded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;kiss-o&#39;-death packets sent&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt&gt;&lt;tt&gt;timingstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;(Only available when the daemon is compiled with process time debugging support (&amp;ndash;enable-debug-timing - costs performance). Record processing time statistics for various selected code paths.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;53876 36.920 10.0.3.5 1 0.000014592 input processing delay&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;53876&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;36.920&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;10.0.3.5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;server address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;event count&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000014592&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;total time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;code path description (see source)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP Bug Reporting Procedures</title>
      <link>/archives/4.2.8-series/bugs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/bugs/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/hornraba.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The rabbit toots to make sure you read this.&lt;/p&gt;
&lt;p&gt;Last update: 23-Aug-2014 05:32 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;security-bug-reporting-procedures&#34;&gt;Security Bug Reporting Procedures&lt;/h4&gt;
&lt;p&gt;If you find or suspect a security related program bug in this distribution, please send a report to &lt;a href=&#34;mailto:security@ntp.org&#34;&gt;security@ntp.org&lt;/a&gt;. Please do not contact developers directly.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;non-security-bug-reporting-procedures&#34;&gt;Non-Security Bug Reporting Procedures&lt;/h4&gt;
&lt;p&gt;If you find or suspect a non-security related program or documentation bug in this distribution, please send a report to the &lt;a href=&#34;http://bugs.ntp.org/&#34;&gt;NTP Public Service Project Bug Tracking System (Bugzilla)&lt;/a&gt;. Bugs reported this way are immediately forwarded to the developers. Please do not contact the developers directly.&lt;/p&gt;
&lt;p&gt;If you wish to send a report via electronic mail, please remember that your report will be held until one of our volunteers enters it in Bugzilla. The email address for these reports is &lt;a href=&#34;mailto:bugs@ntp.org&#34;&gt;bugs@ntp.org&lt;/a&gt;. You will need to register at &lt;a href=&#34;https://bugs.ntp.org/&#34;&gt;https://bugs.ntp.org/&lt;/a&gt; to participate directly in any e-mail discussion regarding your report. If you don&amp;rsquo;t register and we have questions for you we won&amp;rsquo;t be able to make progress on fixing your problem. Please directly register on and use our Bugzilla instance to report issues.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP Debugging Techniques</title>
      <link>/archives/4.2.8-series/debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/debug/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We make house calls and bring our own bugs.&lt;/p&gt;
&lt;p&gt;Last update: 16-Jul-2014 08:38 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/debug/#initial-startup&#34;&gt;Initial Startup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/debug/#verifying-correct-operation&#34;&gt;Verifying Correct Operation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/debug/#large-frequency-errors&#34;&gt;Large Frequency Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/debug/#access-controls&#34;&gt;Access Controls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/debug/#large-delay-variations&#34;&gt;Large Delay Variations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/debug/#cryptographic-authentication&#34;&gt;Cryptographic Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/debug/#debugging-checklist&#34;&gt;Debugging Checklist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;initial-startup&#34;&gt;Initial Startup&lt;/h4&gt;
&lt;p&gt;This page discusses &lt;tt&gt;ntpd&lt;/tt&gt; program monitoring and debugging techniques using the &lt;a href=&#34;/archives/4.2.8-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt; - standard NTP query program&lt;/a&gt;, either on the local server or from a remote machine. In special circumstances the &lt;a href=&#34;/archives/4.2.8-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt; - special NTP query program&lt;/a&gt;, can be useful, but its use is not covered here. The &lt;tt&gt;ntpq&lt;/tt&gt; program implements the management functions specified in the NTP specification &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/rfc/rfc1305/rfc1305c.ps&#34;&gt;RFC-1305, Appendix A&lt;/a&gt;. It is used to read and write the variables defined in the NTP Version 4 specification now navigating the standards process. In addition, the program can be used to send remote configuration commands to the server.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; daemon can operate in two modes, depending on the presence of the &lt;tt&gt;-d&lt;/tt&gt; command-line option. Without the option the daemon detaches from the controlling terminal and proceeds autonomously. With one or more &lt;tt&gt;-d&lt;/tt&gt; options the daemon does not detach and generates special trace output useful for debugging. In general, interpretation of this output requires reference to the sources. However, a single &lt;tt&gt;-d&lt;/tt&gt; does produce only mildly cryptic output and can be very useful in finding problems with configuration and network troubles.&lt;/p&gt;
&lt;p&gt;Some problems are immediately apparent when the daemon first starts running. The most common of these are the lack of a UDP port for NTP (123) in the Unix &lt;tt&gt;/etc/services&lt;/tt&gt; file (or equivalent in some systems). &lt;strong&gt;Note that NTP does not use TCP in any form. Also note that NTP requires port 123 for both source and destination ports.&lt;/strong&gt; These facts should be pointed out to firewall administrators.&lt;/p&gt;
&lt;p&gt;Other problems are apparent in the system log, which ordinarily shows the startup banner, some cryptic initialization data and the computed precision value. Event messages at startup and during regular operation are sent to the optional &lt;tt&gt;protostats&lt;/tt&gt; monitor file, as described on the &lt;a href=&#34;/archives/4.2.8-series/decode&#34;&gt;Event Messages and Status Words&lt;/a&gt; page. These and other error messages are sent to the system log, as described on the &lt;a href=&#34;/archives/4.2.8-series/msyslog&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; System Log Messages&lt;/a&gt; page. In real emergencies the daemon will sent a terminal error message to the system log and then cease operation.&lt;/p&gt;
&lt;p&gt;The next most common problem is incorrect DNS names. Check that each DNS name used in the configuration file exists and that the address responds to the Unix &lt;tt&gt;ping&lt;/tt&gt; command. The Unix &lt;tt&gt;traceroute&lt;/tt&gt; or Windows &lt;tt&gt;tracert&lt;/tt&gt; utility can be used to verify a partial or complete path exists. Most problems reported to the NTP newsgroup are not NTP problems, but problems with the network or firewall configuration.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;verifying-correct-operation&#34;&gt;Verifying Correct Operation&lt;/h4&gt;
&lt;p&gt;Unless using the &lt;tt&gt;iburst&lt;/tt&gt; option, the client normally takes a few minutes to synchronize to a server. If the client time at startup happens to be more than 1000 s distant from NTP time, the daemon exits with a message to the system log directing the operator to manually set the time within 1000 s and restart. If the time is less than 1000 s but more than 128 s distant, a step correction occurs and the daemon restarts automatically.&lt;/p&gt;
&lt;p&gt;When started for the first time and a frequency file is not present, the daemon enters a special mode in order to calibrate the frequency. This takes 900 s during which the time is not disciplined. When calibration is complete, the daemon creates the frequency file and enters normal mode to amortize whatever residual offset remains.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpq&lt;/tt&gt; commands &lt;tt&gt;pe&lt;/tt&gt;, &lt;tt&gt;as&lt;/tt&gt; and &lt;tt&gt;rv&lt;/tt&gt; are normally sufficient to verify correct operation and assess nominal performance. The &lt;a href=&#34;/archives/4.2.8-series/ntpq/#pe&#34;&gt;&lt;tt&gt;pe&lt;/tt&gt;&lt;/a&gt; command displays a list showing the DNS name or IP address for each association along with selected status and statistics variables. The first character in each line is the tally code, which shows which associations are candidates to set the system clock and of these which one is the system peer. The encoding is shown in the &lt;tt&gt;select&lt;/tt&gt; field of the &lt;a href=&#34;/archives/4.2.8-series/decode/#peer-status-word&#34;&gt;peer status word&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;/archives/4.2.8-series/ntpq/#as&#34;&gt;&lt;tt&gt;as&lt;/tt&gt;&lt;/a&gt; command displays a list of associations and association identifiers. Note the &lt;tt&gt;condition&lt;/tt&gt; column, which reflects the tally code. The &lt;a href=&#34;/archives/4.2.8-series/ntpq/#pe&#34;&gt;&lt;tt&gt;rv&lt;/tt&gt;&lt;/a&gt; command displays the &lt;a href=&#34;/archives/4.2.8-series/ntpq/#system-variables&#34;&gt;system variables&lt;/a&gt; billboard, including the &lt;a href=&#34;/archives/4.2.8-series/decode/#system-status-word&#34;&gt;system status word&lt;/a&gt;. The &lt;a href=&#34;/archives/4.2.8-series/ntpq/#rv&#34;&gt;&lt;tt&gt;rv &lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt;&lt;/a&gt; command, where &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is the association ID, displays the &lt;a href=&#34;/archives/4.2.8-series/ntpq/#peer-variables&#34;&gt;peer variables&lt;/a&gt; billboard, including the &lt;a href=&#34;/archives/4.2.8-series/decode/#peer-status-word&#34;&gt;peer status word&lt;/a&gt;. Note that, except for explicit calendar dates, times are in milliseconds and frequencies are in parts-per-million (PPM).&lt;/p&gt;
&lt;p&gt;A detailed explanation of the system, peer and clock variables in the billboards is beyond the scope of this page; however, a comprehensive explanation for each one is in the NTPv4 protocol specification. The following observations will be useful in debugging and monitoring.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The server has successfully synchronized to its sources if the &lt;tt&gt;leap&lt;/tt&gt; peer variable has value other than 3 (11b) The client has successfully synchronized to the server when the &lt;tt&gt;leap&lt;/tt&gt; system variable has value other than 3.&lt;/li&gt;
&lt;li&gt;The &lt;tt&gt;reach&lt;/tt&gt; peer variable is an 8-bit shift register displayed in octal format. When a valid packet is received, the rightmost bit is lit. When a packet is sent, the register is shifted left one bit with 0 replacing the rightmost bit. If the &lt;tt&gt;reach&lt;/tt&gt; value is nonzero, the server is reachable; otherwise, it is unreachable. Note that, even if all servers become unreachable, the system continues to show valid time to dependent applications.&lt;/li&gt;
&lt;li&gt;A useful indicator of miscellaneous problems is the &lt;tt&gt;flash&lt;/tt&gt; peer variable, which shows the result of 13 sanity tests. It contains the &lt;a href=&#34;/archives/4.2.8-series/decode/#flash-status-word&#34;&gt;flash status word&lt;/a&gt; bits, commonly called flashers, which displays the current errors for the association. These bits should all be zero for a valid server.&lt;/li&gt;
&lt;li&gt;The three peer variables &lt;tt&gt;filtdelay&lt;/tt&gt;, &lt;tt&gt;filtoffset&lt;/tt&gt; and &lt;tt&gt;filtdisp&lt;/tt&gt; show the delay, offset and jitter statistics for each of the last eight measurement rounds. These statistics and their trends are valuable performance indicators for the server, client and the network. For instance, large fluctuations in delay and jitter suggest network congestion. Missing clock filter stages suggest packet losses in the network.&lt;/li&gt;
&lt;li&gt;The synchronization distance, defined as one-half the delay plus the dispersion, represents the maximum error statistic. The jitter represents the expected error statistic. The maximum error and expected error calculated from the peer variables represents the quality metric for the server. The maximum error and expected error calculated from the system variables represents the quality metric for the client. If the root synchronization distance for any server exceeds 1.5 s, called the select threshold, the server is considered invalid.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;large-frequency-errors&#34;&gt;Large Frequency Errors&lt;/h4&gt;
&lt;p&gt;The frequency tolerance of computer clock oscillators varies widely, sometimes above 500 PPM. While the daemon can handle frequency errors up to 500 PPM, or 43 seconds per day, values much above 100 PPM reduce the headroom, especially at the lowest poll intervals. To determine the particular oscillator frequency, start &lt;tt&gt;ntpd&lt;/tt&gt; using the &lt;tt&gt;noselect&lt;/tt&gt; option with the &lt;tt&gt;server&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;p&gt;Record the time of day and offset displayed by the &lt;tt&gt;ntpq&lt;/tt&gt; &lt;a href=&#34;/archives/4.2.8-series/ntpq/#pe&#34;&gt;&lt;tt&gt;pe&lt;/tt&gt;&lt;/a&gt; command. Wait for an hour or so and record the time of day and offset. Calculate the frequency as the offset difference divided by the time difference. If the frequency is much above 100 PPM, the &lt;a href=&#34;/archives/4.2.8-series/tickadj&#34;&gt;tickadj&lt;/a&gt; program might be useful to adjust the kernel clock frequency below that value. For systems that do not support this program, this might be one using a command in the system startup file.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;access-controls&#34;&gt;Access Controls&lt;/h4&gt;
&lt;p&gt;Provisions are included in &lt;tt&gt;ntpd&lt;/tt&gt; for access controls which deflect unwanted traffic from selected hosts or networks. The controls described on the &lt;a href=&#34;/archives/4.2.8-series/accopt&#34;&gt;Access Control Options&lt;/a&gt; include detailed packet filter operations based on source address and address mask. Normally, filtered packets are dropped without notice other than to increment tally counters. However, the server can be configured to send a &amp;ldquo;kiss-o&#39;-death&amp;rdquo; (KoD) packet to the client either when explicitly configured or when cryptographic authentication fails for some reason. The client association is permanently disabled, the access denied bit (TEST4) is set in the flash variable and a message is sent to the system log.&lt;/p&gt;
&lt;p&gt;The access control provisions include a limit on the packet rate from a host or network. If an incoming packet exceeds the limit, it is dropped and a KoD sent to the source. If this occurs after the client association has synchronized, the association is not disabled, but a message is sent to the system log. See the &lt;a href=&#34;/archives/4.2.8-series/accopt&#34;&gt;Access Control Options&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;large-delay-variations&#34;&gt;Large Delay Variations&lt;/h4&gt;
&lt;p&gt;In some reported scenarios an access line may show low to moderate network delays during some period of the day and moderate to high delays during other periods. Often the delay on one direction of transmission dominates, which can result in large time offset errors, sometimes in the range up to a few seconds. It is not usually convenient to run &lt;tt&gt;ntpd&lt;/tt&gt; throughout the day in such scenarios, since this could result in several time steps, especially if the condition persists for greater than the stepout threshold.&lt;/p&gt;
&lt;p&gt;Specific provisions have been built into &lt;tt&gt;ntpd&lt;/tt&gt; to cope with these problems. The scheme is called &amp;ldquo;huff-&amp;lsquo;n-puff and is described on the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; page. An alternative approach in such scenarios is first to calibrate the local clock frequency error by running &lt;tt&gt;ntpd&lt;/tt&gt; in continuous mode during the quiet interval and let it write the frequency to the &lt;tt&gt;ntp.drift&lt;/tt&gt; file. Then, run &lt;tt&gt;ntpd -q&lt;/tt&gt; from a cron job each day at some time in the quiet interval. In systems with the nanokernel or microkernel performance enhancements, including Solaris, Tru64, Linux and FreeBSD, the kernel continuously disciplines the frequency so that the residual correction produced by &lt;tt&gt;ntpd&lt;/tt&gt; is usually less than a few milliseconds.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;cryptographic-authentication&#34;&gt;Cryptographic Authentication&lt;/h4&gt;
&lt;p&gt;Reliable source authentication requires the use of symmetric key or public key cryptography, as described on the &lt;a href=&#34;/archives/4.2.8-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. In symmetric key cryptography servers and clients share session keys contained in a secret key file In public key cryptography, which requires the OpenSSL software library, the server has a private key, never shared, and a public key with unrestricted distribution. The cryptographic media required are produced by the &lt;a href=&#34;/archives/4.2.8-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt;&lt;/a&gt; program.&lt;/p&gt;
&lt;p&gt;Problems with symmetric key authentication are usually due to mismatched keys or improper use of the &lt;tt&gt;trustedkey&lt;/tt&gt; command. A simple way to check for problems is to use the trace facility, which is enabled using the &lt;tt&gt;ntpd -d&lt;/tt&gt; command line. As each packet is received a trace line is displayed which shows the authentication status in the &lt;tt&gt;auth&lt;/tt&gt; field. A status of 1 indicates the packet was successful authenticated; otherwise it has failed.&lt;/p&gt;
&lt;p&gt;A common misconception is the implication of the &lt;tt&gt;auth&lt;/tt&gt; bit in the &lt;tt&gt;enable&lt;/tt&gt; and &lt;tt&gt;disable&lt;/tt&gt; commands. &lt;strong&gt;This bit does not affect authentication in any way other than to enable or disable mobilization of a new persistent association in broadcast/multicast client, manycast client or symmetric passive modes.&lt;/strong&gt; If enabled, which is the default, these associations require authentication; if not, an association is mobilized even if not authenticated. Users are cautioned that running with authentication disabled is very dangerous, since an intruder can easily strike up an association and inject false time values.&lt;/p&gt;
&lt;p&gt;Public key cryptography is supported in NTPv4 using the Autokey protocol, which is described in briefings on the NTP Project page linked from &lt;a href=&#34;http://www.ntp.org&#34;&gt;www.ntp.org&lt;/a&gt;. Development of this protocol is mature and the &lt;tt&gt;ntpd&lt;/tt&gt; implementation is basically complete. Autokey version 2, which is the latest and current version, includes provisions to hike certificate trails, operate as certificate authorities and verify identity using challenge/response identification schemes. Further details of the protocol are on the &lt;a href=&#34;/archives/4.2.8-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. Common problems with configuration and key generation are mismatched key files, broken links and missing or broken random seed file.&lt;/p&gt;
&lt;p&gt;As in the symmetric key cryptography case, the trace facility is a good way to verify correct operation. A statistics file &lt;tt&gt;cryptostats&lt;/tt&gt; records protocol transactions and error messages. The daemon requires a random seed file, public/private key file and a valid certificate file; otherwise it exits immediately with a message to the system log. As each file is loaded a trace message appears with its filestamp. There are a number of checks to insure that only consistent data are used and that the certificate is valid. When the protocol is in operation a number of checks are done to verify the server has the expected credentials and its filestamps and timestamps are consistent. Errors found are reported using NTP control and monitoring protocol traps with extended trap codes shown in the Authentication Options page.&lt;/p&gt;
&lt;p&gt;To assist debugging every NTP extension field is displayed in the trace along with the Autokey operation code. Every extension field carrying a verified signature is identified and displayed along with filestamp and timestamp where meaningful. In all except broadcast/multicast client mode, correct operation of the protocol is confirmed by the absence of extension fields and an &lt;tt&gt;auth&lt;/tt&gt; value of one. It is normal in broadcast/multicast client mode that the broadcast server use one extension field to show the host name, status word and association ID.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;debugging-checklist&#34;&gt;Debugging Checklist&lt;/h4&gt;
&lt;p&gt;If the &lt;tt&gt;ntpq&lt;/tt&gt; or &lt;tt&gt;ntpdc&lt;/tt&gt; programs do not show that messages are being received by the daemon or that received messages do not result in correct synchronization, verify the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Verify the &lt;tt&gt;/etc/services&lt;/tt&gt; file host machine is configured to accept UDP packets on the NTP port 123. NTP is specifically designed to use UDP and does not respond to TCP.&lt;/li&gt;
&lt;li&gt;Check the system log for &lt;tt&gt;ntpd&lt;/tt&gt; messages about configuration errors, name-lookup failures or initialization problems. Common system log messages are summarized on the &lt;a href=&#34;/archives/4.2.8-series/msyslog&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; System Log Messages&lt;/a&gt; page. Check to be sure that only one copy of &lt;tt&gt;ntpd&lt;/tt&gt; is running.&lt;/li&gt;
&lt;li&gt;Verify using &lt;tt&gt;ping&lt;/tt&gt; or other utility that packets actually do make the round trip between the client and server. Verify using &lt;tt&gt;nslookup&lt;/tt&gt; or other utility that the DNS server names do exist and resolve to valid Internet addresses.&lt;/li&gt;
&lt;li&gt;Check that the remote NTP server is up and running. The usual evidence that it is not is a &lt;tt&gt;Connection refused&lt;/tt&gt; message.&lt;/li&gt;
&lt;li&gt;Using the &lt;tt&gt;ntpdc&lt;/tt&gt; program, verify that the packets received and packets sent counters are incrementing. If the sent counter does not increment and the configuration file includes configured servers, something may be wrong in the host network or interface configuration. If this counter does increment, but the received counter does not increment, something may be wrong in the network or the server NTP daemon may not be running or the server itself may be down or not responding.&lt;/li&gt;
&lt;li&gt;If both the sent and received counters do increment, but the &lt;tt&gt;reach&lt;/tt&gt; values in the &lt;tt&gt;pe&lt;/tt&gt; billboard with &lt;tt&gt;ntpq&lt;/tt&gt; continues to show zero, received packets are probably being discarded for some reason. If this is the case, the cause should be evident from the &lt;tt&gt;flash&lt;/tt&gt; variable as discussed above and on the &lt;tt&gt;ntpq&lt;/tt&gt; page. It could be that the server has disabled access for the client address, in which case the &lt;tt&gt;refid&lt;/tt&gt; field in the &lt;tt&gt;ntpq pe&lt;/tt&gt; billboard will show a kiss code. See earlier on this page for a list of kiss codes and their meaning.&lt;/li&gt;
&lt;li&gt;If the &lt;tt&gt;reach&lt;/tt&gt; values in the &lt;tt&gt;pe&lt;/tt&gt; billboard show the servers are alive and responding, note the tattletale symbols at the left margin, which indicate the status of each server resulting from the various grooming and mitigation algorithms. The interpretation of these symbols is discussed on the &lt;tt&gt;ntpq&lt;/tt&gt; page. After a few minutes of operation, one or another of the reachable server candidates should show a * tattletale symbol. If this doesn&amp;rsquo;t happen, the intersection algorithm, which classifies the servers as truechimers or falsetickers, may be unable to find a majority of truechimers among the server population.&lt;/li&gt;
&lt;li&gt;If all else fails, see the FAQ and/or the discussion and briefings at the NTP Project page.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP Interleaved Modes</title>
      <link>/archives/4.2.8-series/xleave/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/xleave/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo4.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You need a little magic.&lt;/p&gt;
&lt;p&gt;Last update: 6-Feb-2016 07:17 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;In the protocol described in the NTP specification and reference implementation up to now, the transmit timestamp, which is captured before the message digest is computed and the packet queued for output, is properly called as a &lt;em&gt;softstamp&lt;/em&gt;. The receive timestamp, which is captured after the input driver interrupt routine and before the packet is queued for input, is properly called a &lt;em&gt;drivestamp&lt;/em&gt;. For enhanced accuracy it is desirable to capture the transmit timestamp as close to the wire as possible; for example, after the output driver interrupt routine.&lt;/p&gt;
&lt;p&gt;In other words, we would like to replace the transmit softstamp with a drivestamp, but the problem is the transmit drivestamp is available only after the packet has been sent. A solution for this problem is the two-step or interleaved protocol described on this page and included in the current reference implementation. In interleaved modes the transmit drivestamp for one packet is actually carried in the immediately following packet. The trick, however, is to implement the interleaved protocol without changing the NTP packet header format, without compromising backwards compatibility and without compromising the error recovery properties.&lt;/p&gt;
&lt;p&gt;The reference implementation captures a softstamp before the message digest routine and a drivestamp after the output interrupt routine. In this design the latter timestamp can be considered most accurate, as it avoids the various queuing and transmission latencies. The difference between the two timestamps, which is called the interleaved or output delay, varies from 16 μs (microseconds) for a dual-core Pentium running FreeBSD 6.1 to 1100 μs (microseconds) for a Sun Blade 1500 running Solaris 10.&lt;/p&gt;
&lt;p&gt;Interleaved mode can be used only in NTP symmetric and broadcast modes. It is activated by the &lt;tt&gt;xleave&lt;/tt&gt; option with the &lt;tt&gt;peer&lt;/tt&gt; or &lt;tt&gt;broadcast&lt;/tt&gt; configuration commands. A broadcast server configured for interleaved mode is transparent to ordinary broadcast clients, so both ordinary and interleaved broadcast clients can use the same packets. An interleaved symmetric active peer automatically switches to ordinary symmetric mode if the other peer is not capable of operation in interleaved mode.&lt;/p&gt;
&lt;p&gt;As demonstrated in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/onwire.html&#34;&gt;Analysis and Simulation of the NTP On-Wire Protocols&lt;/a&gt;, the interleaved modes have the same resistance to lost packets, duplicate packets, packets crossed in flight and protocol restarts as the ordinary modes. An application of the interleaved symmetric mode in space missions is presented in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/proximity.html&#34;&gt;Time Synchronization for Space Data Links&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/pogo1a.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP PARSE clock data formats</title>
      <link>/archives/4.2.8-series/parsedata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/parsedata/</guid>
      <description>
        
        
        &lt;p&gt;The parse driver currently supports several clocks with different query mechanisms. In order for you to find a sample that might be similar to a clock you might want to integrate into parse I&amp;rsquo;ll sum up the major features of the clocks (this information is distributed in the &lt;code&gt;parse/clk_*.c&lt;/code&gt; and &lt;code&gt;ntpd/refclock_parse.c&lt;/code&gt; files).&lt;/p&gt;
&lt;p&gt;Last update: 21-Oct-2010 23:44 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/parsedata/#meinberg-clocks&#34;&gt;Meinberg clocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/parsedata/#raw-dcf77-data-via-serial-line&#34;&gt;Raw DCF77 Data via serial line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/parsedata/#dcf77-raw-time-code&#34;&gt;DCF77 raw time code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/parsedata/#schmid-clock&#34;&gt;Schmid clock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/parsedata/#trimble-sv6-ascii-time-code-taip&#34;&gt;Trimble SV6 ASCII time code (TAIP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/parsedata/#elv-dcf7000&#34;&gt;ELV DCF7000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/parsedata/#hopf-6021-und-kompatible&#34;&gt;HOPF 6021 und Kompatible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/parsedata/#diem-computime-clock&#34;&gt;Diem Computime Clock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/parsedata/#wharton-400a-series-clock-with-a-4042-serial-interface&#34;&gt;WHARTON 400A Series Clock with a 404.2 Serial interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;meinberg-clocks&#34;&gt;Meinberg clocks&lt;/h4&gt;
&lt;pre&gt;Meinberg: start=&lt;STX&gt;, end=&lt;ETX&gt;, sync on start
      pattern=&#34;\2D:  .  .  ;T: ;U:  .  .  ;    \3&#34;
      pattern=&#34;\2  .  .  ;  ;   :  :  ;        \3&#34;
      pattern=&#34;\2  .  .  ;  ;   :  :  ;    :  ;        ;   .         .       &#34;
&lt;/pre&gt;
&lt;p&gt;Meinberg is a German manufacturer of time code receivers. Those clocks have a pretty common output format in the stock version. In order to support NTP Meinberg was so kind to produce some special versions of the firmware for the use with NTP. So, if you are going to use a Meinberg clock please ask whether there is a special Uni Erlangen version. You can reach &lt;a href=&#34;http://www.meinberg.de/&#34;&gt;Meinberg&lt;/a&gt; via the Web. Information can also be ordered via eMail from &lt;a href=&#34;mailto:%20info@meinberg.de&#34;&gt;info@meinberg.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;General characteristics:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Meinberg clocks primarily output pulse per second and a describing ASCII string. This string can be produced in two modes: either upon the reception of a question mark or every second. NTP uses the latter mechanism. DCF77 AM clocks have a limited accuracy of a few milliseconds. The DCF77 PZF5xx variants provide higher accuracy and have a pretty good relationship between RS232 time code and the PPS signal. Except for early versions of the old GPS166 receiver type, Meinberg GPS receivers have a very good timing relationship between the datagram and the pulse. The beginning of the start bit of the first character has basically the same accuracy as the PPS signal, plus a jitter of up to 1 bit time depending on the selected baud rate, i.e. 52 μs @ 19200. PPS support should always be used, if possible, in order to yield the highest possible accuracy.&lt;/p&gt;
&lt;p&gt;The preferred tty setting for Meinberg DCF77 receivers is 9600/7E2:&lt;/p&gt;
&lt;pre&gt;		CFLAG		(B9600|CS7|PARENB|CREAD|HUPCL)
		IFLAG		(IGNBRK|IGNPAR|ISTRIP)
		OFLAG		0
		LFLAG		0
        &lt;/pre&gt;
&lt;p&gt;The tty setting for Meinberg GPS16x/17x receivers is 19200/8N1:&lt;/p&gt;
&lt;pre&gt;		CFLAG		(B19200|CS8|PARENB|CREAD|HUPCL)
		IFLAG		(IGNBRK|IGNPAR|ISTRIP)
		OFLAG		0
		LFLAG		0
        &lt;/pre&gt;
&lt;p&gt;All clocks should be run at datagram once per second.&lt;/p&gt;
&lt;p&gt;Format of the Meinberg standard time string:&lt;/p&gt;
&lt;pre&gt;        **_&lt;STX&gt;_D:_dd.mm.yy_;T:_w_;U:_hh.mm.ss_;_uvxy__&lt;ETX&gt;_**
    pos:  0  000000001111111111222222222233  3
          1  234567890123456789012345678901  2

    _&lt;STX&gt;_         = start-of-text, ASCII code 0x02
    _dd.mm.yy_      = day of month, month, year of the century, separated by dots
    _w_             = day of week (1..7, Monday = 1)
    _hh:mm:ss_      = hour, minute, second, separated by dots
    _u_             = &#39;#&#39; for GPS receivers: time is **not** synchronized
                           &#39;#&#39; for older PZF5xx receivers: no correlation, not synchronized
                           &#39;#&#39; for other devices: never sync&#39;ed since powerup
                           &#39; &#39; if nothing of the above applies
    _v_             = &#39;*&#39; for GPS receivers: position has **not** been verified
                           &#39;*&#39; for other devices: freewheeling based on internal quartz
                           &#39; &#39; if nothing of the above applies
    _x_             = &#39;U&#39; if UTC time is transmitted
                           &#39;S&#39; if daylight saving time is active
                           &#39; &#39; if nothing of the above applies
    _y_             = &#39;!&#39; during the hour preceding start or end of daylight saving time
                           &#39;A&#39; during the hour preceding a leap second
                           &#39; &#39; if nothing of the above applies
    _&lt;ETX&gt;_         = end-of-text, ASCII code 0x03
&lt;/pre&gt;
&lt;p&gt;Format of the Uni Erlangen time string for PZF5xx receivers:&lt;/p&gt;
&lt;pre&gt;        **_&lt;STX&gt;__dd.mm.yy_; _w_; _hh:mm:ss_; _tuvxyza__&lt;ETX&gt;_**
    pos:  0  000000001111111111222222222233  3
          1  234567890123456789012345678901  2

    _&lt;STX&gt;_         = start-of-text, ASCII code 0x02
    _dd.mm.yy_      = day of month, month, year of the century, separated by dots
    _w_             = day of week (1..7, Monday = 1)
    _hh:mm:ss_      = hour, minute, second, separated by colons

    _t_             = &#39;U&#39; if UTC time is transmitted, else &#39; &#39;
    _u_             = &#39;#&#39; for older PZF5xx receivers: no correlation, not synchronized
                           &#39;#&#39; for PZF511 and newer: never sync&#39;ed since powerup
                           &#39; &#39; if nothing of the above applies
    _v_             = &#39;*&#39; if freewheeling based on internal quartz, else &#39; &#39;
    _x_             = &#39;S&#39; if daylight saving time is active, else &#39; &#39;
    _y_             = &#39;!&#39; during the hour preceding start or end of daylight saving time, else &#39; &#39;
    _z_             = &#39;A&#39; during the hour preceding a leap second, else &#39; &#39;
    _a_             = &#39;R&#39; alternate antenna (reminiscent of PZF5xx), usually &#39; &#39; for GPS receivers
    _&lt;ETX&gt;_         = end-of-text, ASCII code 0x03
&lt;/pre&gt;
&lt;p&gt;Format of the Uni Erlangen time string for GPS16x/GPS17x receivers:&lt;/p&gt;
&lt;pre&gt;        **_&lt;STX&gt;__dd.mm.yy_; _w_; _hh:mm:ss_; _+uu:uu_; _uvxyzab_; _ll.lllln_ _lll.lllle_ _hhhh_m_&lt;ETX&gt;_**
    pos:  0  0000000011111111112222222222333333333344444444445555555555666666  6
          1  2345678901234567890123456789012345678901234567890123456789012345  6

    _&lt;STX&gt;_         = start-of-text, ASCII code 0x02
    _dd.mm.yy_      = day of month, month, year of the century, separated by dots
    _w_             = day of week (1..7, Monday = 1)
    _hh:mm:ss_      = hour, minute, second, separated by colons
    _+uu:uu_        = offset to UTC in hours and minutes, preceded by + or -
    _u_             = &#39;#&#39; if time is **not** synchronized, else &#39; &#39;
    _v_             = &#39;*&#39; if position has **not** been verified, else &#39; &#39;
    _x_             = &#39;S&#39; if daylight saving time is active, else &#39; &#39;
    _y_             = &#39;!&#39; during the hour preceding start or end of daylight saving time, else &#39; &#39;
    _z_             = &#39;A&#39; during the hour preceding a leap second, else &#39; &#39;
    _a_             = &#39;R&#39; alternate antenna (reminiscent of PZF5xx), usually &#39; &#39; for GPS receivers
    _b_             = &#39;L&#39; during a leap second, i.e. if the seconds field is 60, else &#39; &#39;
    _ll.lllln_      = position latitude in degrees, &#39;n&#39; can actually be &#39;N&#39; or &#39;S&#39;, i.e. North or South
    _lll.lllle_     = position longitude in degrees, &#39;e&#39; can actually be &#39;E&#39; or &#39;W&#39;, i.e. East or West
    _hhhh_          = position altitude in meters, always followed by &#39;m&#39;
    _&lt;ETX&gt;_         = end-of-text, ASCII code 0x03
&lt;/pre&gt;
&lt;p&gt;Examples for Uni Erlangen strings from GPS receivers:&lt;/p&gt;
&lt;pre&gt;        \x02 09.07.93; 5; 08:48:26; +00:00;        ; 49.5736N  11.0280E  373m \x03
        \x02 08.11.06; 3; 14:39:39; +00:00;        ; 51.9828N   9.2258E  176m \x03
&lt;/pre&gt;
&lt;p&gt;The Uni Erlangen formats should be used preferably. Newer Meinberg GPS receivers can be configured to transmit that format, for older devices there may be a special firmware version available.&lt;/p&gt;
&lt;p&gt;For the Meinberg parse look into &lt;code&gt;clk_meinberg.c&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;raw-dcf77-data-via-serial-line&#34;&gt;Raw DCF77 Data via serial line&lt;/h4&gt;
&lt;p&gt;RAWDCF: end=TIMEOUT&amp;gt;1.5s, sync each char (any char),generate pseudo time codes, fixed format&lt;/p&gt;
&lt;p&gt;direct DCF77 code input&lt;/p&gt;
&lt;p&gt;In Europe it is relatively easy/cheap the receive the german time code transmitter DCF77. The simplest version to process its signal is to feed the 100/200ms pulse of the demodulated AM signal via a level converter to an RS232 port at 50Baud. parse/clk_rawdcf.c holds all necessary decoding logic for the time code which is transmitted each minute for one minute. A bit of the time code is sent once a second.&lt;/p&gt;
&lt;pre&gt;	The preferred tty setting is:
		CFLAG           (B50|CS8|CREAD|CLOCAL)
		IFLAG		0
		OFLAG		0
 		LFLAG		0
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;dcf77-raw-time-code&#34;&gt;DCF77 raw time code&lt;/h4&gt;
&lt;p&gt;From &amp;ldquo;Zur Zeit&amp;rdquo;, Physikalisch-Technische Bundesanstalt (PTB), Braunschweig und Berlin, März 1989&lt;/p&gt;
&lt;p&gt;Timecode transmission:&lt;/p&gt;
&lt;pre&gt;	AM:

	time marks are send every second except for the second before the
	next minute mark
	time marks consist of a reduction of transmitter power to 25%
	of the nominal level
	the falling edge is the time indication (on time)
	time marks of a 100ms duration constitute a logical 0
	time marks of a 200ms duration constitute a logical 1
&lt;/pre&gt;
&lt;p&gt;see the spec. (basically a (non-)inverted pseudo random phase shift) encoding:&lt;/p&gt;
&lt;pre&gt;	FM:

	Second	Contents
	0  - 10	AM: free, FM: 0
	11 - 14	free
	15		R     - alternate antenna
	16		A1    - expect zone change (1 hour before)
	17 - 18	Z1,Z2 - time zone
		 0  0 illegal
		 0  1 MEZ  (MET)
		 1  0 MESZ (MED, MET DST)
		 1  1 illegal
	19	A2    - expect leap insertion/deletion (1 hour before)
	20	S     - start of time code (1)
	21 - 24	M1    - BCD (lsb first) Minutes
	25 - 27	M10   - BCD (lsb first) 10 Minutes
	28	P1    - Minute Parity (even)
	29 - 32	H1    - BCD (lsb first) Hours
	33 - 34	H10   - BCD (lsb first) 10 Hours
	35	P2    - Hour Parity (even)
	36 - 39	D1    - BCD (lsb first) Days
	40 - 41	D10   - BCD (lsb first) 10 Days
	42 - 44	DW    - BCD (lsb first) day of week (1: Monday -&gt; 7: Sunday)
	45 - 49	MO1   - BCD (lsb first) Month
	50	MO10  - 10 Months
	51 - 53	Y1    - BCD (lsb first) Years
	54 - 57	Y10   - BCD (lsb first) 10 Years
	58 	P3    - Date Parity (even)
	59	      - usually missing (minute indication), except for leap insertion
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;schmid-clock&#34;&gt;Schmid clock&lt;/h4&gt;
&lt;p&gt;Schmid clock: needs poll, binary input, end=&#39;\xFC&#39;, sync start&lt;/p&gt;
&lt;p&gt;The Schmid clock is a DCF77 receiver that sends a binary time code at the reception of a flag byte. The contents if the flag byte determined the time code format. The binary time code is delimited by the byte 0xFC.&lt;/p&gt;
&lt;pre&gt;	TTY setup is:
		CFLAG		(B1200|CS8|CREAD|CLOCAL)
		IFLAG		0
		OFLAG		0
 		LFLAG		0

&lt;/pre&gt;
&lt;p&gt;The command to Schmid&amp;rsquo;s DCF77 clock is a single byte; each bit allows the user to select some part of the time string, as follows (the output for the lsb is sent first).&lt;/p&gt;
&lt;pre&gt;	Bit 0:	time in MEZ, 4 bytes *binary, not BCD*; hh.mm.ss.tenths
	Bit 1:	date 3 bytes *binary, not BCD: dd.mm.yy
	Bit 2:	week day, 1 byte (unused here)
	Bit 3:	time zone, 1 byte, 0=MET, 1=MEST. (unused here)
	Bit 4:	clock status, 1 byte,	0=time invalid,
					1=time from crystal backup,
					3=time from DCF77
	Bit 5:	transmitter status, 1 byte,
					bit 0: backup antenna
					bit 1: time zone change within 1h
					bit 3,2: TZ 01=MEST, 10=MET
					bit 4: leap second will be
						added within one hour
					bits 5-7: Zero
	Bit 6:	time in backup mode, units of 5 minutes (unused here)
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;trimble-sv6-ascii-time-code-taip&#34;&gt;Trimble SV6 ASCII time code (TAIP)&lt;/h4&gt;
&lt;p&gt;Trimble SV6: needs poll, ascii timecode, start=&#39;&amp;gt;&#39;, end=&#39;&amp;lt;&#39;, query=&#39;&amp;gt;QTM&amp;lt;&#39;, eol=&#39;&amp;lt;&#39;&lt;/p&gt;
&lt;p&gt;Trimble SV6 is a GPS receiver with PPS output. It needs to be polled. It also need a special tty mode setup (EOL=&#39;&amp;lt;&#39;).&lt;/p&gt;
&lt;pre&gt;	TTY setup is:
		CFLAG            (B4800|CS8|CREAD)
		IFLAG            (BRKINT|IGNPAR|ISTRIP|ICRNL|IXON)
		OFLAG            (OPOST|ONLCR)
		LFLAG            (ICANON|ECHOK)
&lt;/pre&gt;
&lt;p&gt;Special flags are:&lt;/p&gt;
&lt;pre&gt;		PARSE_F_PPSPPS	    - use CIOGETEV for PPS time stamping
		PARSE_F_PPSONSECOND - the time code is not related to
				      the PPS pulse (so use the time code
				      only for the second epoch)

	Timecode
	0000000000111111111122222222223333333	/ char
	0123456789012345678901234567890123456	\ posn
	&gt;RTMhhmmssdddDDMMYYYYoodnnvrrrrr;*xx&lt;	Actual
	----33445566600112222BB7__-_____--99-	Parse
	&gt;RTM                      1     ;*  &lt; 	Check
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;elv-dcf7000&#34;&gt;ELV DCF7000&lt;/h4&gt;
&lt;p&gt;ELV DCF7000: end=&#39;\r&#39;, pattern=&amp;quot; - - - - - - - \r&amp;quot;&lt;/p&gt;
&lt;p&gt;The ELV DCF7000 is a cheap DCF77 receiver sending each second a time code (though not very precise!) delimited by &amp;lsquo;`r&amp;rsquo;&lt;/p&gt;
&lt;pre&gt;	Timecode
	  YY-MM-DD-HH-MM-SS-FF\r

		FF&amp;0x1	- DST
		FF&amp;0x2	- DST switch warning
		FF&amp;0x4  - unsynchronised
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;hopf-6021-und-kompatible&#34;&gt;HOPF 6021 und Kompatible&lt;/h4&gt;
&lt;p&gt;HOPF Funkuhr 6021 mit serieller Schnittstelle Created by F.Schnekenbuehl &lt;a href=&#34;mailto:frank@comsys.dofn.de&#34;&gt;frank@comsys.dofn.de&lt;/a&gt; from clk_rcc8000.c Nortel DASA Network Systems GmbH, Department: ND250 A Joint venture of Daimler-Benz Aerospace and Nortel.&lt;/p&gt;
&lt;pre&gt; hopf Funkuhr 6021 
      used with 9600,8N1,
      UTC via serial line
      &#34;Sekundenvorlauf&#34; ON
      ETX zum Sekundenvorlauf ON
      dataformat 6021
      output time and date
      transmit with control characters
      transmit evry second
 &lt;/pre&gt;
&lt;p&gt;Type 6021 Serial Output format&lt;/p&gt;
&lt;pre&gt;      000000000011111111 / char
      012345678901234567 \ position
      sABHHMMSSDDMMYYnre  Actual
       C4110046231195     Parse
      s              enr  Check

  s = STX (0x02), e = ETX (0x03)
  n = NL  (0x0A), r = CR  (0x0D)

  A B - Status and weekday

  A - Status

      8 4 2 1
      x x x 0  - no announcement
      x x x 1  - Summertime - wintertime - summertime announcement
      x x 0 x  - Wintertime
      x x 1 x  - Summertime
      0 0 x x  - Time/Date invalid
      0 1 x x  - Internal clock used 
      1 0 x x  - Radio clock
      1 1 x x  - Radio clock highprecision

  B - 8 4 2 1
      0 x x x  - MESZ/MEZ
      1 x x x  - UTC
      x 0 0 1  - Monday
      x 0 1 0  - Tuesday
      x 0 1 1  - Wednesday
      x 1 0 0  - Thursday
      x 1 0 1  - Friday
      x 1 1 0  - Saturday
      x 1 1 1  - Sunday
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;diem-computime-clock&#34;&gt;Diem Computime Clock&lt;/h4&gt;
&lt;p&gt;The Computime receiver sends a datagram in the following format every minute&lt;/p&gt;
&lt;pre&gt;   
   Timestamp	T:YY:MM:MD:WD:HH:MM:SSCRLF 
   Pos          0123456789012345678901 2 3
		0000000000111111111122 2 2
   Parse        T:  :  :  :  :  :  :  \r\n

   T	Startcharacter &#34;T&#34; specifies start of the timestamp 
   YY	Year MM	Month 1-12 
   MD	Day of the month 
   WD	Day of week 
   HH	Hour 
   MM   Minute 
   SS   Second
   CR   Carriage return 
   LF   Linefeed
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;wharton-400a-series-clock-with-a-4042-serial-interface&#34;&gt;WHARTON 400A Series Clock with a 404.2 Serial interface&lt;/h4&gt;
&lt;p&gt;The WHARTON 400A Series clock is able to send date/time serial messages in 7 output formats. We use format 1 here because it is the shortest. We set up the clock to send a datagram every second. For use with this driver, the WHARTON 400A Series clock must be set-up as follows :&lt;/p&gt;
&lt;pre&gt;  					Programmable	Selected
  					Option No	Option
	BST or CET display		3		9 or 11
	No external controller		7		0
	Serial Output Format 1		9		1
	Baud rate 9600 bps		10		96
	Bit length 8 bits		11		8
	Parity even			12		E
&lt;/pre&gt;
&lt;p&gt;WHARTON 400A Series output format 1 is as follows :&lt;/p&gt;
&lt;pre&gt;   Timestamp	STXssmmhhDDMMYYSETX
   Pos		0  12345678901234
  		0  00000000011111

   STX	start transmission (ASCII 0x02)
   ETX	end transmission (ASCII 0x03)
   ss	Second expressed in reversed decimal (units then tens)
   mm	Minute expressed in reversed decimal
   hh	Hour expressed in reversed decimal
   DD	Day of month expressed in reversed decimal
   MM	Month expressed in reversed decimal (January is 1)
   YY	Year (without century) expressed in reversed decimal
   S	Status byte : 0x30 +
		bit 0	0 = MSF source		1 = DCF source
		bit 1	0 = Winter time		1 = Summer time
		bit 2	0 = not synchronised	1 = synchronised
		bit 3	0 = no early warning	1 = early warning
&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP Version 4 Release Notes</title>
      <link>/archives/4.2.8-series/release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/release/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/hornraba.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The rabbit toots to make sure you read this.&lt;/p&gt;
&lt;p&gt;Last update: 3-Oct-2011 21:51 UTC&lt;/p&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/release/#new-features&#34;&gt;New Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/release/#changes-and-upgrades-since-the-ntpv3-version-xntp3-5&#34;&gt;Changes and Upgrades Since the NTPv3 Version (xntp3-5)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/release/#nasty-surprises&#34;&gt;Nasty Surprises&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;NTP has been under development for almost 30 years, but the paint ain&amp;rsquo;t dry even now. This release of the NTP Version 4 (NTPv4) distribution for Unix, VMS and Windows incorporates new features and refinements, but retaining backwards compatibility with older versions, including NTPv3 and NTPv2, but not NTPv1. Support for NTPv1 has been discontinued because of certain security vulnerabilities.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;new-features&#34;&gt;New Features&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The behavior of the daemon at startup has been considerably improved. The time to measure the frequency and correct an initial offset error when started for the first time is now no more than ten minutes. Upon restart, it takes no more than five minutes to reduce the initial offset to less than one millisecond without adversely affecting the frequency. This avoids a subsequent frequency correction which could take up to several hours.&lt;/li&gt;
&lt;li&gt;A new feature called interleaved mode can be used in NTP symmetric and broadcast modes. It is designed to improve accuracy by minimizing errors due to queuing and transmission delays. It is described on the &lt;a href=&#34;/archives/4.2.8-series/xleave&#34;&gt;NTP Interleaved Modes&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;The huff-n&#39;-puff filter is designed to avoid large errors with DSL circuits and highly asymmetrical traffic, as when downloading large files. Details are on the &lt;a href=&#34;/archives/4.2.8-series/huffpuff&#34;&gt;The Huff-n&#39;-Puff Filter&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;A new feature called orphan mode provides an automatic, subnet-wide synchronization feature with multiple sources. It provides reliable backup in isolated networks or in pr when Internet sources have become unavailable. See the &lt;a href=&#34;/archives/4.2.8-series/orphan&#34;&gt;Orphan Mode&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;This release includes comprehensive packet rate management tools to help reduce the level of spurious network traffic and protect the busiest servers from overload. There is support for the optional Kiss-o&#39;-Death (KoD) packet intended to slow down an abusive client. See the &lt;a href=&#34;/archives/4.2.8-series/rate&#34;&gt;Rate Management and the Kiss-o&#39;-Death Packet&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;There are two new burst mode features available where special conditions apply. One of these is enabled by the &lt;tt&gt;iburst&lt;/tt&gt; keyword in the &lt;tt&gt;server&lt;/tt&gt; configuration command. It is intended for cases where it is important to set the clock quickly when an association is first mobilized. The other is enabled by the &lt;tt&gt;burst&lt;/tt&gt; keyword in the &lt;tt&gt;server&lt;/tt&gt; configuration command. It is intended for cases where the network attachment requires an initial calling or training procedure. See the &lt;a href=&#34;/archives/4.2.8-series/assoc&#34;&gt;Association Management&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;The OpenSSL cryptographic library has replaced the library formerly available from RSA Laboratories. All cryptographic routines except a version of the MD5 message digest algorithm have been removed from the base distribution. All 128-bit and 160-bit message digests algorithms are now supported for both symmetric key and public key cryptosystems. See the &lt;a href=&#34;/archives/4.2.8-series/authentic&#34;&gt;Authentication Support&lt;/a&gt; page for further information and the &lt;a href=&#34;/archives/4.2.8-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page for a list of supported digest algorithms.&lt;/li&gt;
&lt;li&gt;This release includes support for Autokey public-key cryptography for authenticating public servers to clients, as described in RFC 5906. This support requires the &amp;ndash;enable-autokey option when building the distribution, which is the default is OpenSSL is available. The deployment of Autokey subnets is now considerably simpler than in earlier versions. A subnet naming scheme is now available to filter manycast and pool configurations. Additional information about Autokey is on the &lt;a href=&#34;/archives/4.2.8-series/autokey&#34;&gt;Autokey Public Key Authentication&lt;/a&gt; page and links from there.&lt;/li&gt;
&lt;li&gt;The NTP discrete event simulator has been substantially upgraded, now including scenarios with multiple servers and time-sensitive scripts. This allows the NTP algorithms to be tested in an embedded environment with systematic and pseudo-random network delay and oscillator wander distributions. This has been used to verify correct operation under conditions of extreme error and misconfiguration. See the &lt;a href=&#34;/archives/4.2.8-series/ntpdsim&#34;&gt;&lt;tt&gt;ntpdsim&lt;/tt&gt; - Network Time Protocol (NTP) simulator&lt;/a&gt; page. A technical description and performance analysis is given in the white papers at the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ntp.html&#34;&gt;NTP Project Page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;NTPv4 includes three new server discovery schemes, which in most applications can avoid per-host configuration altogether. Two of these are based on IP multicast technology, while the remaining one is based on crafted DNS lookups. See the &lt;a href=&#34;/archives/4.2.8-series/discover&#34;&gt;Automatic NTP Configuration Schemes&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;The status display and event report monitoring functions have been considerably expanded, including new statistics files and event reporting to files and the system log. See the &lt;a href=&#34;/archives/4.2.8-series/decode&#34;&gt;Event Messages and Status Words&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;Several new options have been added for the &lt;tt&gt;ntpd&lt;/tt&gt; command line. For the inveterate knob twiddlers several of the more important performance variables can be changed to fit actual or perceived special conditions. In particular, the &lt;tt&gt;tinker&lt;/tt&gt; and &lt;tt&gt;tos&lt;/tt&gt; commands can be used to adjust thresholds, throw switches and change limits.&lt;/li&gt;
&lt;li&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; daemon can be operated in a one-time mode similar to &lt;tt&gt;ntpdate&lt;/tt&gt;, which program is headed for retirement. See the &lt;a href=&#34;/archives/4.2.8-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; - Network Time Protocol (NTP) daemon&lt;/a&gt; page for the new features.&lt;/li&gt;
&lt;li&gt;A number of white papers have been added to the library on the NTP Research Project Page, including:&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;changes-and-upgrades-since-the-ntpv3-version-xntp3-5&#34;&gt;Changes and Upgrades Since the NTPv3 Version (xntp3-5)&lt;/h4&gt;
&lt;p&gt;This section summarizes general changes since the publication of RFC-1305. Specific changes made during the code upgrade of 2007-2008 are summarized in &lt;a href=&#34;/archives/4.2.8-series/history&#34;&gt;Historical Notes&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the Basic Socket Interface Extensions for IPv6 (RFC-2553) is detected, support for the IPv6 address family is supported in addition to the default support for the IPv4 address family. In contexts where a host name is expected, a &lt;tt&gt;-4&lt;/tt&gt; qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a &lt;tt&gt;-6&lt;/tt&gt; qualifier forces DNS resolution to the IPv6 namespace.&lt;/li&gt;
&lt;li&gt;Many changes have been made in the NTP algorithms to improve performance and reliability A clock state machine has been incorporated to improve behavior under transient conditions. The clock discipline algorithm has been redesigned to improve accuracy, reduce the impact of network disruptions and allow increased poll intervals to 36 hours with only moderate sacrifice in accuracy. The clock select, cluster and combine algorithms have been overhauled as the result of a thorough statistical analysis.&lt;/li&gt;
&lt;li&gt;In all except a very few cases, all timing intervals are randomized, so that the tendency for NTPv3 to self-synchronize and bunch messages, especially with a large number of configured associations, is minimized.&lt;/li&gt;
&lt;li&gt;Support for the precision time kernel modifications, which are now in stock FreeBSD and optional in Linux kernels, is included. With this support the system clock can be disciplined to the order of one nanosecond. The older microtime kernel modifications in Digital/Compaq/HP Tru64, Digital Ultrix and Sun Microsystems SunOS and Solaris, continue to be supported. In either case the support eliminates sawtooth error, which can be in the hundreds of microseconds. Further information is on the &lt;a href=&#34;/archives/4.2.8-series/kern&#34;&gt;Kernel Model for Precision Timekeeping&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;New reference clock drivers have been added for several GPS receivers now on the market for a total of 44 drivers. The reference clock driver interface is smaller, more rational, more flexible and more accurate. Most of the drivers in NTPv3 have been converted to the NTPv4 interface and continue to operate as before. A summary of the supported drivers is on the &lt;a href=&#34;/archives/4.2.8-series/refclock&#34;&gt;Reference Clock Support&lt;/a&gt; page. Audio drivers for the Canadian standard time and frequency station CHU, the US standard time and frequency stations WWV/H and for IRIG signals have been updated and capabilities added to allow direct connection of these signals to an audio port. See the &lt;a href=&#34;/archives/4.2.8-series/audio&#34;&gt;Reference Clock Audio Drivers&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;Support for pulse-per-second (PPS) signals has been extended to all drivers as an intrinsic function. Further information is on the &lt;a href=&#34;/archives/4.2.8-series/pps&#34;&gt;Pulse-Per-Second (PPS) Signal Interfacing&lt;/a&gt; page. Typical performance with the PPS interface and a fast machine are in the low microseconds.&lt;/li&gt;
&lt;li&gt;Several small changes have been made to make administration and maintenance more convenience. The entire distribution has been converted to gnu &lt;tt&gt;automake&lt;/tt&gt;, which greatly ease the task of porting to new and different programming environments, as well as reduce the incidence of bugs due to improper handling of idiosyncratic kernel functions. Version control is provided by Bitkeeper using an online repository at &lt;a href=&#34;http://www.ntp.org&#34;&gt;www.ntp.org&lt;/a&gt;. Trouble ticket reporting is provided using Bugzilla. If &lt;tt&gt;ntpd&lt;/tt&gt;, is configured with NetInfo support, it will attempt to read its configuration from the NetInfo service if the default &lt;tt&gt;ntp.conf&lt;/tt&gt; file cannot be read and no file is specified by the &lt;tt&gt;-c&lt;/tt&gt; option. When &lt;tt&gt;ntpd&lt;/tt&gt; starts it looks at the value of &lt;tt&gt;umask&lt;/tt&gt;, and if zero &lt;tt&gt;ntpd&lt;/tt&gt; will set the &lt;tt&gt;umask&lt;/tt&gt; to &lt;tt&gt;022&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;nasty-surprises&#34;&gt;Nasty Surprises&lt;/h4&gt;
&lt;p&gt;There are a few things different about this release that have changed since the latest NTP Version 3 release. Following are a few things to worry about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some configuration commands have been removed, others added and some changed in minor ways. See the collection of Commands and Options on the &lt;a href=&#34;/archives/4.2.8-series/comdex&#34;&gt;Command Index&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;When both IPv4 and IPv6 address families are in use, the host&amp;rsquo;s resolver library may not choose the intended address family if a server has an IPv4 and IPv6 address associated with the same DNS name. The solution is to use the IPv4 or IPv6 address directly in such cases or use another DNS name that resolves to the intended address family. Older versions of &lt;tt&gt;ntpdc&lt;/tt&gt; will show only the IPv4 associations with the &lt;tt&gt;peers&lt;/tt&gt; and some other commands. Older versions of &lt;tt&gt;ntpq&lt;/tt&gt; will show 0.0.0.0 for IPv6 associations with the &lt;tt&gt;peers&lt;/tt&gt; and some other commands.&lt;/li&gt;
&lt;li&gt;There is a minor change to the reference ID field of the NTP packet header when operating with IPv6 associations. In IPv4 associations this field contains the 32-bit IPv4 address of the server, in order to detect and avoid loops. In IPv6 associations this field contains the first 32-bits of a MD5 hash formed from the IPv6 address. All programs in the distribution have been modified to work with both address families.&lt;/li&gt;
&lt;li&gt;The &lt;tt&gt;tty_clk&lt;/tt&gt; and &lt;tt&gt;ppsclock&lt;/tt&gt; pulse-per-second (PPS) line discipline/streams modules are no longer supported. The PPS function is now handled by the &lt;a href=&#34;/archives/drivers/driver22&#34;&gt;PPS Clock Discipline&lt;/a&gt; driver, which uses the new PPSAPI application program interface adopted by the IETF. Note that the &lt;tt&gt;pps&lt;/tt&gt; configuration file command has been obsoleted by the driver. See the &lt;a href=&#34;/archives/4.2.8-series/pps&#34;&gt;Pulse-Per-Second (PPS) Signal Interfacing&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;Support for the NTPv1 symmetric mode has been discontinued, since it hasn&amp;rsquo;t worked for years. Support continues for the NTPv1 client mode, which is used by some SNTP clients.&lt;/li&gt;
&lt;li&gt;The &lt;tt&gt;authstuff&lt;/tt&gt; directory, intended as a development and testing aid for porting cryptographic routines to exotic architectures, has been removed. Testing and conformance validation tools are available in the OpenSSL software distribution.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntp-keygen - generate public and private keys</title>
      <link>/archives/4.2.8-series/keygen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/keygen/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice23.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alice holds the key.&lt;/p&gt;
&lt;p&gt;Last update: 24-Jul-2018 07:27 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/keygen/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/keygen/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/keygen/#running-the-program&#34;&gt;Running the program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/keygen/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/keygen/#random-seed-file&#34;&gt;Random Seed File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/keygen/#cryptographic-data-files&#34;&gt;Cryptographic Data Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/keygen/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntp-keygen [ -deGHIMPT ] [ -b &lt;em&gt;modulus&lt;/em&gt; ] [ -c [ RSA-MD2 | RSA-MD5 | RSA-SHA | RSA-SHA1 | RSA-MDC2 | RSA-RIPEMD160 | DSA-SHA | DSA-SHA1 ] ] [ -C &lt;em&gt;cipher&lt;/em&gt; ] [-i &lt;em&gt;group&lt;/em&gt; ] [ -l &lt;em&gt;days&lt;/em&gt;] [ -m &lt;em&gt;modulus&lt;/em&gt; ] [ -p &lt;em&gt;passwd1&lt;/em&gt; ] [ -q &lt;em&gt;passwd2&lt;/em&gt; ] [ -S [ RSA | DSA ] ] [ -s &lt;em&gt;host&lt;/em&gt; ] [ -V &lt;em&gt;nkeys&lt;/em&gt; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;This program generates cryptographic data files used by the NTPv4 authentication and identity schemes. It can generate message digest keys used in symmetric key cryptography and, if the OpenSSL software library has been installed, it can generate host keys, sign keys, certificates, and identity keys and parameters used by the Autokey public key cryptography. The message digest keys file is generated in a format compatible with NTPv3. All other files are in PEM-encoded printable ASCII format so they can be embedded as MIME attachments in mail to other sites.&lt;/p&gt;
&lt;p&gt;When used to generate message digest keys, the program produces a file containing ten pseudo-random printable ASCII strings suitable for the MD5 message digest algorithm included in the distribution. If the OpenSSL library is installed, it produces an additional ten hex-encoded random bit strings suitable for the SHA1, AES-128 CMAC, and other message digest algorithms. The message digest keys file must be distributed and stored using secure means beyond the scope of NTP itself. Besides the keys used for ordinary NTP associations, additional keys can be defined as passwords for the &lt;tt&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq&#34;&gt;ntpq&lt;/a&gt;&lt;/tt&gt; and &lt;tt&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdc&#34;&gt;ntpdc&lt;/a&gt;&lt;/tt&gt; utility programs.&lt;/p&gt;
&lt;p&gt;The remaining generated files are compatible with other OpenSSL applications and other Public Key Infrastructure (PKI) resources. Certificates generated by this program are compatible with extant industry practice, although some users might find the interpretation of X509v3 extension fields somewhat liberal. However, the identity keys are probably not compatible with anything other than Autokey.&lt;/p&gt;
&lt;p&gt;Some files used by this program are encrypted using a private password. The &lt;tt&gt;-p&lt;/tt&gt; option specifies the password for local encrypted files and the &lt;tt&gt;-q&lt;/tt&gt; option the password for encrypted files sent to remote sites. If no password is specified, the host name returned by the Unix &lt;tt&gt;gethostname()&lt;/tt&gt; function, normally the DNS name of the host, is used.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;pw&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; configuration command specifies the read password for previously encrypted local files. This must match the local password used by this program. If not specified, the host name is used. Thus, if files are generated by this program without password, they can be read back by &lt;tt&gt;ntpd&lt;/tt&gt; without password, but only on the same host.&lt;/p&gt;
&lt;p&gt;Normally, encrypted files for each host are generated by that host and used only by that host, although exceptions exist as noted later on this page. The symmetric keys file, normally called &lt;tt&gt;ntp.keys&lt;/tt&gt;, is usually installed in &lt;tt&gt;/etc&lt;/tt&gt;. Other files and links are usually installed in &lt;tt&gt;/usr/local/etc&lt;/tt&gt;, which is normally in a shared filesystem in NFS-mounted networks and cannot be changed by shared clients. The location of the keys directory can be changed by the &lt;tt&gt;keysdir&lt;/tt&gt; configuration command in such cases. Normally, this is in &lt;tt&gt;/etc&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;This program directs commentary and error messages to the standard error stream &lt;tt&gt;stderr&lt;/tt&gt; and remote files to the standard output stream &lt;tt&gt;stdout&lt;/tt&gt; where they can be piped to other applications or redirected to files. The names used for generated files and links all begin with the string &lt;tt&gt;ntpkey&lt;/tt&gt; and include the file type, generating host and filestamp, as described in the &lt;a href=&#34;/archives/4.2.8-series/keygen/#cryptographic-data-files&#34;&gt;Cryptographic Data Files&lt;/a&gt; section below.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;running-the-program&#34;&gt;Running the Program&lt;/h4&gt;
&lt;p&gt;To test and gain experience with Autokey concepts, log in as root and change to the keys directory, usually &lt;tt&gt;/usr/local/etc&lt;/tt&gt;. When run for the first time, or if all files with names beginning &lt;tt&gt;ntpkey&lt;/tt&gt; have been removed, use the &lt;tt&gt;ntp-keygen&lt;/tt&gt; command without arguments to generate a default RSA host key and matching RSA-MD5 certificate with expiration date one year hence. If run again without options, the program uses the existing keys and parameters and generates only a new certificate with new expiration date one year hence.&lt;/p&gt;
&lt;p&gt;Run the command on as many hosts as necessary. Designate one of them as the trusted host (TH) using &lt;tt&gt;ntp-keygen&lt;/tt&gt; with the &lt;tt&gt;-T&lt;/tt&gt; option and configure it to synchronize from reliable Internet servers. Then configure the other hosts to synchronize to the TH directly or indirectly. A certificate trail is created when Autokey asks the immediately ascendant host towards the TH to sign its certificate, which is then provided to the immediately descendant host on request. All group hosts should have acyclic certificate trails ending on the TH.&lt;/p&gt;
&lt;p&gt;The host key is used to encrypt the cookie when required and so must be RSA type. By default, the host key is also the sign key used to encrypt signatures. A different sign key can be assigned using the &lt;tt&gt;-S&lt;/tt&gt; option and this can be either RSA or DSA type. By default, the signature message digest type is MD5, but any combination of sign key type and message digest type supported by the OpenSSL library can be specified using the &lt;tt&gt;-c&lt;/tt&gt; option.&lt;/p&gt;
&lt;p&gt;The rules say cryptographic media should be generated with proventic filestamps, which means the host should already be synchronized before this program is run. This of course creates a chicken-and-egg problem when the host is started for the first time. Accordingly, the host time should be set by some other means, such as eyeball-and-wristwatch, at least so that the certificate lifetime is within the current year. After that and when the host is synchronized to a proventic source, the certificate should be re-generated.&lt;/p&gt;
&lt;p&gt;Additional information on trusted groups and identity schemes is on the &lt;a href=&#34;/archives/4.2.8-series/autokey&#34;&gt;Autokey Public-Key Authentication&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-b _modulus_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the modulus for generating identity keys to &lt;em&gt;modulus&lt;/em&gt; bits. The modulus defaults to 256, but can be set from 256 (32 octets) to 2048 (256 octets). Use the larger moduli with caution, as this can consume considerable computing resources and increases the size of authenticated packets.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-c [ RSA-MD2 | RSA-MD5 | RSA-SHA | RSA-SHA1 | RSA-MDC2 | RSA-RIPEMD160 | DSA-SHA | DSA-SHA1 ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Select certificate digital signature and message digest scheme. Note that RSA schemes must be used with an RSA sign key and DSA schemes must be used with a DSA sign key. The default without this option is &lt;tt&gt;RSA-MD5&lt;/tt&gt;. If compatibility with FIPS 140-2 is required, either the &lt;tt&gt;DSA-SHA&lt;/tt&gt; or &lt;tt&gt;DSA-SHA1&lt;/tt&gt; scheme must be used.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-C _cipher_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Select the OpenSSL cipher to use for password-protected keys. The &lt;tt&gt;openssl -h&lt;/tt&gt; command provided with OpenSSL displays available ciphers. The default without this option is &lt;tt&gt;des-ede3-cbc&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable debugging. This option displays the cryptographic data produced for eye-friendly billboards.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-e&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Extract the IFF or GQ public parameters from the &lt;tt&gt;IFFkey&lt;/tt&gt; or &lt;tt&gt;GQkey&lt;/tt&gt; keys file previously specified. Send the unencrypted data to the standard output stream &lt;tt&gt;stdout&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-G&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new encrypted GQ key file for the Guillou-Quisquater (GQ) identity scheme. This option is mutually exclusive with the &lt;tt&gt;-I&lt;/tt&gt; and &lt;tt&gt;-V&lt;/tt&gt; options.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-H&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new encrypted RSA public/private host key file.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-i _group_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the optional Autokey group name to &lt;tt&gt;&lt;em&gt;group&lt;/em&gt;&lt;/tt&gt;. This is used in the identity scheme parameter file names. In that role, the default is the host name if no group is provided. The group name, if specified using &lt;tt&gt;-i&lt;/tt&gt; or using &lt;tt&gt;-s&lt;/tt&gt; following an &lt;tt&gt;@&lt;/tt&gt; character, is also used in certificate subject and issuer names in the form &lt;tt&gt;&lt;em&gt;host&lt;/em&gt;@&lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; and should match the group specified via &lt;tt&gt;crypto ident&lt;/tt&gt; or &lt;tt&gt;server ident&lt;/tt&gt; in ntpd&amp;rsquo;s configuration file.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-I&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new encrypted IFF key file for the Schnorr (IFF) identity scheme. This option is mutually exclusive with the &lt;tt&gt;-G&lt;/tt&gt; and &lt;tt&gt;-V&lt;/tt&gt; options.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-l _days_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the lifetime for certificates to &lt;tt&gt;&lt;em&gt;days&lt;/em&gt;&lt;/tt&gt;. The default lifetime is one year (365 d).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-m _modulus_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the modulus for generating files to &lt;em&gt;modulus&lt;/em&gt; bits. The modulus defaults to 512, but can be set from 256 (32 octets) to 2048 (256 octets). Use the larger moduli with caution, as this can consume considerable computing resources and increases the size of authenticated packets.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-M&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new keys file containing 10 MD5 keys and 10 SHA keys. An MD5 key is a string of 20 random printable ASCII characters, while a SHA key is a string of 40 random hex digits. The file can be edited using a text editor to change the key type or key content. This option is mutually exclusive with all other options.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-P&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new private certificate used by the PC identity scheme. By default, the program generates public certificates. Note: the PC identity scheme is not recommended for new installations.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p _passwd_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the password for reading and writing encrypted files to &lt;tt&gt;&lt;em&gt;passwd&lt;/em&gt;&lt;/tt&gt;. These include the host, sign and identify key files. By default, the password is the string returned by the Unix &lt;tt&gt;gethostname()&lt;/tt&gt; routine.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-q _passwd_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the password for writing encrypted IFF, GQ and MV identity files redirected to &lt;tt&gt;stdout&lt;/tt&gt; to &lt;tt&gt;&lt;em&gt;passwd&lt;/em&gt;&lt;/tt&gt;=. In effect, these files are decrypted with the &lt;tt&gt;-p&lt;/tt&gt; password, then encrypted with the &lt;tt&gt;-q&lt;/tt&gt; password. By default, the password is the string returned by the Unix &lt;tt&gt;gethostname()&lt;/tt&gt; routine.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-S [ RSA | DSA ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new encrypted public/private sign key file of the specified type. By default, the sign key is the host key and has the same type. If compatibly with FIPS 140-2 is required, the sign key type must be &lt;tt&gt;DSA&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s _host_[@_group_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the Autokey host name, where &lt;tt&gt;&lt;em&gt;host&lt;/em&gt;&lt;/tt&gt; is the host name and &lt;tt&gt;&lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; is the optional group name. The host name, and if provided, group name are used in &lt;tt&gt;&lt;em&gt;host&lt;/em&gt;@&lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; form as certificate subject and issuer. Specifying &lt;tt&gt;-s @&lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; is allowed, and results in leaving the host name unchanged, as with &lt;tt&gt;-i &lt;em&gt;group&lt;/em&gt;&lt;/tt&gt;. The group name, or if no group is provided, the host name are also used in the file names of IFF, GQ, and MV identity scheme parameter files. If &lt;tt&gt;&lt;em&gt;host&lt;/em&gt;&lt;/tt&gt; is not specified, the default host name is the string returned by the &lt;tt&gt;gethostname()&lt;/tt&gt; routine.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-T&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a trusted certificate. By default, the program generates nontrusted certificates.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-V _nkeys_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate &lt;tt&gt;nkeys&lt;/tt&gt; encrypted server keys for the Mu-Varadharajan (MV) identity scheme. This option is mutually exclusive with the &lt;tt&gt;-I&lt;/tt&gt; and &lt;tt&gt;-G&lt;/tt&gt; options. Note: support for this option should be considered a work in progress.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;random-seed-file&#34;&gt;Random Seed File&lt;/h4&gt;
&lt;p&gt;All cryptographically sound key generation schemes must have means to randomize the entropy seed used to initialize the internal pseudo-random number generator used by the OpenSSL library routines. If a site supports &lt;tt&gt;ssh&lt;/tt&gt;, it is very likely that means to do this are already available. The entropy seed used by the OpenSSL library is contained in a file, usually called &lt;tt&gt;.rnd&lt;/tt&gt;, which must be available when starting the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program or &lt;tt&gt;ntpd&lt;/tt&gt; daemon.&lt;/p&gt;
&lt;p&gt;The OpenSSL library looks for the file using the path specified by the &lt;tt&gt;RANDFILE&lt;/tt&gt; environment variable in the user home directory, whether root or some other user. If the &lt;tt&gt;RANDFILE&lt;/tt&gt; environment variable is not present, the library looks for the &lt;tt&gt;.rnd&lt;/tt&gt; file in the user home directory. Since both the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program and &lt;tt&gt;ntpd&lt;/tt&gt; daemon must run as root, the logical place to put this file is in &lt;tt&gt;/.rnd&lt;/tt&gt; or &lt;tt&gt;/root/.rnd&lt;/tt&gt;. If the file is not available or cannot be written, the program exits with a message to the system log.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;cryptographic-data-files&#34;&gt;Cryptographic Data Files&lt;/h4&gt;
&lt;p&gt;File and link names are in the form &lt;tt&gt;ntpkey__key___name_._fstamp_&lt;/tt&gt;, where &lt;tt&gt;_key_&lt;/tt&gt; is the key or parameter type, &lt;tt&gt;_name_&lt;/tt&gt; is the host or group name and &lt;tt&gt;_fstamp_&lt;/tt&gt; is the filestamp (NTP seconds) when the file was created). By convention, _&lt;tt&gt;key&lt;/tt&gt;_ names in generated file names include both upper and lower case characters, while _&lt;tt&gt;key&lt;/tt&gt;_ names in generated link names include only lower case characters. The filestamp is not used in generated link names.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;&lt;tt&gt;key&lt;/tt&gt;&lt;/em&gt; name is a string defining the cryptographic key type. Key types include public/private keys &lt;tt&gt;host&lt;/tt&gt; and &lt;tt&gt;sign&lt;/tt&gt;, certificate &lt;tt&gt;cert&lt;/tt&gt; and several challenge/response key types. By convention, client files used for challenges have a &lt;tt&gt;par&lt;/tt&gt; subtype, as in the IFF challenge &lt;tt&gt;IFFpar&lt;/tt&gt;, while server files for responses have a &lt;tt&gt;key&lt;/tt&gt; subtype, as in the GQ response &lt;tt&gt;GQkey&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;All files begin with two nonencrypted lines. The first line contains the file name in the format &lt;tt&gt;ntpkey__key___host_._fstamp_&lt;/tt&gt;. The second line contains the datestamp in conventional Unix &lt;tt&gt;date&lt;/tt&gt; format. Lines beginning with &lt;tt&gt;#&lt;/tt&gt; are ignored.&lt;/p&gt;
&lt;p&gt;The remainder of the file contains cryptographic data encoded first using ASN.1 rules, then encrypted using the DES-CBC algorithm with given password and finally written in PEM-encoded printable ASCII text preceded and followed by MIME content identifier lines.&lt;/p&gt;
&lt;p&gt;The format of the symmetric keys file, ordinarily named &lt;tt&gt;ntp.keys,&lt;/tt&gt; is somewhat different than the other files in the interest of backward compatibility. Ordinarily, the file is generated by this program, but it can be constructed and edited using an ordinary text editor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Typical Symmetric Key File&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/md5.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 1 shows a typical symmetric keys file used by the reference implementation. Each line of the file contains three or four fields, first an integer between 1 and 65535, inclusive, representing the key identifier used in the &lt;tt&gt;server&lt;/tt&gt; and &lt;tt&gt;peer&lt;/tt&gt; configuration commands. Second is the key type for the message digest algorithm, which in the absence of the OpenSSL library must be &lt;tt&gt;MD5&lt;/tt&gt; to designate the MD5 message digest algorithm. If the OpenSSL library is installed, the key type can be any message digest algorithm supported by that library. However, if compatibility with FIPS 140-2 is required, the key type must be either &lt;tt&gt;SHA&lt;/tt&gt; or &lt;tt&gt;SHA1&lt;/tt&gt;. The key type can be changed using an ASCII text editor.&lt;/p&gt;
&lt;p&gt;The third field is the key.&lt;/p&gt;
&lt;p&gt;An MD5 key consists of a printable ASCII string less than or equal to 16 characters and terminated by whitespace or a # character. An OpenSSL key consists of a hex-encoded ASCII string of 40 characters, which is truncated as necessary.&lt;/p&gt;
&lt;p&gt;Note that the keys used by the &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; programs are checked against passwords requested by the programs and entered by hand, so it is generally appropriate to specify these keys in human readable ASCII format.&lt;/p&gt;
&lt;p&gt;The optional fourth field is one or more IPs, with each IP separated with a comma. An IP may end with an optional &lt;tt&gt;/subnetbits&lt;/tt&gt; suffix, which limits the acceptance of the key identifier to packets claiming to be from the described IP space.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntp-keygen&lt;/tt&gt; program generates a MD5 symmetric keys file &lt;tt&gt;ntpkey_MD5key__hostname.filestamp_&lt;/tt&gt;. Since the file contains private shared keys, it should be visible only to root and distributed by secure means to other subnet hosts. The NTP daemon loads the file &lt;tt&gt;ntp.keys&lt;/tt&gt;, so &lt;tt&gt;ntp-keygen&lt;/tt&gt; installs a soft link from this name to the generated file. Subsequently, similar soft links must be installed by manual or automated means on the other subnet hosts. While this file is not used with the Autokey Version 2 protocol, it is needed to authenticate some remote configuration commands used by the &lt;a href=&#34;/archives/4.2.8-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; and &lt;a href=&#34;/archives/4.2.8-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt;&lt;/a&gt; utilities.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;It can take quite a while to generate some cryptographic values.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpd - Network Time Protocol (NTP) daemon</title>
      <link>/archives/4.2.8-series/ntpd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/ntpd/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/wingdorothy.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;The Wizard of Oz&lt;/em&gt;, L. Frank Baum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You need help from the monkeys.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:14 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpd/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpd/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpd/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpd/#the-configuration-file&#34;&gt;The Configuration File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpd/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpd [ -46aAbdDgLmnNqx ] [ -c &lt;em&gt;conffile&lt;/em&gt; ] [ -f &lt;em&gt;driftfile&lt;/em&gt; ] [ -i &lt;em&gt;jaildir&lt;/em&gt; ] [ -I &lt;em&gt;InterfaceOrAddress&lt;/em&gt; ] [ -k &lt;em&gt;keyfile&lt;/em&gt; ] [ -l &lt;em&gt;logfile&lt;/em&gt; ] [ -p &lt;em&gt;pidfile&lt;/em&gt; ] [ -P &lt;em&gt;priority&lt;/em&gt; ] [ -r &lt;em&gt;broadcastdelay&lt;/em&gt; ] [ -s &lt;em&gt;statsdir&lt;/em&gt; ] [ -t &lt;em&gt;key&lt;/em&gt; ] [ -u &lt;em&gt;user&lt;/em&gt;[:&lt;em&gt;group&lt;/em&gt;] ] [ -U &lt;em&gt;interface_update_interval&lt;/em&gt; ] [ -v &lt;em&gt;variable&lt;/em&gt; ] [ -V &lt;em&gt;variable&lt;/em&gt; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; program is an operating system daemon that synchronizes the system clock to remote NTP time servers or local reference clocks. It is a complete implementation of NTP version 4 defined by RFC-5905, but also retains compatible with version 3 defined by RFC-1305 and versions 1 and 2, defined by RFC-1059 and RFC-1119, respectively. The program can operate in any of several modes, including client/server, symmetric and broadcast modes, and with both symmetric-key and public key-cryptography&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; program ordinarily requires a configuration file described on this page. It contains configuration commands described on the pages listed above. However a client can discover remote servers and configure them automatically. This makes it possible to deploy a fleet of workstations without specifying configuration details specific to the local environment. Further details are on the&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; program normally operates continuously while adjusting the system time and frequency, but in some cases this might not be practical. With the &lt;tt&gt;-q&lt;/tt&gt; option &lt;tt&gt;ntpd&lt;/tt&gt; operates as in continuous mode, but exits just after setting the clock for the first time. Most applications will probably want to specify the &lt;tt&gt;iburst&lt;/tt&gt; option with the &lt;tt&gt;server&lt;/tt&gt; command. With this option a volley of messages is exchanged to groom the data and set the clock in about ten seconds. If nothing is heard after a few minutes, the daemon times out and exits without setting the clock.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of host names to the IPv4 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-6&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of host names to the IPv6 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-a&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Require cryptographic authentication for broadcast client, multicast client and symmetric passive associations. This is the same operation as the &lt;tt&gt;enable auth&lt;/tt&gt; command and is the default.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-A&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Do not require cryptographic authentication for broadcast client, multicast client and symmetric passive associations. This is the same operation as the &lt;tt&gt;disable auth&lt;/tt&gt; command and almost never a good idea.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-b&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable the client to synchronize to broadcast servers.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-c _conffile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the configuration file. Without the option the default is &lt;tt&gt;/etc/ntp.conf&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Disable switching into daemon mode, so &lt;tt&gt;ntpd&lt;/tt&gt; stays attached to the starting terminal which will get all the debugging printout. Also, ^C will kill it. This option may occur more than once, with each occurrence indicating greater detail of display.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-D _level_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify debugging level directly, with &lt;tt&gt;level&lt;/tt&gt; corresponding to the numbe of &lt;tt&gt;-d&lt;/tt&gt; options..&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-f _driftfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the frequency file. This is the same operation as the &lt;tt&gt;driftfile &lt;em&gt;driftfile&lt;/em&gt;&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-g&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Normally, &lt;tt&gt;ntpd&lt;/tt&gt; exits with a message to the system log if the offset exceeds the panic threshold, which is 1000 s by default. This option allows the time to be set to any value without restriction; however, this can happen only once. If the threshold is exceeded after that, &lt;tt&gt;ntpd&lt;/tt&gt; will exit with a message to the system log. This option can be used with the &lt;tt&gt;-q&lt;/tt&gt; and &lt;tt&gt;-x&lt;/tt&gt; options. See the &lt;tt&gt;tinker&lt;/tt&gt; command for other options.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-i _jaildir_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Chroot the server to the directory &lt;em&gt;&lt;tt&gt;jaildir&lt;/tt&gt;&lt;/em&gt;. This option also implies that the server attempts to drop root privileges at startup (otherwise, chroot gives very little additional security), and it is only available if the OS supports to run the server without full root privileges. You may need to also specify a &lt;tt&gt;-u&lt;/tt&gt; option.&lt;/p&gt;
&lt;dt id=&#34;--interface&#34;&gt;&lt;tt&gt;-I [_address_ | _interface name_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Open the network address given, or all the addresses associated with the given interface name. This option may appear multiple times. This option also implies not opening other addresses, except wildcard and localhost. This option is deprecated. Please consider using the configuration file &lt;a href=&#34;/archives/4.2.8-series/miscopt/#interface&#34;&gt;interface&lt;/a&gt; command, which is more versatile.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-k _keyfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the symmetric key file. This is the same operation as the &lt;tt&gt;keys &lt;em&gt;keyfile&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-l _logfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the log file. The default is the system log file. This is the same operation as the &lt;tt&gt;logfile &lt;em&gt;logfile&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt id=&#34;--mdns&#34;&gt;&lt;tt&gt;-m&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Once the system clock is synchronized, register with mDNS as an available server.&lt;/p&gt;
&lt;dt id=&#34;--novirtualips&#34;&gt;&lt;tt&gt;-L&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Do not listen to virtual interfaces, defined as those with names containing a colon. This option is deprecated. Please consider using the configuration file &lt;a href=&#34;/archives/4.2.8-series/miscopt/#interface&#34;&gt;interface&lt;/a&gt; command, which is more versatile.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-M&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Raise scheduler precision to its maximum (1 ms) using timeBeginPeriod. (Windows only)&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-n&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Don&amp;rsquo;t fork.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-N&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;To the extent permitted by the operating system, run the &lt;tt&gt;ntpd&lt;/tt&gt; at the highest priority.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p _pidfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the file used to record the &lt;tt&gt;ntpd&lt;/tt&gt; process ID. This is the same operation as the &lt;tt&gt;pidfile &lt;em&gt;pidfile&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-P _priority_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;To the extent permitted by the operating system, run the &lt;tt&gt;ntpd&lt;/tt&gt; at the specified priority.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-q&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Exit the &lt;tt&gt;ntpd&lt;/tt&gt; just after the first time the clock is set. This behavior mimics that of the &lt;tt&gt;ntpdate&lt;/tt&gt; program, which is to be retired. The &lt;tt&gt;-g&lt;/tt&gt; and &lt;tt&gt;-x&lt;/tt&gt; options can be used with this option. Note: The kernel time discipline is disabled with this option.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-r _broadcastdelay_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the default propagation delay from the broadcast/multicast server to this client. This is necessary only if the delay cannot be computed automatically by the protocol.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s _statsdir_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the directory path for files created by the statistics facility. This is the same operation as the &lt;tt&gt;statsdir &lt;em&gt;statsdir&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-t _key_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Add a key number to the trusted key list. This option can occur more than once. This is the same operation as the &lt;tt&gt;trustedkey &lt;em&gt;key&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-u _user[:group]_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a user, and optionally a group, to switch to. This option is only available if the OS supports running the server without full root privileges. Currently, this option is supported under NetBSD (configure with &lt;tt&gt;&amp;ndash;enable-clockctl&lt;/tt&gt;) and Linux (configure with &amp;ndash;&lt;tt&gt;enable-linuxcaps&lt;/tt&gt;).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-U _interface update interval_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Number of seconds to wait between interface list scans to pick up old and delete network interface. Set to 0 to disable dynamic interface list updating. The default is to scan every 5 minutes.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-v _variable_&lt;/tt&gt;  
&lt;tt&gt;-V _variable_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Add a system variable listed by default.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-x&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Normally, the time is slewed if the offset is less than the step threshold, which is 128 ms by default, and stepped if above the threshold. This option sets the threshold to 600 s, which is well within the accuracy window to set the clock manually. Note: Since the slew rate of typical Unix kernels is limited to 0.5 ms/s, each second of adjustment requires an amortization interval of 2000 s. Thus, an adjustment as much as 600 s will take almost 14 days to complete. This option can be used with the &lt;tt&gt;-g&lt;/tt&gt; and &lt;tt&gt;-q&lt;/tt&gt; options. See the &lt;tt&gt;tinker&lt;/tt&gt; command for other options. Note: The kernel time discipline is disabled with this option.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;--pccfreq _frequency_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Substitute processor cycle counter for QueryPerformanceCounter unconditionally using the given frequency (in Hz). &lt;tt&gt;&amp;ndash;pccfreq&lt;/tt&gt; can be used on systems which do not use the PCC to implement QueryPerformanceCounter and have a fixed PCC frequency. The frequency specified must be accurate within 0.5 percent. &lt;tt&gt;&amp;ndash;usepcc&lt;/tt&gt; is equivalent on many systems and should be tried first, as it does not require determining the frequency of the processor cycle counter. For x86-compatible processors, the PCC is also referred to as &lt;tt&gt;RDTSC&lt;/tt&gt;, which is the assembly-language instruction to retrieve the current value.  (Windows only)&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;--usepcc&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Substitute processor cycle counter for QueryPerformanceCounter if they appear equivalent. This option should be used only if the PCC frequency is fixed. Power-saving functionality on many laptops varies the PCC frequency. (Windows only)&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;the-configuration-file&#34;&gt;The Configuration File&lt;/h4&gt;
&lt;p&gt;Ordinarily, &lt;tt&gt;ntpd&lt;/tt&gt; reads the &lt;tt&gt;ntp.conf&lt;/tt&gt; configuration file at startup in order to determine the synchronization sources and operating modes. It is also possible to specify a working, although limited, configuration entirely on the command line, obviating the need for a configuration file. This may be particularly useful when the local host is to be configured as a broadcast client, with servers determined by listening to broadcasts at run time.&lt;/p&gt;
&lt;p&gt;Usually, the configuration file is installed as&lt;tt&gt;/etc/ntp.conf&lt;/tt&gt;, but could be installed elsewhere (see the &lt;tt&gt;-c &lt;em&gt;conffile&lt;/em&gt;&lt;/tt&gt; command line option). The file format is similar to other Unix configuration files - comments begin with a &lt;tt&gt;#&lt;/tt&gt; character and extend to the end of the line; blank lines are ignored.&lt;/p&gt;
&lt;p&gt;Configuration commands consist of an initial command keyword followed by a list of option keywords separated by whitespace. Commands may not be continued over multiple lines. Options may be host names, host addresses written in numeric, dotted-quad form, integers, floating point numbers (when specifying times in seconds) and text strings. Optional arguments are delimited by &lt;tt&gt;[ ]&lt;/tt&gt; in the options pages, while alternatives are separated by &lt;tt&gt;|&lt;/tt&gt;. The notation &lt;tt&gt;[ &amp;hellip; ]&lt;/tt&gt; means an optional, indefinite repetition of the last item before the &lt;tt&gt;[ &amp;hellip; ]&lt;/tt&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;configuration file&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/etc/ntp.conf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;conffile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frequency file&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;driftfile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leapseconds file&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;leapfile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;process ID file&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;`-p&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pidfile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log file&lt;/td&gt;
&lt;td&gt;system log&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;logfile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;include file&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;&lt;code&gt;includefile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;statistics path&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/var/NTP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;statsdir&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;keys path&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/usr/local/etc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;&lt;code&gt;keysdir&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpd System Log Messages</title>
      <link>/archives/4.2.8-series/msyslog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/msyslog/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/flatheads.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The log can be shrill at times.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:12 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/msyslog/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/msyslog/#protocol-module&#34;&gt;Protocol Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/msyslog/#clock-discipline-module&#34;&gt;Clock Discipline Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/msyslog/#cryptographic-module&#34;&gt;Cryptographic Module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;You have come here because you found a cryptic message in the system log. This page by no means lists all messages that might be found, since new ones come and old ones go. Generally, however, the most common ones will be found here. They are listed by program module and log severity code in bold: &lt;tt&gt;&lt;strong&gt;LOG_ERR&lt;/strong&gt;&lt;/tt&gt;, &lt;strong&gt;&lt;tt&gt;LOG_NOTICE&lt;/tt&gt;&lt;/strong&gt; and &lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Most of the time &lt;strong&gt;&lt;tt&gt;LOG_ERR&lt;/tt&gt;&lt;/strong&gt; messages are fatal, but often &lt;tt&gt;ntpd&lt;/tt&gt; limps onward in the hopes of discovering more errors. The &lt;tt&gt;&lt;strong&gt;LOG_NOTICE&lt;/strong&gt;&lt;/tt&gt; messages usually mean the time has changed or some other condition that probably should be noticed. The &lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt; messages usually say something about the system operations, but do not affect the time.&lt;/p&gt;
&lt;p&gt;In the following a &amp;lsquo;?&amp;rsquo; character stands for text in the message. The meaning should be clear from context.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;protocol-module&#34;&gt;Protocol Module&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_ERR&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;buffer overflow ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Fatal error. An input packet is too long for processing.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_NOTICE&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;no reply; clock not set&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;In &lt;tt&gt;ntpdate&lt;/tt&gt; mode no servers have been found. The server(s) and/or network may be down. Standard debugging procedures apply.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;proto_config: illegal item ?, value ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Program error. Bugs can be reported &lt;a href=&#34;/archives/4.2.8-series/bugs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;receive: autokey requires two-way communication&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Configuration error on the &lt;tt&gt;broadcastclient&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;receive: server _server_ maaximum rate exceeded&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A kiss-o&amp;rsquo;death packet has been received. The transmit rate is automatically reduced.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pps sync enabled&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The PPS signal has been detected and enabled.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;transmit: encryption key ? not found&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The encryption key is not defined or not trusted.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;precision = ? usec&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This reports the precision measured for this machine.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;using 10ms tick adjustments&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Gotcha for some machines with dirty rotten clock hardware.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;no servers reachable&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The system clock is running on internal batteries. The server(s) and/or network may be down.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clock-discipline-module&#34;&gt;Clock Discipline Module&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_ERR&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time correction of ? seconds exceeds sanity limit (?); set clock manually to the correct UTC time&lt;/tt&gt;.&lt;/dt&gt;
&lt;p&gt;Fatal error. Better do what it says, then restart the daemon. Be advised NTP and Unix know nothing about local time zones. The clock must be set to Coordinated Universal Time (UTC). Believe it; by international agreement abbreviations are in French and descriptions are in English.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;sigaction() fails to save SIGSYS trap: ? &lt;/tt&gt;&lt;/dt&gt; 
&lt;dt&gt;&lt;tt&gt;sigaction() fails to restore SIGSYS trap: ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Program error. Bugs can be reported &lt;a href=&#34;/archives/4.2.8-series/bugs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_NOTICE&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;frequency error ? exceeds tolerance 500 PPM&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The hardware clock frequency error exceeds the rate the kernel can correct. This could be a hardware or a kernel problem.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time slew ? s&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The time error exceeds the step threshold and is being slewed to the correct time. You may have to wait a very long time.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time reset ? s&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The time error exceeds the step threshold and has been reset to the correct time. Computer scientists don&amp;rsquo;t like this, but they can set the &lt;tt&gt;ntpd -x&lt;/tt&gt; option and wait forever.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;kernel time sync disabled ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The kernel reports an error. See the codes in the &lt;tt&gt;timex.h&lt;/tt&gt; file.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pps sync disabled&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The PPS signal has died, probably due to a dead radio, broken wire or loose connector.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;kernel time sync status ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;For information only. See the codes in the &lt;tt&gt;timex.h&lt;/tt&gt; file.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;cryptographic-module&#34;&gt;Cryptographic Module&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_ERR&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_sign ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_cert ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_encrypt ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_gq ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_iff ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_key ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_mv ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;make_keys ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Usually fatal errors. These messages display error codes returned from the OpenSSL library. See the OpenSSL documentation for explanation.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: certificate ? is trusted, but not self signed.&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: certificate ? not for this host&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: certificate file ? not found or corrupt&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: host key file ? not found or corrupt&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: host key is not RSA key type&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: random seed file ? not found&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;rypto_setup: random seed file not specified&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Fatal errors. These messages show problems during the initialization procedure.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse: expired ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse: invalid issuer ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse: invalid signature ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse: invalid subject ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;There is a problem with a certificate. Operation cannot proceed until the problem is fixed. If the certificate is local, it can be regenerated using the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program. If it is held somewhere else, it must be fixed by the holder.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_?: defective key&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_?: invalid filestamp&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_?: missing challenge&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_?: scheme unavailable&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;There is a problem with the identity scheme. Operation cannot proceed until the problem is fixed. Usually errors are due to misconfiguration or an orphan association. If the latter, &lt;tt&gt;ntpd&lt;/tt&gt; will usually time out and recover by itself.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;crypto_cert: wrong PEM type ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The certificate does not have MIME type &lt;tt&gt;CERTIFICATE&lt;/tt&gt;. You are probably using the wrong type from OpenSSL or an external certificate authority.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;crypto_ident: no compatible identity scheme found&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Configuration error. The server and client identity schemes are incompatible.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;crypto_tai: kernel TAI update failed&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The kernel does not support this function. You may need a new kernel or patch.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;crypto_tai: leapseconds file ? error ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The leapseconds file is corrupt. Obtain the latest file from &lt;tt&gt;time.nist.gov&lt;/tt&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpdate - set the date and time via NTP</title>
      <link>/archives/4.2.8-series/ntpdate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/ntpdate/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/rabbit.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I told you it was eyeball and wristwatch.&lt;/p&gt;
&lt;p&gt;Last update: 21-Jul-2018 04:09 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Disclaimer: This program has known bugs and deficiencies and nobody has volunteered to fix them in a long time. The good news is the functionality originally intended for this program is available in the &lt;tt&gt;ntpd&lt;/tt&gt; and &lt;tt&gt;sntp&lt;/tt&gt; programs. See the &lt;a href=&#34;http://support.ntp.org/Dev/DeprecatingNtpdate&#34;&gt;Deprecating &lt;tt&gt;ntpdate&lt;/tt&gt; topic&lt;/a&gt; in the NTP Support wiki for a thorough discussion and analysis of the issues. See the &lt;tt&gt;-q&lt;/tt&gt; command line option in the &lt;a href=&#34;/archives/4.2.8-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; - Network Time Protocol (NTP) daemon&lt;/a&gt; page and/or the &lt;a href=&#34;/archives/4.2.8-series/sntp&#34;&gt;&lt;tt&gt;sntp&lt;/tt&gt; - Simple Network Time Protocol (SNTP) Client&lt;/a&gt; page. After a suitable period of mourning, the &lt;tt&gt;ntpdate&lt;/tt&gt; program will be retired from this distribution.&lt;/p&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdate/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdate/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdate/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdate/#diagnostics&#34;&gt;Diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdate/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdate/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdate [ -46bBdqsuv ] [ -a &lt;em&gt;key&lt;/em&gt; ] [ -e &lt;em&gt;authdelay&lt;/em&gt; ] [ -k &lt;em&gt;keyfile&lt;/em&gt; ] [ -o &lt;em&gt;version&lt;/em&gt; ] [ -p &lt;em&gt;samples&lt;/em&gt; ] [ -t &lt;em&gt;timeout&lt;/em&gt; ] &lt;em&gt;server&lt;/em&gt; [ &amp;hellip; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdate&lt;/tt&gt; sets the local date and time by polling the Network Time Protocol (NTP) server(s) given as the &lt;em&gt;server&lt;/em&gt; arguments to determine the correct time. It must be run as root on the local host. A number of samples are obtained from each of the servers specified and a subset of the NTP clock filter and selection algorithms are applied to select the best of these. Note that the accuracy and reliability of &lt;tt&gt;ntpdate&lt;/tt&gt; depends on the number of servers, the number of polls each time it is run and the interval between runs.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntpdate&lt;/tt&gt; can be run manually as necessary to set the host clock, or it can be run from the host startup script to set the clock at boot time. This is useful in some cases to set the clock initially before starting the NTP daemon &lt;tt&gt;ntpd&lt;/tt&gt;. It is also possible to run &lt;tt&gt;ntpdate&lt;/tt&gt; from a &lt;tt&gt;cron&lt;/tt&gt; script. However, it is important to note that &lt;tt&gt;ntpdate&lt;/tt&gt; with contrived &lt;tt&gt;cron&lt;/tt&gt; scripts is no substitute for the NTP daemon, which uses sophisticated algorithms to maximize accuracy and reliability while minimizing resource use. Finally, since &lt;tt&gt;ntpdate&lt;/tt&gt; does not discipline the host clock frequency as does &lt;tt&gt;ntpd&lt;/tt&gt;, the accuracy using &lt;tt&gt;ntpdate&lt;/tt&gt; is limited.&lt;/p&gt;
&lt;p&gt;Time adjustments are made by &lt;tt&gt;ntpdate&lt;/tt&gt; in one of two ways. If &lt;tt&gt;ntpdate&lt;/tt&gt; determines the clock is in error more than 0.5 second it will simply step the time by calling the system &lt;tt&gt;settimeofday()&lt;/tt&gt; routine. If the error is less than 0.5 seconds, it will slew the time by calling the system &lt;tt&gt;adjtime()&lt;/tt&gt; routine. The latter technique is less disruptive and more accurate when the error is small, and works quite well when &lt;tt&gt;ntpdate&lt;/tt&gt; is run by &lt;tt&gt;cron&lt;/tt&gt; every hour or two.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntpdate&lt;/tt&gt; will, if the &lt;tt&gt;-u&lt;/tt&gt; flag was not specified, decline to set the date if an NTP server daemon (e.g., &lt;tt&gt;ntpd&lt;/tt&gt;) is running on the same host. When running &lt;tt&gt;ntpdate&lt;/tt&gt; on a regular basis from &lt;tt&gt;cron&lt;/tt&gt; as an alternative to running a daemon, doing so once every hour or two will result in precise enough timekeeping to avoid stepping the clock.&lt;/p&gt;
&lt;p&gt;Note that in contexts where a host name is expected, a &lt;tt&gt;-4&lt;/tt&gt; qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a &lt;tt&gt;-6&lt;/tt&gt; qualifier forces DNS resolution to the IPv6 namespace.&lt;/p&gt;
&lt;p&gt;If NetInfo support is compiled into &lt;tt&gt;ntpdate&lt;/tt&gt;, then the &lt;tt&gt;server&lt;/tt&gt; argument is optional if &lt;tt&gt;ntpdate&lt;/tt&gt; can find a time server in the NetInfo configuration for &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv4 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-6&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv6 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-a _key_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable the authentication function and specify the key identifier to be used for authentication as the argument &lt;em&gt;key&lt;/em&gt;. The keys and key identifiers must match in both the client and server key files. The default is to disable the authentication function.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-B&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force the time to always be slewed using the adjtime() system call, even if the measured offset is greater than +-500 ms. The default is to step the time using settimeofday() if the offset is greater than +-500 ms. Note that, if the offset is much greater than +-500 ms in this case, that it can take a long time (hours) to slew the clock to the correct value. During this time. the host should not be used to synchronize clients.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-b&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force the time to be stepped using the settimeofday() system call, rather than slewed (default) using the adjtime() system call. This option should be used when called from a startup file at boot time.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable the debugging mode, in which &lt;tt&gt;ntpdate&lt;/tt&gt; will go through all the steps, but not adjust the local clock and using an unprivileged port. Information useful for general debugging will also be printed.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-e _authdelay_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the processing delay to perform an authentication function as the value &lt;em&gt;authdelay&lt;/em&gt;, in seconds and fraction (see &lt;tt&gt;ntpd&lt;/tt&gt; for details). This number is usually small enough to be negligible for most purposes, though specifying a value may improve timekeeping on very slow CPU&amp;rsquo;s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-k _keyfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the path for the authentication key file as the string &lt;em&gt;keyfile&lt;/em&gt;. The default is &lt;tt&gt;/etc/ntp.keys&lt;/tt&gt;. This file should be in the format described in &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-o _version_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the NTP version for outgoing packets as the integer &lt;em&gt;version&lt;/em&gt;, which can be 1, 2, 3 or 4. The default is 4. This allows &lt;tt&gt;ntpdate&lt;/tt&gt; to be used with older NTP versions.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p _samples_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the number of samples to be acquired from each server as the integer &lt;em&gt;samples&lt;/em&gt;, with values from 1 to 8 inclusive. The default is 4.&lt;/p&gt;
&lt;dt&gt;_&lt;tt&gt;-q&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;Query only - don&amp;rsquo;t set the clock.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Divert logging output from the standard output (default) to the system &lt;tt&gt;syslog&lt;/tt&gt; facility. This is designed primarily for convenience of &lt;tt&gt;cron&lt;/tt&gt; scripts.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-t _timeout_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the maximum time waiting for a server response as the value &lt;em&gt;timeout&lt;/em&gt;, in seconds and fraction. The value is rounded to a multiple of 0.2 seconds. The default is 2 seconds, a value suitable for polling across a LAN.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-u&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Direct &lt;tt&gt;ntpdate&lt;/tt&gt; to use an unprivileged port for outgoing packets. This is most useful when behind a firewall that blocks incoming traffic to privileged ports, and you want to synchronize with hosts beyond the firewall. Note that the &lt;tt&gt;-d&lt;/tt&gt; option always uses unprivileged ports.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-_v_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Be verbose. This option will cause &lt;tt&gt;ntpdate&lt;/tt&gt;&amp;rsquo;s version identification string to be logged.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;diagnostics&#34;&gt;Diagnostics&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdate&lt;/tt&gt;&amp;rsquo;s exit status is zero if it finds a server and updates the clock, and nonzero otherwise.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;/etc/ntp.keys&lt;/tt&gt; - encryption keys used by &lt;tt&gt;ntpdate&lt;/tt&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;The slew adjustment is actually 50% larger than the measured offset, since this (it is argued) will tend to keep a badly drifting clock more accurate. This is probably not a good idea and may cause a troubling hunt for some values of the kernel variables &lt;tt&gt;tick&lt;/tt&gt; and &lt;tt&gt;tickadj&lt;/tt&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpdc - special NTP query program</title>
      <link>/archives/4.2.8-series/ntpdc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/ntpdc/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice31.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This program is a big, deprecated puppy.&lt;/p&gt;
&lt;p&gt;Last update: 31-Jan-2014 06:54 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdc/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdc/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdc/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdc/#interactive-commands&#34;&gt;Interactive Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdc/#control-message-commands&#34;&gt;Control Message Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdc/#runtime-configuration-requests&#34;&gt;Runtime Configuration Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdc/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdc [ -46dilnps ] [ -c &lt;em&gt;command&lt;/em&gt; ] [ &lt;em&gt;host&lt;/em&gt; ] [ &amp;hellip; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;


    &lt;tt&gt;ntpdc&lt;/tt&gt; is deprecated - please use &lt;tt&gt;ntpq&lt;/tt&gt; now, as it uses a more sane interface and can provide all of the information that &lt;tt&gt;ntpdc&lt;/tt&gt; used to provide.

&lt;/div&gt;

&lt;p&gt;&lt;tt&gt;ntpdc&lt;/tt&gt; is used to query the &lt;tt&gt;ntpd&lt;/tt&gt; daemon about its current state and to request changes in that state. The program may be run either in interactive mode or controlled using command line arguments. Extensive state and statistics information is available through the &lt;tt&gt;ntpdc&lt;/tt&gt; interface. In addition, nearly all the configuration options which can be specified at startup using ntpd&amp;rsquo;s configuration file may also be specified at run time using &lt;tt&gt;ntpdc&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;If one or more request options are included on the command line when &lt;tt&gt;ntpdc&lt;/tt&gt; is executed, each of the requests will be sent to the NTP servers running on each of the hosts given as command line arguments, or on localhost by default. If no request options are given, &lt;tt&gt;ntpdc&lt;/tt&gt; will attempt to read commands from the standard input and execute these on the NTP server running on the first host given on the command line, again defaulting to localhost when no other host is specified. &lt;tt&gt;ntpdc&lt;/tt&gt; will prompt for commands if the standard input is a terminal device.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntpdc&lt;/tt&gt; uses NTP mode 7 packets to communicate with the NTP server, and hence can be used to query any compatible server on the network which permits it. Note that since NTP is a UDP protocol this communication will be somewhat unreliable, especially over large distances in terms of network topology. &lt;tt&gt;ntpdc&lt;/tt&gt; makes no attempt to retransmit requests, and will time requests out if the remote host is not heard from within a suitable timeout time.&lt;/p&gt;
&lt;p&gt;The operation of &lt;tt&gt;ntpdc&lt;/tt&gt; are specific to the particular implementation of the &lt;tt&gt;ntpd&lt;/tt&gt; daemon and can be expected to work only with this and maybe some previous versions of the daemon. Requests from a remote &lt;tt&gt;ntpdc&lt;/tt&gt; program which affect the state of the local server must be authenticated, which requires both the remote program and local server share a common key and key identifier.&lt;/p&gt;
&lt;p&gt;Note that in contexts where a host name is expected, a &lt;tt&gt;-4&lt;/tt&gt; qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a &lt;tt&gt;-6&lt;/tt&gt; qualifier forces DNS resolution to the IPv6 namespace.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;
&lt;p&gt;Specifying a command line option other than &lt;tt&gt;-i&lt;/tt&gt; or &lt;tt&gt;-n&lt;/tt&gt; will cause the specified query (queries) to be sent to the indicated host(s) immediately. Otherwise, &lt;tt&gt;ntpdc&lt;/tt&gt; will attempt to read interactive format commands from the standard input.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;tt&gt;-4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv4 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-6&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv6 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-c _command_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The following argument is interpreted as an interactive format command and is added to the list of commands to be executed on the specified host(s). Multiple -c options may be given.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Turn on debugging mode.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-i&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force &lt;tt&gt;ntpdc&lt;/tt&gt; to operate in interactive mode. Prompts will be written to the standard output and commands read from the standard input.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-l&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain a list of peers which are known to the server(s). This switch is equivalent to &lt;tt&gt;-c listpeers&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-n&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Output all host addresses in dotted-quad numeric format rather than converting to the canonical host names.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print a list of the peers known to the server as well as a summary of their state. This is equivalent to &lt;tt&gt;-c peers&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print a list of the peers known to the server as well as a summary of their state, but in a slightly different format than the -p switch. This is equivalent to &lt;tt&gt;-c dmpeers&lt;/tt&gt;.&lt;/p&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;h4 id=&#34;interactive-commands&#34;&gt;Interactive Commands&lt;/h4&gt;
&lt;p&gt;Interactive format commands consist of a keyword followed by zero to four arguments. Only enough characters of the full keyword to uniquely identify the command need be typed. The output of a command is normally sent to the standard output, but optionally the output of individual commands may be sent to a file by appending a &lt;tt&gt;&amp;lt;&lt;/tt&gt;, followed by a file name, to the command line.&lt;/p&gt;
&lt;p&gt;A number of interactive format commands are executed entirely within the &lt;tt&gt;ntpdc&lt;/tt&gt; program itself and do not result in NTP mode 7 requests being sent to a server. These are described following.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;tt&gt;? [ _command_keyword_ ]&lt;/tt&gt;  
&lt;tt&gt;help [ _command_keyword_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A &lt;tt&gt;?&lt;/tt&gt; by itself will print a list of all the command keywords known to this incarnation of &lt;tt&gt;ntpq&lt;/tt&gt;. A &lt;tt&gt;?&lt;/tt&gt; followed by a command keyword will print function and usage information about the command. This command is probably a better source of information about &lt;tt&gt;ntpq&lt;/tt&gt; than this manual page.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;delay _milliseconds_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a time interval to be added to timestamps included in requests which require authentication. This is used to enable (unreliable) server reconfiguration over long delay network paths or between machines whose clocks are unsynchronized. Actually the server does not now require timestamps in authenticated requests, so this command may be obsolete.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;host _hostname_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the host to which future queries will be sent. Hostname may be either a host name or a numeric address.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;hostnames [ yes | no ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;If &lt;tt&gt;yes&lt;/tt&gt; is specified, host names are printed in information displays. If &lt;tt&gt;no&lt;/tt&gt; is specified, numeric addresses are printed instead. The default is &lt;tt&gt;yes&lt;/tt&gt;, unless modified using the command line &lt;tt&gt;-n&lt;/tt&gt; switch.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;keyid _keyid_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command allows the specification of a key number to be used to authenticate configuration requests from ntpdc to the host(s). This must correspond to a key number which the host/server has been configured to use for this purpose (server options: &lt;tt&gt;trustedkey&lt;/tt&gt;, and &lt;tt&gt;requestkey&lt;/tt&gt;). If authentication is not enabled on the host(s) for ntpdc commands, the command &lt;tt&gt;&amp;ldquo;keyid 0&amp;rdquo;&lt;/tt&gt; should be given; otherwise the &lt;em&gt;keyid&lt;/em&gt; of the next subsequent &lt;tt&gt;addpeer/addserver/broadcast&lt;/tt&gt; command will be used.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;quit&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Exit &lt;tt&gt;ntpdc&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;passwd&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command prompts you to type in a password (which will not be echoed) which will be used to authenticate configuration requests. The password must correspond to the key configured for use by the NTP server for this purpose if such requests are to be successful.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;timeout _milliseconds_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a timeout period for responses to server queries. The default is about 8000 milliseconds. Note that since &lt;tt&gt;ntpdc&lt;/tt&gt; retries each query once after a timeout, the total waiting time for a timeout will be twice the timeout value set.&lt;/p&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;h4 id=&#34;control-message-commands&#34;&gt;Control Message Commands&lt;/h4&gt;
&lt;p&gt;Query commands result in NTP mode 7 packets containing requests for information being sent to the server. These are read-only commands in that they make no modification of the server configuration state.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;tt&gt;listpeers&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtains and prints a brief list of the peers for which the server is maintaining state. These should include all configured peer associations as well as those peers whose stratum is such that they are considered by the server to be possible future synchronization candidates.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;peers&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtains a list of peers for which the server is maintaining state, along with a summary of that state. Summary information includes the address of the remote peer, the local interface address (0.0.0.0 if a local address has yet to be determined), the stratum of the remote peer (a stratum of 16 indicates the remote peer is unsynchronized), the polling interval, in seconds, the reachability register, in octal, and the current estimated delay, offset and dispersion of the peer, all in seconds.&lt;/p&gt;
&lt;p&gt;The character in the left margin indicates the mode this peer entry is operating in. A &lt;tt&gt;+&lt;/tt&gt; denotes symmetric active, a &lt;tt&gt;-&lt;/tt&gt; indicates symmetric passive, a &lt;tt&gt;=&lt;/tt&gt; means the remote server is being polled in client mode, a &lt;tt&gt;^&lt;/tt&gt; indicates that the server is broadcasting to this address, a &lt;tt&gt;~&lt;/tt&gt; denotes that the remote peer is sending broadcasts and a &lt;tt&gt;*&lt;/tt&gt; marks the peer the server is currently synchronizing to.&lt;/p&gt;
&lt;p&gt;The contents of the host field may be one of four forms. It may be a host name, an IP address, a reference clock implementation name with its parameter or &lt;tt&gt;REFCLK(&lt;em&gt;implementation number&lt;/em&gt;, &lt;em&gt;parameter&lt;/em&gt;)&lt;/tt&gt;. On &lt;tt&gt;hostnames no&lt;/tt&gt; only IP-addresses will be displayed.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;dmpeers&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A slightly different peer summary list. Identical to the output of the &lt;tt&gt;peers&lt;/tt&gt; command, except for the character in the leftmost column. Characters only appear beside peers which were included in the final stage of the clock selection algorithm. A &lt;tt&gt;.&lt;/tt&gt; indicates that this peer was cast off in the falseticker detection, while a &lt;tt&gt;+&lt;/tt&gt; indicates that the peer made it through. A &lt;tt&gt;*&lt;/tt&gt; denotes the peer the server is currently synchronizing with.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;showpeer _peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Shows a detailed display of the current peer variables for one or more peers. Most of these values are described in the NTP Version 2 specification.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pstats _peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Show per-peer statistic counters associated with the specified peer(s).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;clockstat _clock_peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain and print information concerning a peer clock. The values obtained provide information on the setting of fudge factors and other clock performance information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;kerninfo&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain and print kernel phase-lock loop operating parameters. This information is available only if the kernel has been specially modified for a precision timekeeping function.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;loopinfo [ oneline | multiline ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print the values of selected loop filter variables. The loop filter is the part of NTP which deals with adjusting the local system clock. The &lt;tt&gt;offset&lt;/tt&gt; is the last offset given to the loop filter by the packet processing code. The &lt;tt&gt;frequency&lt;/tt&gt; is the frequency error of the local clock in parts-per-million (ppm). The &lt;tt&gt;time_const&lt;/tt&gt; controls the stiffness of the phase-lock loop and thus the speed at which it can adapt to oscillator drift. The &lt;tt&gt;watchdog timer&lt;/tt&gt; value is the number of seconds which have elapsed since the last sample offset was given to the loop filter. The &lt;tt&gt;oneline&lt;/tt&gt; and &lt;tt&gt;multiline&lt;/tt&gt; options specify the format in which this information is to be printed, with &lt;tt&gt;multiline&lt;/tt&gt; as the default.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;sysinfo&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print a variety of system state variables, i.e., state related to the local server. All except the last four lines are described in the NTP Version 3 specification, RFC-1305.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;system flags&lt;/tt&gt; show various system flags, some of which can be set and cleared by the &lt;tt&gt;enable&lt;/tt&gt; and &lt;tt&gt;disable&lt;/tt&gt; configuration commands, respectively. These are the &lt;tt&gt;auth&lt;/tt&gt;, &lt;tt&gt;bclient&lt;/tt&gt;, &lt;tt&gt;monitor&lt;/tt&gt;, &lt;tt&gt;pll&lt;/tt&gt;, &lt;tt&gt;pps&lt;/tt&gt; and &lt;tt&gt;stats&lt;/tt&gt; flags. See the &lt;tt&gt;ntpd&lt;/tt&gt; documentation for the meaning of these flags. There are two additional flags which are read only, the &lt;tt&gt;kernel_pll&lt;/tt&gt; and &lt;tt&gt;kernel_pps&lt;/tt&gt;. These flags indicate the synchronization status when the precision time kernel modifications are in use. The &lt;tt&gt;kernel_pll&lt;/tt&gt; indicates that the local clock is being disciplined by the kernel, while the kernel_pps indicates the kernel discipline is provided by the PPS signal.&lt;/p&gt;
&lt;p&gt;Note that some directives, like &lt;tt&gt;enable pps&lt;/tt&gt;, are only supported on certain versions of &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;stability&lt;/tt&gt; is the residual frequency error remaining after the system frequency correction is applied and is intended for maintenance and debugging. In most architectures, this value will initially decrease from as high as 500 ppm to a nominal value in the range .01 to 0.1 ppm. If it remains high for some time after starting the daemon, something may be wrong with the local clock, or the value of the kernel variable &lt;tt&gt;tick&lt;/tt&gt; may be incorrect.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;broadcastdelay&lt;/tt&gt; shows the default broadcast delay, as set by the &lt;tt&gt;broadcastdelay&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;authdelay&lt;/tt&gt; shows the default authentication delay, as set by the &lt;tt&gt;authdelay&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;sysstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print statistics counters maintained in the protocol module.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;memstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print statistics counters related to memory allocation code.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;iostats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print statistics counters maintained in the input-output module.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;timerstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print statistics counters maintained in the timer/event queue support code.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;reslist&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain and print the server&amp;rsquo;s restriction list. This list is (usually) printed in sorted order and may help to understand how the restrictions are applied.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;ifstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;List interface statistics for interfaces used by ntpd for network communication.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;ifreload&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force rescan of current system interfaces. Outputs interface statistics for interfaces that could possibly change. Marks unchanged interfaces with &lt;code&gt;.&lt;/code&gt;, added interfaces with &lt;code&gt;+&lt;/code&gt; and deleted interfaces with &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;monlist [ _version_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain and print traffic counts collected and maintained by the monitor facility. The version number should not normally need to be specified. At most, 600 entries are displayed by &lt;tt&gt;monlist&lt;/tt&gt;. To display the entire MRU list, use the &lt;tt&gt;ntpq&lt;/tt&gt; program&amp;rsquo;s &lt;a href=&#34;/archives/4.2.8-series/ntpq/#mrulist&#34;&gt;&lt;tt&gt;mrulist&lt;/tt&gt;&lt;/a&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;clkbug _clock_peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain debugging information for a reference clock driver. This information is provided only by some clock drivers and is mostly undecodable without a copy of the driver source in hand.&lt;/p&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;h4 id=&#34;runtime-configuration-requests&#34;&gt;Runtime Configuration Requests&lt;/h4&gt;
&lt;p&gt;All requests which cause state changes in the server are authenticated by the server using a configured NTP key (the facility can also be disabled by the server by not configuring a key). The key number and the corresponding key must also be made known to &lt;tt&gt;ntpdc&lt;/tt&gt;. This can be done using the keyid and passwd commands, the latter of which will prompt at the terminal for a password to use as the encryption key. You will also be prompted automatically for both the key number and password the first time a command which would result in an authenticated request to the server is given. Authentication not only provides verification that the requester has permission to make such changes, but also gives an extra degree of protection again transmission errors.&lt;/p&gt;
&lt;p&gt;Authenticated requests always include a timestamp in the packet data, which is included in the computation of the authentication code. This timestamp is compared by the server to its receive time stamp. If they differ by more than a small amount the request is rejected. This is done for two reasons. First, it makes simple replay attacks on the server, by someone who might be able to overhear traffic on your LAN, much more difficult. Second, it makes it more difficult to request configuration changes to your server from topologically remote hosts. While the reconfiguration facility will work well with a server on the local host, and may work adequately between time-synchronized hosts on the same LAN, it will work very poorly for more distant hosts. As such, if reasonable passwords are chosen, care is taken in the distribution and protection of keys and appropriate source address restrictions are applied, the run time reconfiguration facility should provide an adequate level of security.&lt;/p&gt;
&lt;p&gt;The following commands all make authenticated requests.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;tt&gt;addpeer _peer_address_ [ _keyid_ ] [ _version_ ] [ &lt;tt&gt;minpoll# | prefer | minpoll _N_ | &lt;tt&gt;maxpoll&lt;/tt&gt; _N_ [...] ]&lt;/tt&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;tt&gt;addpeer _peer_address_ [ &lt;tt&gt;prefer | minpoll _N_ | &lt;tt&gt;maxpoll&lt;/tt&gt; _N_ | &lt;tt&gt;keyid&lt;/tt&gt; _N_ | &lt;tt&gt;version&lt;/tt&gt; _N_ [...] ]&lt;/tt&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Add a configured peer association at the given address and operating in symmetric active mode. Note that an existing association with the same peer may be deleted when this command is executed, or may simply be converted to conform to the new configuration, as appropriate. If the &lt;tt&gt;keyid&lt;/tt&gt; is nonzero, all outgoing packets to the remote server will have an authentication field attached encrypted with this key. If the value is 0 (or not given) no authentication will be done. If ntpdc&amp;rsquo;s key number has not yet been set (&lt;em&gt;e.g.,&lt;/em&gt; by the keyid command), it will be set to this value. The &lt;tt&gt;version#&lt;/tt&gt; can be 1 through 4 and defaults to 3. The remaining options are either a numeric value for &lt;tt&gt;minpoll&lt;/tt&gt; or literals &lt;tt&gt;prefer&lt;/tt&gt;, &lt;tt&gt;burst&lt;/tt&gt;, &lt;tt&gt;minpoll&lt;/tt&gt; &lt;em&gt;N&lt;/em&gt;, &lt;tt&gt;keyid&lt;/tt&gt; &lt;em&gt;N&lt;/em&gt;, &lt;tt&gt;version&lt;/tt&gt; &lt;em&gt;N&lt;/em&gt;, or &lt;tt&gt;maxpoll&lt;/tt&gt; &lt;em&gt;N&lt;/em&gt; (where &lt;em&gt;N&lt;/em&gt; is a numeric value), and have the action as specified in the &lt;tt&gt;peer&lt;/tt&gt; configuration file command of ntpd. See the &lt;a href=&#34;/archives/4.2.8-series/confopt&#34;&gt;Server Options&lt;/a&gt; page for further information. Each flag (or its absence) replaces the previous setting. The &lt;tt&gt;prefer&lt;/tt&gt; keyword indicates a preferred peer (and thus will be used primarily for clock synchronisation if possible). The preferred peer also determines the validity of the PPS signal - if the preferred peer is suitable for synchronisation so is the PPS signal. The &lt;tt&gt;dynamic&lt;/tt&gt; keyword allows association configuration even when no suitable network interface is found at configuration time. The dynamic interface update mechanism may complete the configuration when new interfaces appear (e.g. WLAN/PPP interfaces) at a later time and thus render the association operable.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;addserver _peer_address_ [ _address_ [ _keyid_ ] [ _version_ ] [ minpoll | prefer | iburst | burst | minpoll _N_ | maxpoll _N_ [...] ] prefer | iburst | burst | minpoll _N_ | maxpoll _N_ | keyid _N_ | version _N_ [...] ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Identical to the addpeer command, except that the operating mode is client.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;broadcast _peer_address_ [ _keyid_ ] [ _version_ ] [ _prefer_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Identical to the addpeer command, except that the operating mode is broadcast. In this case a valid non-zero key identifier and key are required. The &lt;tt&gt;peer_address&lt;/tt&gt; parameter can be the broadcast address of the local network or a multicast group address assigned to NTP. If a multicast address, a multicast-capable kernel is required.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;unconfig _peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command causes the configured bit to be removed from the specified peer(s). In many cases this will cause the peer association to be deleted. When appropriate, however, the association may persist in an unconfigured mode if the remote peer is willing to continue on in this fashion.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;fudge _peer_address_ [ _time1_ ] [ _time2_ ] [ _stratum_ ] [ _refid_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command provides a way to set certain data for a reference clock. See the source listing for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;enable [ auth | bclient | calibrate | kernel | monitor | ntp | pps | stats]&lt;/tt&gt;  
&lt;tt&gt;disable [ auth | bclient | calibrate | kernel | monitor | ntp | pps | stats]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;These commands operate in the same way as the &lt;tt&gt;enable&lt;/tt&gt; and &lt;tt&gt;disable&lt;/tt&gt; configuration file commands of &lt;tt&gt;ntpd&lt;/tt&gt;. See the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;restrict _address mask flag_ [ _flag_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command operates in the same way as the &lt;tt&gt;restrict&lt;/tt&gt; configuration file commands of &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;unrestrict _address mask flag_ [ _flag_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Unrestrict the matching entry from the restrict list.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;delrestrict _address mask [ ntpport ]_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Delete the matching entry from the restrict list.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;readkeys&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Causes the current set of authentication keys to be purged and a new set to be obtained by rereading the keys file (which must have been specified in the &lt;tt&gt;ntpd&lt;/tt&gt; configuration file). This allows encryption keys to be changed without restarting the server.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;trustedkey _keyid_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;tt&gt;untrustedkey _keyid_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;These commands operate in the same way as the &lt;tt&gt;trustedkey&lt;/tt&gt; and &lt;tt&gt;untrustedkey&lt;/tt&gt; configuration file commands of &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;authinfo&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Returns information concerning the authentication module, including known keys and counts of encryptions and decryptions which have been done.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;traps&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display the traps set in the server. See the source listing for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;addtrap [ _address_ [ _port_ ] [ _interface_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set a trap for asynchronous messages. See the source listing for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;clrtrap [ _address_ [ _port_ ] [ _interface_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Clear a trap for asynchronous messages. See the source listing for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;reset&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Clear the statistics counters in various modules of the server. See the source listing for further information.&lt;/p&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdc&lt;/tt&gt; is a crude hack. Much of the information it shows is deadly boring and could only be loved by its implementer. The program was designed so that new (and temporary) features were easy to hack in, at great expense to the program&amp;rsquo;s ease of use. Despite this, the program is occasionally useful.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpdsim - Network Time Protocol (NTP) Simulator</title>
      <link>/archives/4.2.8-series/ntpdsim_new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/ntpdsim_new/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/oz2.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;The Wizard of Oz&lt;/em&gt;, L. Frank Baum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All in a row.&lt;/p&gt;
&lt;p&gt;Last update: 31-Jan-2014 06:54 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdsim_new/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdsim_new/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdsim_new/#sample-configuration-file&#34;&gt;Sample Configuration File&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;The ntpdsim program is used to simulate and study the behavior of an NTP daemon that derives its time from a number of different simulated time sources (servers). Each simulated server can be configured to have a different time offset, frequency offset, propagation delay, processing delay, network jitter and oscillator wander.&lt;/p&gt;
&lt;p&gt;The ntpdsim program runs all the same selection, mitigation, and discipline algorithms as the actual ntpd daemon at the client. (It actually uses the same code). However, the input/output routines and servers are simulated. That is, instead of sending the client messages over the network to the actual servers, the client messages are intercepted by the ntpdsim program, which then generates the replies to those messages. The reply messages are carefully &amp;ldquo;inserted&amp;rdquo; into the input queue of the client at the right time according to the specified server properties (like propagation delay).&lt;/p&gt;
&lt;p&gt;Each simulated server runs according to a specified script that describes the server properties at a particular time. Each script consists of a series of consecutive acts. Each act runs for a particular duration and specifies the frequency offset, propagation delay, processing delay, network jitter and oscillator wander of the server for that duration. Once the duration of an act expires, the simulated server reconfigures itself according to the properties specified in the next act.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;configuration&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;The ntpdsim program is configured by providing a configuration file at startup. The crux of the simulator configuration is specified using a &lt;tt&gt;simulate&lt;/tt&gt; command, the syntax of which is given below. Note that all time quantities are in seconds and all frequency quantities are in parts per million (PPM):&lt;/p&gt;
&lt;p&gt;&amp;lt;&lt;em&gt;simulate_command&lt;/em&gt;&amp;gt; ::= &lt;tt&gt;simulate&lt;/tt&gt; { &amp;lt;&lt;em&gt;init_statement_list&lt;/em&gt;&amp;gt; &amp;lt;&lt;em&gt;server_list&lt;/em&gt;&amp;gt; }&lt;br&gt;
&amp;lt;&lt;em&gt;init_statement_list&lt;/em&gt;&amp;gt; ::= &amp;lt;init_statement_list&amp;gt; &amp;lt;init_statement&amp;gt; ; | &amp;lt;init_statement&amp;gt; ;&lt;br&gt;
&amp;lt;&lt;em&gt;init_statement&lt;/em&gt;&amp;gt; ::= &lt;tt&gt;beep_delay&lt;/tt&gt; = &lt;number&gt; | &lt;tt&gt;simulation_duration&lt;/tt&gt; = &lt;number&gt;&lt;br&gt;
&amp;lt;&lt;em&gt;server_list&lt;/em&gt;&amp;gt; ::= &amp;lt;&lt;em&gt;server_list&lt;/em&gt;&amp;gt; &lt;server&gt; | &lt;server&gt;&lt;br&gt;
&amp;lt;&lt;em&gt;server_list&lt;/em&gt;&amp;gt; ::= &lt;tt&gt;server&lt;/tt&gt; = &lt;address&gt; { &lt;tt&gt;server_offset&lt;/tt&gt; = &lt;number&gt; ; &amp;lt;act_list&amp;gt; }&lt;br&gt;
&amp;lt;&lt;em&gt;act_list&lt;/em&gt;&amp;gt; ::= &amp;lt;&lt;em&gt;act_list&lt;/em&gt;&amp;gt; &amp;lt;&lt;em&gt;act&lt;/em&gt;&amp;gt; | &amp;lt;&lt;em&gt;act&lt;/em&gt;&amp;gt;&lt;br&gt;
&amp;lt;&lt;em&gt;act&lt;/em&gt;&amp;gt; ::= &lt;tt&gt;duration&lt;/tt&gt; = &lt;number&gt; { &amp;lt;&lt;em&gt;act_stmt_list&lt;/em&gt;&amp;gt; }&lt;br&gt;
&amp;lt;&lt;em&gt;act_stmt_list&lt;/em&gt;&amp;gt; ::= &amp;lt;&lt;em&gt;act_stmt_list&lt;/em&gt;&amp;gt; &amp;lt;&lt;em&gt;act_stmt&lt;/em&gt;&amp;gt; ; | &amp;lt;&lt;em&gt;act_stmt&lt;/em&gt;&amp;gt; ;&lt;br&gt;
&amp;lt;&lt;em&gt;act_stmt&lt;/em&gt;&amp;gt; ::= &lt;tt&gt;freq_offset&lt;/tt&gt; = &lt;number&gt; | &lt;tt&gt;wander&lt;/tt&gt; = &lt;number&gt; | &lt;tt&gt;jitter&lt;/tt&gt; = &lt;number&gt; | &lt;tt&gt;prop_delay&lt;/tt&gt; = &lt;number&gt; | &lt;tt&gt;proc_delay&lt;/tt&gt; = &lt;number&gt;&lt;/p&gt;
&lt;p&gt;In addition to the &lt;tt&gt;simulate&lt;/tt&gt; command, other standard NTP configuration commands can be specified. These commands have the same meaning as in the ntpd configuration. Note that newlines are &lt;strong&gt;not&lt;/strong&gt; significant within the &lt;tt&gt;simulate&lt;/tt&gt; command even though they are used to mark the end of a normal NTP configuration command. While a newline is an &amp;ldquo;end of command&amp;rdquo; terminator for other configuration commands, in the &lt;tt&gt;simulate&lt;/tt&gt; stanza &lt;tt&gt;;&lt;/tt&gt; (the semicolon) is the &amp;ldquo;end of command&amp;rdquo; terminator.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;sample-configuration-file&#34;&gt;Sample Configuration File&lt;/h4&gt;
&lt;p&gt;A sample ntpdsim configuration file is given below. It specifies two simulated servers, each of which has two acts.&lt;/p&gt;
&lt;pre&gt;    # Client configuration 
    disable kernel
    server pogo
    driftfile ./ntp.drift
    statsdir ./ntpstats/
    filegen loopstats type day enable
    filegen peerstats type day enable

    # Simulation configuration
    simulate {
        simulation_duration = 86400;
        beep_delay = 3600;

        # Server 1
	server = louie.udel.edu {
	    server_offset = 0;
            duration = 50000 {
		freq_offset = 400;
		wander = 1.0;
		jitter = 0.001;
		prop_delay = 0.001;
		proc_delay = 0.001;
	    }
            duration = 6400 {
		freq_offset = 200;
		wander = 1.0;
		jitter = 0.001;
		prop_delay = 0.001;
		proc_delay = 0.001;
	    }
	}

        # Server 2
	server = baldwin.udel.edu {
	    server_offset = 0.02;
	    duration = 10000 {
		freq_offset = 400;
		wander = 1.0;
		jitter = 0.001;
		prop_delay = 0.5;
		proc_delay = 0.001;
	    }
	    duration = 60000 {
		freq_offset = 200;
		wander = 1.0;
		jitter = 0.05;
		prop_delay = 0.005;
		proc_delay = 0.001;
	    }
	}
 }
  &lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;mailto:skamboj@udel.edu&#34;&gt;Sachin Kamboj&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpdsim - Network Time Protocol (NTP) simulator</title>
      <link>/archives/4.2.8-series/ntpdsim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/ntpdsim/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/oz2.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;The Wizard of Oz&lt;/em&gt;, L. Frank Baum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All in a row.&lt;/p&gt;
&lt;p&gt;Last update: 11-Sep-2010 05:55 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdsim/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdsim/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdsim/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpdsim/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdsim [ -B &lt;em&gt;bdly&lt;/em&gt; ] [ -C &lt;em&gt;snse&lt;/em&gt; ] [ -O &lt;em&gt;clk_time&lt;/em&gt; ] [ -S &lt;em&gt;sim_time&lt;/em&gt; ] [ -T &lt;em&gt;ferr&lt;/em&gt; ] [ -W &lt;em&gt;fsne&lt;/em&gt; ] [ -Y&lt;/tt&gt; &lt;em&gt;&lt;tt&gt;ndly&lt;/tt&gt;&lt;/em&gt; &lt;tt&gt;] [ -X&lt;/tt&gt; &lt;em&gt;&lt;tt&gt;pdly&lt;/tt&gt;&lt;/em&gt; &lt;tt&gt;]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpdsim&lt;/tt&gt; program is an adaptation of the &lt;tt&gt;ntpd&lt;/tt&gt; operating system daemon. The program operates as a discrete time simulator using specified systematic and random driving sources. It includes all the mitigation and discipline algorithms of the actual daemon, but with the packet I/O and system clock algorithms driven by simulation. Most functions of the real &lt;tt&gt;ntpd&lt;/tt&gt; remain intact, including the monitoring, statistics recording, trace and host name resolution features. Further information on the simulator is on the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/ntpsim.html&#34;&gt;NTP Discrete Event Simulator&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The simulator is most useful to study NTP behavior in response to time and/or frequency transients under specific conditions of network jitter and oscillator wander. For this purpose the daemon can be driven by pseudorandom jitter and wander sample sequences characteristic of real networks and oscillators. The jitter generator produces samples from a Poisson distribution, while the wander generator produces samples from a Guassian distribution.&lt;/p&gt;
&lt;p&gt;The easiest way to use this program is to create a &lt;tt&gt;ntpstats&lt;/tt&gt; directory, configuration file &lt;tt&gt;ntp.conf&lt;/tt&gt; and frequency file &lt;tt&gt;ntp.drift&lt;/tt&gt; and test shell &lt;tt&gt;test.sh&lt;/tt&gt; in the base directory. The &lt;tt&gt;ntp.drift&lt;/tt&gt; file and &lt;tt&gt;ntpstats&lt;/tt&gt; directory can be empty to start. The &lt;tt&gt;test.sh&lt;/tt&gt; script can contain something like&lt;/p&gt;
&lt;pre&gt;rm ./ntpstats/*
ntpdsim -O 0.1 -C .001 -T 400 -W 1 -c ./ntp.conf,
&lt;/pre&gt;
&lt;p&gt;which starts the simulator with a time offset 100 ms, network jitter 1 ms, frequency offset 400 PPM and oscillator wander 1 PPM/s. These parameters represent typical conditions with modern workstations on a Ethernet LAN. The ntp.conf file should contain something like&lt;/p&gt;
&lt;pre&gt;disable kernel
server pogo
driftfile ./ntp.drift
statsdir ./ntpstats/
filegen loopstats type day enable
filegen peerstats type day enable
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    The NTP development team is moving to the use of a syntax-directed configuration file design. When complete these options will be replaced by a &lt;a href=&#34;/archives/4.2.8-series/ntpdsim_new&#34;&gt;new one&lt;/a&gt;. Most of the &lt;tt&gt;ntpd&lt;/tt&gt; command line options apply also to &lt;tt&gt;ntpdsim&lt;/tt&gt;. In addition, the following command line options apply to &lt;tt&gt;ntpdsim.&lt;/tt&gt;

&lt;/div&gt;

&lt;dt&gt;&lt;tt&gt;-B _bdly_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify beep delay (3600) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-C _snse_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify network jitter parameter (0) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-O _clk_time_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify initial time offset (0) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-S _sim_time_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify simulation duration (86400) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-T _ferr_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify initial frequency offset (0) PPM.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-W _fnse_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify oscillator wander parameter (0) PPM/s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-Y _ndly_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify network propagation delay (.001) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-Z _pdly_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify server processing delay (.001) s.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;/etc/ntp.conf&lt;/tt&gt; - the default name of the configuration file&lt;br&gt;
&lt;tt&gt;/etc/ntp.drift&lt;/tt&gt; - the default name of the drift file&lt;br&gt;
&lt;tt&gt;/etc/ntp.keys&lt;/tt&gt; - the default name of the key file&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpq - standard NTP query program</title>
      <link>/archives/4.2.8-series/ntpq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/ntpq/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/bustardfly.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A typical NTP monitoring packet&lt;/p&gt;
&lt;p&gt;Last update: 24-Jan-2018 08:35 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq/#internal-commands&#34;&gt;Internal Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq/#control-message-commands&#34;&gt;Control Message Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq/#status-words-and-kiss-codes&#34;&gt;Status Words and Kiss Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq/#system-variables&#34;&gt;System Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq/#peer-variables&#34;&gt;Peer Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntpq/#clock-variables&#34;&gt;Clock Variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpq [-46dinp] [-c &lt;em&gt;command&lt;/em&gt;] [&lt;em&gt;host&lt;/em&gt;] [&amp;hellip;]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpq&lt;/tt&gt; utility program is used to monitor NTP daemon &lt;tt&gt;ntpd&lt;/tt&gt; operations and determine performance. It uses the standard NTP mode 6 control message formats defined in Appendix B of the NTPv3 specification RFC1305. The same formats are used in NTPv4, although some of the variable names have changed and new ones added. The description on this page is for the NTPv4 variables.&lt;/p&gt;
&lt;p&gt;The program can be run either in interactive mode or controlled using command line arguments. Requests to read and write arbitrary variables can be assembled, with raw and pretty-printed output options being available. The &lt;tt&gt;ntpq&lt;/tt&gt; can also obtain and print a list of peers in a common format by sending multiple queries to the server.&lt;/p&gt;
&lt;p&gt;If one or more request options is included on the command line when &lt;tt&gt;ntpq&lt;/tt&gt; is executed, each of the requests will be sent to the NTP servers running on each of the hosts given as command line arguments, or on localhost by default. If no request options are given, &lt;tt&gt;ntpq&lt;/tt&gt; will attempt to read commands from the standard input and execute these on the NTP server running on the first host given on the command line, again defaulting to localhost when no other host is specified. &lt;tt&gt;ntpq&lt;/tt&gt; will prompt for commands if the standard input is a terminal device.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntpq&lt;/tt&gt; uses NTP mode 6 packets to communicate with the NTP server, and hence can be used to query any compatible server on the network which permits it. Note that since NTP is a UDP protocol this communication will be somewhat unreliable, especially over large distances in terms of network topology. &lt;tt&gt;ntpq&lt;/tt&gt; makes one attempt to retransmit requests, and will time requests out if the remote host is not heard from within a suitable timeout time.&lt;/p&gt;
&lt;p&gt;Note that in contexts where a host name is expected, a &lt;tt&gt;-4&lt;/tt&gt; qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a &lt;tt&gt;-6&lt;/tt&gt; qualifier forces DNS resolution to the IPv6 namespace.&lt;/p&gt;
&lt;p&gt;For examples and usage, see the &lt;a href=&#34;/archives/4.2.8-series/debug&#34;&gt;NTP Debugging Techniques&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Command line options are described following. Specifying a command line option other than &lt;tt&gt;-i&lt;/tt&gt; or &lt;tt&gt;-n&lt;/tt&gt; will cause the specified query (queries) to be sent to the indicated host(s) immediately. Otherwise, &lt;tt&gt;ntpq&lt;/tt&gt; will attempt to read interactive format commands from the standard input.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;tt&gt;-4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv4 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-6&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv6 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The following argument is interpreted as an interactive format command and is added to the list of commands to be executed on the specified host(s). Multiple &lt;tt&gt;-c&lt;/tt&gt; options may be given.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Turn on debugging mode.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-i&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force &lt;tt&gt;ntpq&lt;/tt&gt; to operate in interactive mode. Prompts will be written to the standard output and commands read from the standard input.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-n&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Output all host addresses in dotted-quad numeric format rather than converting to the canonical host names.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print a list of the peers known to the server as well as a summary of their state. This is equivalent to the &lt;tt&gt;peers&lt;/tt&gt; interactive command.&lt;/p&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;h4 id=&#34;internal-commands&#34;&gt;Internal Commands&lt;/h4&gt;
&lt;p&gt;Interactive format commands consist of a keyword followed by zero to four arguments. Only enough characters of the full keyword to uniquely identify the command need be typed. The output of a command is normally sent to the standard output, but optionally the output of individual commands may be sent to a file by appending a &lt;tt&gt;&amp;gt;&lt;/tt&gt;, followed by a file name, to the command line. A number of interactive format commands are executed entirely within the &lt;tt&gt;ntpq&lt;/tt&gt; program itself and do not result in NTP mode-6 requests being sent to a server. These are described following.&lt;/p&gt;
&lt;dl&gt;
&lt;dt id=&#34;help&#34;&gt;&lt;tt&gt;? [_command_keyword_]&lt;/tt&gt;  
&lt;tt&gt;help [_command_keyword_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A &lt;tt&gt;?&lt;/tt&gt; by itself will print a list of all the command keywords known to &lt;tt&gt;ntpq&lt;/tt&gt;. A &lt;tt&gt;?&lt;/tt&gt; followed by a command keyword will print function and usage information about the command.&lt;/p&gt;
&lt;dt id=&#34;addvars&#34;&gt;&lt;tt&gt;addvars _name_ [ = _value_] [...]&lt;/tt&gt;  
&lt;tt&gt;rmvars _name_ [...]&lt;/tt&gt;  
&lt;tt&gt;clearvars&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The arguments to this command consist of a list of items of the form &lt;tt&gt;&lt;em&gt;name&lt;/em&gt; = &lt;em&gt;value&lt;/em&gt;&lt;/tt&gt;, where the &lt;tt&gt;= &lt;em&gt;value&lt;/em&gt;&lt;/tt&gt; is ignored, and can be omitted in read requests. &lt;tt&gt;ntpq&lt;/tt&gt; maintains an internal list in which data to be included in control messages can be assembled, and sent using the &lt;tt&gt;readlist&lt;/tt&gt; and &lt;tt&gt;writelist&lt;/tt&gt; commands described below. The &lt;tt&gt;addvars&lt;/tt&gt; command allows variables and optional values to be added to the list. If more than one variable is to be added, the list should be comma-separated and not contain white space. The &lt;tt&gt;rmvars&lt;/tt&gt; command can be used to remove individual variables from the list, while the &lt;tt&gt;clearlist&lt;/tt&gt; command removes all variables from the list.&lt;/p&gt;
&lt;dt id=&#34;cooked&#34;&gt;&lt;tt&gt;cooked&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display server messages in prettyprint format.&lt;/p&gt;
&lt;dt id=&#34;debug&#34;&gt;&lt;tt&gt;debug more | less | off&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Turns internal query program debugging on and off.&lt;/p&gt;
&lt;dt id=&#34;delay&#34;&gt;&lt;tt&gt;delay _milliseconds_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a time interval to be added to timestamps included in requests which require authentication. This is used to enable (unreliable) server reconfiguration over long delay network paths or between machines whose clocks are unsynchronized. Actually the server does not now require timestamps in authenticated requests, so this command may be obsolete.&lt;/p&gt;
&lt;dt id=&#34;host&#34;&gt;&lt;tt&gt;host _name_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the host to which future queries will be sent. The name may be either a DNS name or a numeric address.&lt;/p&gt;
&lt;dt id=&#34;hostnames&#34;&gt;&lt;tt&gt;hostnames [yes | no]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;If &lt;tt&gt;yes&lt;/tt&gt; is specified, host names are printed in information displays. If &lt;tt&gt;no&lt;/tt&gt; is specified, numeric addresses are printed instead. The default is &lt;tt&gt;yes&lt;/tt&gt;, unless modified using the command line &lt;tt&gt;-n&lt;/tt&gt; switch.&lt;/p&gt;
&lt;dt id=&#34;keyid&#34;&gt;&lt;tt&gt;keyid _keyid_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command specifies the key number to be used to authenticate configuration requests. This must correspond to a key ID configured in &lt;tt&gt;ntp.conf&lt;/tt&gt; for this purpose.&lt;/p&gt;
&lt;dt id=&#34;keytype&#34;&gt;&lt;tt&gt;keytype&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the digest algorithm to use for authenticated requests, with default &lt;tt&gt;MD5&lt;/tt&gt;. If the OpenSSL library is installed, digest can be any message digest algorithm supported by the library. The current selections are: &lt;tt&gt;MD2&lt;/tt&gt;, &lt;tt&gt;MD4&lt;/tt&gt;, &lt;tt&gt;MD5&lt;/tt&gt;, &lt;tt&gt;MDC2&lt;/tt&gt;, &lt;tt&gt;RIPEMD160&lt;/tt&gt;, &lt;tt&gt;SHA&lt;/tt&gt;, &lt;tt&gt;SHA1&lt;/tt&gt;, and &lt;tt&gt;AES128CMAC&lt;/tt&gt;.&lt;/p&gt;
&lt;dt id=&#34;ntpversion&#34;&gt;&lt;tt&gt;ntpversion 1 | 2 | 3 | 4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Sets the NTP version number which &lt;tt&gt;ntpq&lt;/tt&gt; claims in packets. Defaults to 2, Note that mode-6 control messages (and modes, for that matter) didn&amp;rsquo;t exist in NTP version 1.&lt;/p&gt;
&lt;dt id=&#34;passwd&#34;&gt;&lt;tt&gt;passwd&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command prompts for a password to authenticate requests. The password must correspond to the key ID configured in &lt;tt&gt;ntp.conf&lt;/tt&gt; for this purpose.&lt;/p&gt;
&lt;dt id=&#34;quit&#34;&gt;&lt;tt&gt;quit&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Exit &lt;tt&gt;ntpq&lt;/tt&gt;.&lt;/p&gt;
&lt;dt id=&#34;raw&#34;&gt;&lt;tt&gt;raw&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display server messages as received and without reformatting.&lt;/p&gt;
&lt;dt id=&#34;timeout&#34;&gt;&lt;tt&gt;timeout _millseconds_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a timeout period for responses to server queries. The default is about 5000 milliseconds. Note that since &lt;tt&gt;ntpq&lt;/tt&gt; retries each query once after a timeout, the total waiting time for a timeout will be twice the timeout value set.&lt;/p&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;h4 id=&#34;control-message-commands&#34;&gt;Control Message Commands&lt;/h4&gt;
&lt;p&gt;Association IDs are used to identify system, peer and clock variables. System variables are assigned an association ID of zero and system name space, while each association is assigned a nonzero association ID and peer namespace. Most control commands send a single mode-6 message to the server and expect a single response message. The exceptions are the &lt;tt&gt;peers&lt;/tt&gt; command, which sends a series of messages, and the &lt;tt&gt;mreadlist&lt;/tt&gt; and &lt;tt&gt;mreadvar&lt;/tt&gt; commands, which iterate over a range of associations.&lt;/p&gt;
&lt;dt id=&#34;as&#34;&gt;&lt;tt&gt;associations&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display a list of mobilized associations in the form&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ind assid status conf reach auth condition last_event cnt&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ind&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;index on this list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;assid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;association ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#peer-status-word&#34;&gt;peer status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;yes&lt;/code&gt;: persistent&lt;br&gt; &lt;code&gt;no&lt;/code&gt;: ephemeral&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reach&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;yes&lt;/code&gt;: reachable&lt;br&gt; &lt;code&gt;no&lt;/code&gt;: unreachable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;auth&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ok&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;bad&lt;/code&gt; and &lt;code&gt;none&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;condition&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;selection status (see the &lt;code&gt;select&lt;/code&gt; field of the peer status word)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;last_event&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;event report (see the &lt;code&gt;event&lt;/code&gt; field of the peer status word)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cnt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;event count (see the &lt;code&gt;count&lt;/code&gt; field of the peer status word)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt id=&#34;cv&#34;&gt;&lt;tt&gt;clockvar _assocID_ [_name_ [ = _value_ [...]] [...]&lt;/tt&gt;  
&lt;tt&gt;cv _assocID_ [_name_ [ = _value_ [...] ][...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display a list of clock variables for those associations supporting a reference clock.&lt;/p&gt;
&lt;dt id=&#34;:config&#34;&gt;&lt;tt&gt;:config [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Send the remainder of the command line, including whitespace, to the server as a run-time configuration command in the same format as the configuration file. This command is experimental until further notice and clarification. Authentication is of course required.&lt;/p&gt;
&lt;dt id=&#34;config-from-file&#34;&gt;&lt;tt&gt;config-from-file _filename_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Send each line of &lt;em&gt;filename&lt;/em&gt; to the server as run-time configuration commands in the same format as the configuration file. This command is experimental until further notice and clarification. Authentication is required.&lt;/p&gt;
&lt;dt id=&#34;ifstats&#34;&gt;&lt;tt&gt;ifstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display statistics for each local network address. Authentication is required.&lt;/p&gt;
&lt;dt id=&#34;iostats&#34;&gt;&lt;tt&gt;iostats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display network and reference clock I/O statistics.&lt;/p&gt;
&lt;dt id=&#34;kerninfo&#34;&gt;&lt;tt&gt;kerninfo&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display kernel loop and PPS statistics. As with other ntpq output, times are in milliseconds. The precision value displayed is in milliseconds as well, unlike the precision system variable.&lt;/p&gt;
&lt;dt id=&#34;lassoc&#34;&gt;&lt;tt&gt;lassociations&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Perform the same function as the associations command, except display mobilized and unmobilized associations.&lt;/p&gt;
&lt;dt id=&#34;monstats&#34;&gt;&lt;tt&gt;monstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display monitor facility statistics.&lt;/p&gt;
&lt;dt id=&#34;mrulist&#34;&gt;&lt;tt&gt;mrulist [limited | kod | mincount=_count_ | laddr=_localaddr_ | sort=_sortorder_ | resany=_hexmask_ | resall=_hexmask_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain and print traffic counts collected and maintained by the monitor facility. With the exception of &lt;tt&gt;sort=&lt;em&gt;sortorder&lt;/em&gt;&lt;/tt&gt;, the options filter the list returned by &lt;tt&gt;ntpd&lt;/tt&gt;. The &lt;tt&gt;limited&lt;/tt&gt; and &lt;tt&gt;kod&lt;/tt&gt; options return only entries representing client addresses from which the last packet received triggered either discarding or a KoD response. The &lt;tt&gt;mincount=&lt;em&gt;count&lt;/em&gt;&lt;/tt&gt; option filters entries representing less than &lt;tt&gt;&lt;em&gt;count&lt;/em&gt;&lt;/tt&gt; packets. The &lt;tt&gt;laddr=&lt;em&gt;localaddr&lt;/em&gt;&lt;/tt&gt; option filters entries for packets received on any local address other than &lt;tt&gt;&lt;em&gt;localaddr&lt;/em&gt;&lt;/tt&gt;. &lt;tt&gt;resany=&lt;em&gt;hexmask&lt;/em&gt;&lt;/tt&gt; and &lt;tt&gt;resall=&lt;em&gt;hexmask&lt;/em&gt;&lt;/tt&gt; filter entries containing none or less than all, respectively, of the bits in &lt;tt&gt;&lt;em&gt;hexmask&lt;/em&gt;&lt;/tt&gt;, which must begin with &lt;tt&gt;0x&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;&lt;em&gt;sortorder&lt;/em&gt;&lt;/tt&gt; defaults to &lt;tt&gt;lstint&lt;/tt&gt; and may be any of &lt;tt&gt;addr&lt;/tt&gt;, &lt;tt&gt;count&lt;/tt&gt;, &lt;tt&gt;avgint&lt;/tt&gt;, &lt;tt&gt;lstint&lt;/tt&gt;, or any of those preceded by a minus sign (hyphen) to reverse the sort order. The output columns are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Column&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lstint&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Interval in s between the receipt of the most recent packet from this address and the completion of the retrieval of the MRU list by &lt;code&gt;ntpq&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;avgint&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Average interval in s between packets from this address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rstr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Restriction flags associated with this address. Most are copied unchanged from the matching &lt;code&gt;restrict&lt;/code&gt; command, however 0x400 (kod) and 0x20 (limited) flags are cleared unless the last packet from this address triggered a rate control response.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;r&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Rate control indicator, either a period, &lt;code&gt;L&lt;/code&gt; or &lt;code&gt;K&lt;/code&gt; for no rate control response, rate limiting by discarding, or rate limiting with a KoD response, respectively.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;m&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Packet mode.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Packet version number.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;count&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Packets received from this address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rport&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Source port of last packet from this address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;remote address&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;DNS name, numeric address, or address followed by claimed DNS name which could not be verified in parentheses.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt id=&#34;mreadvar&#34;&gt;&lt;tt&gt;mreadvar _assocID_ _assocID_ [ _variable_name_ [ = _value_[ ... ]&lt;/tt&gt;&lt;/dt&gt;
&lt;dt id=&#34;mrv&#34;&gt;&lt;tt&gt;mrv _assocID_ _assocID_ [ _variable_name_ [ = _value_[ ... ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Perform the same function as the &lt;tt&gt;readvar&lt;/tt&gt; command, except for a range of association IDs. This range is determined from the association list cached by the most recent &lt;tt&gt;associations&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt id=&#34;passoc&#34;&gt;&lt;tt&gt;passociations&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Perform the same function as the &lt;tt&gt;associations command&lt;/tt&gt;, except that it uses previously stored data rather than making a new query.&lt;/p&gt;
&lt;dt id=&#34;pe&#34;&gt;&lt;tt&gt;peers&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display a list of peers in the form&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;[tally]remote refid st t when pool reach delay offset jitter&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[tally]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;single-character code indicating current value of the &lt;code&gt;select&lt;/code&gt; field of the &lt;a href=&#34;/archives/4.2.8-series/decode/#peer-status-word&#34;&gt;peer status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;host name (or IP number) of peer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;association ID or kiss code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;st&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;stratum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;u&lt;/code&gt;: unicast or manycast client&lt;br&gt; &lt;code&gt;b&lt;/code&gt;: broadcast or multicast client&lt;br&gt; &lt;code&gt;p&lt;/code&gt;: pool source&lt;br&gt; &lt;code&gt;l&lt;/code&gt;: local (reference clock)&lt;br&gt; &lt;code&gt;s&lt;/code&gt;: symmetric (peer)&lt;br&gt; &lt;code&gt;A&lt;/code&gt;: manycast server&lt;br&gt; &lt;code&gt;B&lt;/code&gt;: broadcast server&lt;br&gt; &lt;code&gt;M&lt;/code&gt;: multicast server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;when&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;sec/min/hr since last received packet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;poll interval (log&lt;sub&gt;2&lt;/sub&gt; s)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reach&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reach shift register (octal)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;delay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;roundtrip delay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;offset of server relative to this host&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jitter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt id=&#34;rv&#34;&gt;&lt;tt&gt;readvar _assocID_ _name_ [ = _value_ ] [,...]&lt;/tt&gt;  
&lt;tt&gt;rv _assocID_ [ _name_ ] [,...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display the specified variables. If &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is zero, the variables are from the system variables name space, otherwise they are from the peer variables name space. The &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is required, as the same name can occur in both spaces. If no &lt;tt&gt;&lt;em&gt;name&lt;/em&gt;&lt;/tt&gt; is included, all operative variables in the name space are displayed. In this case only, if the &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is omitted, it is assumed zero. Multiple names are specified with comma separators and without whitespace. Note that time values are represented in milliseconds and frequency values in parts-per-million (PPM). Some NTP timestamps are represented in the format YYYYMMDDTTTT, where YYYY is the year, MM the month of year, DD the day of month and TTTT the time of day.&lt;/p&gt;
&lt;dt id=&#34;saveconfig&#34;&gt;&lt;tt&gt;saveconfig _filename_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Write the current configuration, including any runtime modifications given with &lt;tt&gt;:config&lt;/tt&gt; or &lt;tt&gt;config-from-file&lt;/tt&gt;, to the ntpd host&amp;rsquo;s file &lt;em&gt;filename&lt;/em&gt;. This command will be rejected by the server unless &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;saveconfigdir&lt;/a&gt; appears in the &lt;tt&gt;ntpd&lt;/tt&gt; configuration file. &lt;em&gt;filename&lt;/em&gt; can use strftime() format specifies to substitute the current date and time, for example, &lt;tt&gt;saveconfig ntp-%Y%m%d-%H%M%S.conf&lt;/tt&gt;. The filename used is stored in system variable &lt;tt&gt;savedconfig&lt;/tt&gt;. Authentication is required.&lt;/p&gt;
&lt;dt id=&#34;writevar&#34;&gt;&lt;tt&gt;writevar _assocID_ _name_ = _value_ [,...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Write the specified variables. If the &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is zero, the variables are from the system variables name space, otherwise they are from the peer variables name space. The &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is required, as the same name can occur in both spaces.&lt;/p&gt;
&lt;dt id=&#34;sysinfo&#34;&gt;&lt;tt&gt;sysinfo&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display operational summary.&lt;/p&gt;
&lt;dt id=&#34;sysstats&#34;&gt;&lt;tt&gt;sysstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print statistics counters maintained in the protocol module.&lt;/p&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;h4 id=&#34;status-words-and-kiss-codes&#34;&gt;Status Words and Kiss Codes&lt;/h4&gt;
&lt;p&gt;The current state of the operating program is shown in a set of status words maintained by the system and each association separately. These words are displayed in the &lt;tt&gt;rv&lt;/tt&gt; and &lt;tt&gt;as&lt;/tt&gt; commands both in hexadecimal and decoded short tip strings. The codes, tips and short explanations are on the &lt;a href=&#34;/archives/4.2.8-series/decode&#34;&gt;Event Messages and Status Words&lt;/a&gt; page. The page also includes a list of system and peer messages, the code for the latest of which is included in the status word.&lt;/p&gt;
&lt;p&gt;Information resulting from protocol machine state transitions is displayed using an informal set of ASCII strings called &lt;a href=&#34;/archives/4.2.8-series/decode/#kiss-codes&#34;&gt;kiss codes&lt;/a&gt;. The original purpose was for kiss-o&#39;-death (KoD) packets sent by the server to advise the client of an unusual condition. They are now displayed, when appropriate, in the reference identifier field in various billboards.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;system-variables&#34;&gt;System Variables&lt;/h4&gt;
&lt;p&gt;The following system variables appear in the &lt;tt&gt;rv&lt;/tt&gt; billboard. Not all variables are displayed in some configurations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#system-status-word&#34;&gt;system status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP software version and build time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;processor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;hardware platform and version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;system&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;operating system and version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;leap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;leap warning indicator (0-3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stratum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;stratum (1-15)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;precision&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;precision (log&lt;sub&gt;2&lt;/sub&gt; s)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rootdelay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;total roundtrip delay to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rootdisp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;total dispersion to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;peer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;system peer association ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;time constant and poll exponent (log&lt;sub&gt;2&lt;/sub&gt; s) (3-17)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mintc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;minimum time constant (log&lt;sub&gt;2&lt;/sub&gt; s) (3-10)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clock&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;date and time of day&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference ID or &lt;a href=&#34;/archives/4.2.8-series/decode/#kiss-codes&#34;&gt;kiss code&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reftime&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;combined offset of server relative to this host&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sys_jitter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;combined system jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;frequency&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;frequency offset (PPM) relative to hardware clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clk_wander&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clock frequency wander (PPM)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clk_jitter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clock jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tai&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI-UTC offset (s)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;leapsec&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP seconds when the next leap second is/was inserted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expire&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP seconds when the NIST leapseconds file expires&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The jitter and wander statistics are exponentially-weighted RMS averages. The system jitter is defined in the NTPv4 specification; the clock jitter statistic is computed by the clock discipline module.&lt;/p&gt;
&lt;p&gt;When the NTPv4 daemon is compiled with the OpenSSL software library, additional system variables are displayed, including some or all of the following, depending on the particular Autokey dance:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Autokey host name for this host&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ident&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Autokey group name for this host&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;host flags (see Autokey specification)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;digest&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;OpenSSL message digest algorithm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;signature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;OpenSSL digest/signature scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP seconds at last signature update&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cert&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;certificate subject, issuer and certificate flags&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;until&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP seconds when the certificate expires&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;peer-variables&#34;&gt;Peer Variables&lt;/h4&gt;
&lt;p&gt;The following peer variables appear in the &lt;tt&gt;rv&lt;/tt&gt; billboard for each association. Not all variables are displayed in some configurations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;associd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;association ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#peer-status-word&#34;&gt;peer status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;srcadr&lt;/code&gt;&lt;br&gt;  &lt;code&gt;srcport&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;source (remote) IP address and port&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dstadr&lt;/code&gt;&lt;br&gt; &lt;code&gt;dstport&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;destination (local) IP address and port&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;leap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;leap indicator (0-3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stratum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;stratum (0-15)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;precision&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;precision (log&lt;sub&gt;2&lt;/sub&gt; s)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rootdelay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;total roundtrip delay to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rootdisp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;total root dispersion to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference ID or &lt;a href=&#34;/archives/4.2.8-series/decode/#kiss-codes&#34;&gt;kiss code&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reftime&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reach&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reach register (octal)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unreach&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;unreach counter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hmode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;host mode (1-6)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pmode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;peer mode (1-5)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hpoll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;host poll exponent (log&lt;sub&gt;2&lt;/sub&gt; s) (3-17)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ppoll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;peer poll exponent (log&lt;sub&gt;2&lt;/sub&gt; s) (3-17)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;headway&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;headway (see &lt;a href=&#34;/archives/4.2.8-series/rate&#34;&gt;Rate Management and the Kiss-o&#39;-Death Packet)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#flash-status-word&#34;&gt;flash status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;filter offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;delay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;filter delay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dispersion&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;filter dispersion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jitter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;filter jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ident&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Autokey group name for this association&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bias&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;unicast/broadcast bias&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;xleave&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;interleave delay (see &lt;a href=&#34;/archives/4.2.8-series/xleave&#34;&gt;NTP Interleaved Modes&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The bias variable is calculated when the first broadcast packet is received after the calibration volley. It represents the offset of the broadcast subgraph relative to the unicast subgraph. The xleave variable appears only the interleaved symmetric and interleaved modes. It represents the internal queuing, buffering and transmission delays for the preceding packet.&lt;/p&gt;
&lt;p&gt;When the NTPv4 daemon is compiled with the OpenSSL software library, additional peer variables are displayed, including the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;peer flags (see Autokey specification)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Autokey server name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;peer flags (see Autokey specification)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;signature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;OpenSSL digest/signature scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;initsequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;initial key ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;initkey&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;initial key index&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Autokey signature timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clock-variables&#34;&gt;Clock Variables&lt;/h4&gt;
&lt;p&gt;The following clock variables appear in the &lt;tt&gt;cv&lt;/tt&gt; billboard for each association with a reference clock. Not all variables are displayed in some configurations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;associd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;association ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.8-series/decode/#clock-status-word&#34;&gt;clock status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;device&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;device description&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;timecode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ASCII time code string (specific to device)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;poll messages sent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;noreply&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no reply&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;badformat&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;bad format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;baddata&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;bad date or time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fudgetime1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;fudge time 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fudgetime2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;fudge time 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stratum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;driver stratum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;driver reference ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;driver flags&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntptime - read and set kernel time variables</title>
      <link>/archives/4.2.8-series/ntptime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/ntptime/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo5.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The turtle has been swimming in the kernel.&lt;/p&gt;
&lt;p&gt;Last update: 11-Sep-2010 05:55 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntptime/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntptime/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntptime/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntptime [ -chr ] [ -e &lt;em&gt;est_error&lt;/em&gt; ] [ -f &lt;em&gt;frequency&lt;/em&gt; ] [ -m &lt;em&gt;max_error&lt;/em&gt; ] [ -o &lt;em&gt;offset&lt;/em&gt; ] [ -s &lt;em&gt;status&lt;/em&gt; ] [ -t &lt;em&gt;time_constant&lt;/em&gt;]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;This program is useful only with special kernels described in the &lt;a href=&#34;/archives/4.2.8-series/kern&#34;&gt;A Kernel Model for Precision Timekeeping&lt;/a&gt; page. It reads and displays time-related kernel variables using the &lt;tt&gt;ntp_gettime()&lt;/tt&gt; system call. A similar display can be obtained using the &lt;tt&gt;ntpdc&lt;/tt&gt; program and &lt;tt&gt;kerninfo&lt;/tt&gt; command.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;options&#34;&gt;Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display the execution time of &lt;tt&gt;ntptime&lt;/tt&gt; itself.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-e _est_error_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify estimated error, in microseconds.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-f _frequency_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify frequency offset, in parts per million.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-h&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display help information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-m _max_error_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify max possible errors, in microseconds.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-o _offset_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify clock offset, in microseconds.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-r&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display Unix and NTP times in raw format.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s _status_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify clock status. Better know what you are doing.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-t _time_constant_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify time constant, an integer in the range 0-10.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntptrace - trace a chain of NTP servers back to the primary source</title>
      <link>/archives/4.2.8-series/ntptrace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/ntptrace/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice13.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The rabbit knows the way back.&lt;/p&gt;
&lt;p&gt;Last update: 31-Jan-2014 06:54 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntptrace/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntptrace/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntptrace/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/ntptrace/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntptrace [ -n ] [ -m &lt;em&gt;maxhosts&lt;/em&gt; ] [ &lt;em&gt;server&lt;/em&gt; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntptrace&lt;/tt&gt; is a &lt;tt&gt;perl&lt;/tt&gt; script that uses the &lt;tt&gt;ntpq&lt;/tt&gt; utility program to follow the chain of NTP servers from a given host back to the primary time source. For &lt;tt&gt;ntptrace&lt;/tt&gt; to work properly, each of these servers must implement the NTP Control and Monitoring Protocol specified in RFC 1305 and enable NTP Mode 6 packets.&lt;/p&gt;
&lt;p&gt;If given no arguments, &lt;tt&gt;ntptrace&lt;/tt&gt; starts with &lt;tt&gt;localhost&lt;/tt&gt;. Here is an example of the output from &lt;tt&gt;ntptrace&lt;/tt&gt;:&lt;/p&gt;
&lt;pre&gt;% ntptrace
localhost: stratum 4, offset 0.0019529, synch distance 0.144135
server2ozo.com: stratum 2, offset 0.0124263, synch distance 0.115784
usndh.edu: stratum 1, offset 0.0019298, synch distance 0.011993, refid &#39;WWVB&#39;
&lt;/pre&gt;
&lt;p&gt;On each line, the fields are (left to right): the host name, the host stratum, the time offset between that host and the local host (as measured by &lt;tt&gt;ntptrace&lt;/tt&gt;; this is why it is not always zero for &amp;ldquo;&lt;tt&gt;localhost&lt;/tt&gt;&amp;quot;), the host synchronization distance, and (only for stratum-1 servers) the reference clock ID. All times are given in seconds. Note that the stratum is the server hop count to the primary source, while the synchronization distance is the estimated error relative to the primary source. These terms are precisely defined in RFC-1305.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;options&#34;&gt;Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-m _max_hosts_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Sets the upper limit of the number of hosts to check (default: unlimited).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-n&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Turns off the printing of host names; instead, host IP addresses are given. This may be useful if a nameserver is down.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;This program makes no attempt to improve accuracy by doing multiple samples.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Orphan Mode</title>
      <link>/archives/4.2.8-series/orphan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/orphan/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 4-Aug-2011 23:40 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Sometimes an NTP subnet becomes isolated from all UTC sources such as local reference clocks or Internet time servers. In such cases it may be necessary that the subnet servers and clients remain synchronized to a common timescale, not necessarily the UTC timescale. Previously, this function was provided by the local clock driver to simulate a UTC source. A server with this driver could be used to synchronize other hosts in the subnet directly or indirectly.&lt;/p&gt;
&lt;p&gt;There are many disadvantages using the local clock driver, primarily that the subnet is vulnerable to single-point failures and multiple server redundancy is not possible. Orphan mode is intended to replace the local clock driver. It provides a single simulated UTC source with multiple servers and provides seamless switching as servers fail and recover.&lt;/p&gt;
&lt;p&gt;A common configuration for private networks includes one or more core servers operating at the lowest stratum. Good practice is to configure each of these servers as backup for the others using symmetric or broadcast modes. As long as at least one core server can reach a UTC source, the entire subnet can synchronize to it.&lt;/p&gt;
&lt;p&gt;If no UTC sources are available to any core server, one of them can provide a simulated UTC source for all other hosts in the subnet. However, only one core server can simulate the UTC source and all direct dependents, called orphan children, must select the same server, called the orphan parent.&lt;/p&gt;
&lt;p&gt;Hosts sharing the same common subnet, including potential orphan parents and potential orphan children, can be enabled for orphan mode using the &lt;tt&gt;orphan &lt;em&gt;stratum&lt;/em&gt;&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos command&lt;/tt&gt;&lt;/a&gt;, where &lt;tt&gt;&lt;em&gt;stratum&lt;/em&gt;&lt;/tt&gt; is some stratum less than 16 and greater than any anticipated stratum that might occur with configured Internet time servers. However, sufficient headroom should remain so every subnet host dependent on the orphan children has stratum less than 16. Where no associations for other servers or reference clocks are configured, the orphan stratum can be set to 1. These are the same considerations that guide the local clock driver stratum selection.&lt;/p&gt;
&lt;p&gt;In order to avoid premature enabling orphan mode, a holdoff delay occurs when the daemon is first started and when all sources have been lost after that. The delay is intended to allow time for other sources to become reachable and selectable. Only when the delay has expired with no sources will orphan mode be enabled. By default the delay is 300 s (five minutes), but this can be changed using the &lt;tt&gt;orphanwait&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command.&lt;/p&gt;
&lt;p&gt;A orphan parent with no sources shows reference ID &lt;font face=&#34;Courier New, Courier, Monaco, monospace&#34;&gt;LOOP&lt;/font&gt; if operating at stratum 1 and 127.0.0.1 (IPv4 loopback address) otherwise. While ordinary NTP clients use a selection metric based on delay and dispersion, orphan children use a metric computed from the IP address of each core server. Each orphan child chooses the orphan parent as the core server with the smallest metric.&lt;/p&gt;
&lt;p&gt;For orphan mode to work well, each core server with available sources should operate at the same stratum. All core servers and orphan children should include the same &lt;font face=&#34;Courier New, Courier, Monaco, monospace&#34;&gt;tos&lt;/font&gt; command in the configuration file. Each orphan child should include in the configuration file all root servers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/peer.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Orphan Peer Configuration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For example, consider the peer network configuration in Figure 1, where two or more campus primary or secondary (stratum 2) servers are configured with reference clocks or public Internet primary servers and with each other using symmetric modes. With this configuration a server that loses all sources continues to discipline the system clock using the other servers as backup. Only the core servers and orphan children need to be enabled for orphan mode.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/broad.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 2: Orphan Broadcast Configuration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For broadcast networks each core server is configured in both broadcast server and broadcast client modes as shown in Figure 2. Orphan children operate as broadcast clients of all core servers. As in peer networks, the core servers back up each other and only they and the orphan children need to be enabled for orphan mode.&lt;/p&gt;
&lt;p&gt;In normal operation subnet hosts operate below stratum 5, so the subnet is automatically configured as described in the NTP specification. If all UTC sources are lost, all core servers become orphans and the orphan children will select the same core server to become the orphan parent.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Performance Metrics</title>
      <link>/archives/4.2.8-series/stats/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/stats/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 26-Jul-2015 06:29 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/stats/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/stats/#statistics-summary&#34;&gt;Statistics Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/stats/#quality-of-service&#34;&gt;Quality of Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This page describes several statistics provided in the NTP specification and reference implementation and how they determine the accuracy and error measured during routine and exceptional operation. These statistics provide the following information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nominal estimate of the server clock time relative to the client clock time. This is called &lt;em&gt;clock offset&lt;/em&gt; symbolized by the Greek letter θ.&lt;/li&gt;
&lt;li&gt;Roundtrip system and network delay measured by the on-wire protocol. This is call &lt;em&gt;roundtrip delay&lt;/em&gt; symbolized by the Greek letter δ.&lt;/li&gt;
&lt;li&gt;Potential clock offset error due to the maximum uncorrected system clock frequency error. This is called &lt;em&gt;dispersion&lt;/em&gt; symbolized by the Greek letter ε.&lt;/li&gt;
&lt;li&gt;Expected error, consisting of the root mean square (RMS) nominal clock offset sample differencess in a sliding window of several samples. This is called &lt;em&gt;jitter&lt;/em&gt; symbolized by the Greek letter φ.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Figure 1 shows how the various measured statistics are collected and compiled to calibrate NTP performance.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/stats.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Statistics Budget&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The data represented in boxes labeled Server are contained in fields in packet received from the server. The data represented in boxes labeled Peer are computed by the on-wire protocol, as described below. The algorithms of the box labeled Selection and Combining Algorithms process the peer data to select a system peer. The System box represents summary data inherited from the system peer. These data are available to application programs and dependent downstream clients.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;statistics-summary&#34;&gt;Statistics Summary&lt;/h4&gt;
&lt;p&gt;Each NTP synchronization source is characterized by the offset θ and delay δ samples measured by the on-wire protocol, as described on the &lt;a href=&#34;/archives/4.2.8-series/warp&#34;&gt;How NTP Works&lt;/a&gt; page. In addition, the dispersion ε sample is initialized with the sum of the source precision ρ&lt;sub&gt;R&lt;/sub&gt; and the client precision ρ (not shown) as each source packet is received. The dispersion increases at a rate of 15 μs/s after that. For this purpose, the precision is equal to the latency to read the system clock. The offset, delay and dispersion are called the sample statistics.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    In very fast networks where the client clock frequency is not within 1 PPM or so of the server clock frequency, the roundtrip delay may have small negative values. This is usually a temporary condition when the client is first started. When using the roundtrip delay in calculations, negative values are assumed zero.

&lt;/div&gt;

&lt;p&gt;In a window of eight (offset, delay, dispersion) samples, the algorithm described on the &lt;a href=&#34;/archives/4.2.8-series/filter&#34;&gt;Clock Filter Algorithm&lt;/a&gt; page selects the sample with minimum delay, which generally represents the most accurate offset statistic. The selected offset sample determines the &lt;em&gt;peer offset&lt;/em&gt; and &lt;em&gt;peer delay&lt;/em&gt; statistics. The &lt;em&gt;peer dispersion&lt;/em&gt; is a weighted average of the dispersion samples in the window. These quantities are recalculated as each update is received from the source. Between updates, both the sample dispersion and peer dispersion continue to grow at the same rate, 15 μs/s. Finally, the &lt;em&gt;peer jitter&lt;/em&gt; φ is determined as the RMS differences between the offset samples in the window relative to the selected offset sample. The peer statistics are recorded by the &lt;tt&gt;peerstats&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/monopt/#monitoring-commands-and-options&#34;&gt;&lt;tt&gt;filegen&lt;/tt&gt;&lt;/a&gt; command. Peer variables are displayed by the &lt;tt&gt;rv&lt;/tt&gt; command of the &lt;a href=&#34;/archives/4.2.8-series/ntpq/#peer-variables&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; program.&lt;/p&gt;
&lt;p&gt;The clock filter algorithm continues to process updates in this way until the source is no longer reachable. Reachability is determined by an eight-bit shift register, which is shifted left by one bit as each poll packet is sent, with 0 replacing the vacated rightmost bit. Each time a valid update is received, the rightmost bit is set to 1. The source is considered reachable if any bit is set to 1 in the register; otherwise, it is considered unreachable. When a source becomes unreachable, a dummy sample with &amp;ldquo;infinite&amp;rdquo; dispersion is inserted in the filter window at each poll, thus displacing old samples. This causes the peer dispersion to increase eventually to infinity.&lt;/p&gt;
&lt;p&gt;The composition of the source population and the system peer selection is redetermined as each update from each source is received. The system peer and system variables are determined as described on the &lt;a href=&#34;/archives/4.2.8-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page. The system variables Θ, Δ, Ε and Φ are updated from the system peer variables of the same name and the system stratum set one greater than the system peer stratum. The system statistics are recorded by the &lt;tt&gt;loopstats&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/monopt/#monitoring-commands-and-options&#34;&gt;&lt;tt&gt;filegen&lt;/tt&gt;&lt;/a&gt; command. System variables are displayed by the &lt;tt&gt;rv&lt;/tt&gt; command of the &lt;a href=&#34;/archives/4.2.8-series/ntpq/#system-variables&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; program.&lt;/p&gt;
&lt;p&gt;Although it might seem counterintuitive, a cardinal rule in the selection process is, once a sample has been selected by the clock filter algorithm, older samples are no longer selectable. This applies also to the clock select algorithm. Once the peer variables for a source have been selected, older variables of the same or other sources are no longer selectable. The reason for these rules is to limit the time delay in the clock discipline algorithm. This is necessary to preserve the optimum impulse response and thus the risetime and overshoot.&lt;/p&gt;
&lt;p&gt;This means that not every sample can be used to update the peer variables, and up to seven samples can be ignored between selected samples. This fact has been carefully considered in the discipline algorithm design with due consideration for feedback loop delay and minimum sampling rate. In engineering terms, even if only one sample in eight survives, the resulting sample rate is twice the Nyquist rate at any time constant and poll interval.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;quality-of-service&#34;&gt;Quality of Service&lt;/h4&gt;
&lt;p&gt;This section discusses how an NTP client determines the system performance using a peer population including reference clocks and remote servers. This is determined for each peer from two statistics, &lt;em&gt;peer jitter&lt;/em&gt; and &lt;em&gt;root distance.&lt;/em&gt; Peer jitter is determined from various jitter components as described above. It represents the expected error in determining the clock offset estimate. Root distance represents the maximum error of the estimate due to all causes.&lt;/p&gt;
&lt;p&gt;The root distance statistic is computed as one-half the &lt;em&gt;root delay&lt;/em&gt; of the primary source of time; i.e., the reference clock, plus the &lt;em&gt;root dispersion&lt;/em&gt; of that source. The root variables are included in the NTP packet header received from each source. At each update the root delay is recomputed as the sum of the root delay in the packet plus the peer delay, while the root dispersion is recomputed as the sum of the root dispersion in the packet plus the peer dispersion.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    In order to avoid timing loops, the root distance is adjusted to the maximum of the above computation and a &lt;em&gt;minimum threshold.&lt;/em&gt; The minimum threshold defaults to 1 ms, but can be changed according to client preference using the &lt;tt&gt;mindist&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command.

&lt;/div&gt;

&lt;p&gt;A source is considered selectable only if its root distance is less than the &lt;em&gt;select threshold&lt;/em&gt;, by default 1.5 s, but can be changed according to client preference using the &lt;tt&gt;maxdist&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.8-series/miscopt&#34;&gt;&lt;tt&gt;tos&lt;/tt&gt;&lt;/a&gt; command. When an upstream server loses all sources, its root distance apparent to dependent clients continues to increase. The clients are not aware of this condition and continue to accept synchronization as long as the root distance is less than the select threshold.&lt;/p&gt;
&lt;p&gt;The root distance statistic is used by the select, cluster and mitigation algorithms. In this respect, it is sometimes called the &lt;em&gt;synchronization distance&lt;/em&gt; often shortened simply to &lt;em&gt;distance&lt;/em&gt;. The root distance is also used in the following ways.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Root distance defines the maximum error of the clock offset estimate due to all causes as long as the source remains reachable..&lt;/li&gt;
&lt;li&gt;Root distance defines the upper and lower limits of the correctness interval. This interval represents the maximum clock offset for each of possibly several sources. The clock select algorithm computes the intersection of the correctness intervals to determine the truechimers from the selectable source population.&lt;/li&gt;
&lt;li&gt;Root distance is used by the clock cluster algorithm as a weight factor when pruning outliers from the truechimer population.&lt;/li&gt;
&lt;li&gt;The (normalized) reciprocal of the root distance is used as a weight factor by the combine algorithm when computing the system clock offset and system jitter.&lt;/li&gt;
&lt;li&gt;Root distance is used by the mitigation algorithm to select the system peer from among the cluster algorithm survivors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The root distance thus functions as a metric in the selection and weighting of the various available sources. The strategy is to select the system peer as the source with the minimum root distance and thus the minimum maximum error. The reference implementation uses the Bellman-Ford algorithm described in the literature, where the goal is to minimize the root distance. The algorithm selects the &lt;em&gt;system peer&lt;/em&gt;, from which the system root delay and system root dispersion are inherited.&lt;/p&gt;
&lt;p&gt;The algorithms described on the &lt;a href=&#34;/archives/4.2.8-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page deliver several important statistics. The &lt;em&gt;system offset&lt;/em&gt; and &lt;em&gt;system jitter&lt;/em&gt; are weighted averages computed by the clock combine algorithm. System offset is best interpreted as the maximum-likelihood estimate of the system clock offset, while system jitter, also called estimated error, is best interpreted as the expected error of this estimate. &lt;em&gt;System delay&lt;/em&gt; is the root delay inherited from the system peer, while &lt;em&gt;s__ystem dispersion&lt;/em&gt; is the root dispersion plus contributions due to jitter and the absolute value of the system offset.&lt;/p&gt;
&lt;p&gt;The maximum system error, or &lt;em&gt;system distance&lt;/em&gt;, is computed as one-half the system delay plus the system dispersion. In order to simplify discussion, certain minor contributions to the maximum error statistic are ignored. If the precision time kernel support is available, both the estimated error and maximum error are reported to user programs via the &lt;tt&gt;ntp_adjtime()&lt;/tt&gt; kernel system call. See the &lt;a href=&#34;/archives/4.2.8-series/kern&#34;&gt;Kernel Model for Precision Timekeeping&lt;/a&gt; page for further information.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Poll Process</title>
      <link>/archives/4.2.8-series/poll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/poll/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 10-Mar-2014 05:17 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The poll process sends NTP packets at intervals determined by the clock discipline algorithm. The process is designed to provide a sufficient update rate to maximize accuracy while minimizing network overhead. The process is designed to operate over a poll exponent range between 3 (8 s) and 17 (36 hr). The minimum and maximum poll exponent within this range can be set using the &lt;tt&gt;minpoll&lt;/tt&gt; and &lt;tt&gt;maxpoll&lt;/tt&gt; options of the &lt;a href=&#34;/archives/4.2.8-series/confopt/#server-command-options&#34;&gt;&lt;tt&gt;server&lt;/tt&gt;&lt;/a&gt; command, with default 6 (64 s) and 10 (1024 s), respectively.&lt;/p&gt;
&lt;p&gt;The poll interval is managed by a heuristic algorithm developed over several years of experimentation. It depends on an exponentially weighted average of clock offset differences, called &lt;em&gt;clock jitter&lt;/em&gt;, and a jiggle counter, which is initially set to zero. When a clock update is received and the offset exceeds the clock jitter by a factor of 4, the jiggle counter is increased by the poll exponent; otherwise, it is decreased by twice the poll exponent. If the jiggle counter is greater than an arbitrary threshold of 30, it is reset to 0 and the poll exponent is increased by 1. If the jiggle counter is less than -30, it is set to 0 and the poll exponent decreased by 1. In effect, the algorithm has a relatively slow reaction to good news, but a relatively fast reaction to bad news.&lt;/p&gt;
&lt;p&gt;As an option of the &lt;a href=&#34;/archives/4.2.8-series/confopt/#option&#34;&gt;&lt;tt&gt;server&lt;/tt&gt;&lt;/a&gt; command, instead of a single packet, the poll process can send a burst of several packets at 2-s intervals. This is designed to reduce the time to synchronize the clock at initial startup (&lt;tt&gt;iburst&lt;/tt&gt;) and/or to reduce the phase noise at the longer poll intervals (&lt;tt&gt;burst&lt;/tt&gt;). The &lt;tt&gt;iburst&lt;/tt&gt; option is effective only when the server is unreachable, while the &lt;tt&gt;burst&lt;/tt&gt; option is effective only when the server is reachable. The two options are independent of each other and both can be enabled at the same time.&lt;/p&gt;
&lt;p&gt;For the &lt;tt&gt;iburst&lt;/tt&gt; option the number of packets in the burst is six, which is the number normally needed to synchronize the clock; for the &lt;tt&gt;burst&lt;/tt&gt; option, the number of packets in the burst is determined by the difference between the current poll exponent and the minimum poll exponent as a power of 2. For instance, with the default minimum poll exponent of 6 (64 s), only one packet is sent for every poll, while the full number of eight packets is sent at poll exponents of 9 (512 s) or more. This insures that the average headway will never exceed the minimum headway.&lt;/p&gt;
&lt;p&gt;The burst options can result in increased load on the network if not carefully designed. Both options are affected by the provisions described on the &lt;a href=&#34;/archives/4.2.8-series/rate&#34;&gt;Rate Management and the Kiss-o&#39;-Death Packet&lt;/a&gt; page. In addition, when &lt;tt&gt;iburst&lt;/tt&gt; or &lt;tt&gt;burst&lt;/tt&gt; are enabled, the first packet of the burst is sent, but the remaining packets sent only when the reply to the fist packet is received. If no reply has been received after a timeout set by the &lt;tt&gt;minpoll&lt;/tt&gt; option, the first packet is sent again. This means that, even if a server is unreachable, the network load is no more than at the minimum poll interval.&lt;/p&gt;
&lt;p&gt;To further reduce the network load when a server is unreachable, an unreach timer is incremented by 1 at each poll interval, but is set to 0 as each packet is received. If the timer exceeds the &lt;em&gt;unreach threshold&lt;/em&gt; set at 10, the poll exponent is incremented by 1 and the unreach timer set to 0. This continues until the poll exponent reaches the maximum set by the &lt;tt&gt;maxpoll&lt;/tt&gt; option.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: PPSAPI Interface for Precision Time Signals</title>
      <link>/archives/4.2.8-series/kernpps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/kernpps/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/tonea.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;NBS Special Publication 432, 1979&lt;/em&gt;&lt;/a&gt; (out of print)&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:10 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/kernpps/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/kernpps/#ppsapi-application-program-interface&#34;&gt;PPSAPI Application Program Interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;RFC-2783 describes the PPSAPI application programming interface for external precision time signals, such as the pulse-per-second (PPS) signal generated by some radio clocks and cesium oscillators. The PPSAPI provides a generic capability in the ubiquitous Unix kernel which can be used for a wide variety of measurement applications, including network time synchronization and related experiments. The hardware to do this requires only a serial port and a modem control lead, such as the data carrier detect (DCD) lead, which can be driven by an external source via a level converter/pulse generator such as described on the &lt;a href=&#34;/archives/4.2.8-series/pps&#34;&gt;Pulse-per-second (PPS) Signal Interfacing&lt;/a&gt; page. In some systems a parallel port can be used for the same purpose.&lt;/p&gt;
&lt;p&gt;The PPSAPI interface defined in RFC-2783 is the only PPS interface supported in NTP Version 4. The PPSAPI is supported in stock FreeBSD and, with the addition of the &lt;tt&gt;PPSkit&lt;/tt&gt; kernel module, in Linux.&lt;/p&gt;
&lt;p&gt;The special header file &lt;tt&gt;/usr/include/sys/timepps.h&lt;/tt&gt; implements the PPSAPI using whatever primitives are available in each archeticture and operating system. It obsoletes previous APIs based on the &lt;tt&gt;tty_clock&lt;/tt&gt; and &lt;tt&gt;ppsclock&lt;/tt&gt; line disciplines and streams modules, which are no longer supported.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;/archives/drivers/driver22&#34;&gt;PPS Clock Discipline&lt;/a&gt; driver (type 22) uses the PPSAPI in conjunction with a local radio clock or remote NTP server as a reference clock. The driver can also use the PPSAPI as an interface directly to the kernel PPS facility as described on the &lt;a href=&#34;/archives/4.2.8-series/kern&#34;&gt;Kernel Model for Precision Timekeeping&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;ppsapi-application-program-interface&#34;&gt;PPSAPI Application Program Interface&lt;/h4&gt;
&lt;p&gt;The PPSAPI interface provides the following functions:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_create&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Creates a PPS interface instance and returns a handle to it.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_destroy&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Destroys a PPS interface and returns the resources used.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_setparams&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Sets the parameters associated with a PPS interface instance, including offsets to be automatically added to captured timestamps.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_getparams&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Returns the parameters associated with a PPS interface instance.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_getcap&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Returns the capabilities of the current interface and kernel implementation.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_fetch&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Returns the current timestamps associated with a PPS interface instance in either nanoseconds and nanoseconds (Unix &lt;tt&gt;timespec&lt;/tt&gt;) or seconds and fraction (NTP) format.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_kcbind&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;If kernel PPS processing is supported, this binds the support to the associated PPS interface instance.&lt;/p&gt;
&lt;p&gt;The entire PPS interface functionality is currently provided by inline code in the &lt;tt&gt;timepps.h&lt;/tt&gt; header file. While not all implementations support the full PPSAPI specification, they do support all the functions required for the PPS driver described next. The FreeBSD, Linux and Solaris implementations can be used with the stock kernels provided with those systems; however, the Tru64 and SunOS kernels require additional functions not provided in the stock kernels. Solaris users are cautioned that these functions operate improperly in Solaris versions prior to 2.8 with patch Generic_108528-02. Header files for other systems can be found via the web at &lt;a href=&#34;https://www.eecis.udel.edu/~ntp/ntp_spool/software/nanokernel.tar.gz&#34;&gt;nanokernel.tar.gz&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Pulse-Per-Second (PPS) Signal Interfacing</title>
      <link>/archives/4.2.8-series/pps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/pps/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice32.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alice is trying to find the PPS signal connector.&lt;/p&gt;
&lt;p&gt;Last update: 10-Mar-2014 05:17 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/pps/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/pps/#gadget-box&#34;&gt;Gadget Box&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/pps/#operating-system-support&#34;&gt;Operating System Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/pps/#pps-driver&#34;&gt;PPS Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.8-series/pps/#using-the-pulse-per-second-pps-signal&#34;&gt;Using the Pulse-per-Second (PPS) Signal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;Most radio clocks are connected using a serial port operating at speeds of 9600 bps. The accuracy using typical timecode formats, where the on-time epoch is indicated by a designated ASCII character such as carriage-return &lt;tt&gt;‹cr›&lt;/tt&gt;, is normally limited to 100 μs. Using carefully crafted averaging techniques, the NTP algorithms can whittle this down to a few tens of microseconds. However, some radios produce a pulse-per-second (PPS) signal which can be used to improve the accuracy to a few microseconds. This page describes the hardware and software necessary for NTP to use the PPS signal.&lt;/p&gt;
&lt;p&gt;The PPS signal can be connected in either of two ways. On FreeBSD systems (with the PPS_SYNC and pps kernel options) it can be connected directly to the ACK pin of a parallel port. This is the preferred way, as it requires no additional hardware. Alternatively, it can be connected via the DCD pin of a serial port. However, the PPS signal levels are usually incompatible with the serial port interface signals. Note that NTP no longer supports connection via the RD pin of a serial port.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/gadget.jpg&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;A Gadget Box built by Chuck Hanavin&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;gadget-box&#34;&gt;Gadget Box&lt;/h4&gt;
&lt;p&gt;The gadget box shown above is assembled in a 5&amp;quot;x3&amp;quot;x2&amp;quot; aluminum minibox containing the circuitry, serial connector and optional 12-V power connector. A complete set of schematics, PCB artwork, drill templates can be obtained via the web from as &lt;a href=&#34;https://www.eecis.udel.edu/~ntp/ntp_spool/hardware/gadget.tar.Z&#34;&gt;gadget.tar.Z&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The gadget box includes two subcircuits. One of these converts a TTL positive edge into a fixed-width pulse at EIA levels and is for use with a timecode receiver or precision oscillator with a TTL PPS output. The other converts the timecode modulation broadcast by Canadian time/frequency standard station CHU into a 300-bps serial character stream at EIA levels and is for use with the &lt;a href=&#34;/archives/drivers/driver7&#34;&gt;Radio CHU Audio Demodulator/Decoder&lt;/a&gt; driver.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;operating-system-support&#34;&gt;Operating System Support&lt;/h4&gt;
&lt;p&gt;Both the serial and parallel port connection require operating system support, which is available in a few operating systems, including FreeBSD, Linux (with PPSkit patch) and Solaris. Support on an experimental basis is available for several other systems, including SunOS and HP/Compaq/Digital Tru64. The kernel interface described on the &lt;a href=&#34;/archives/4.2.8-series/kernpps&#34;&gt;PPSAPI Interface for Precision Time Signals&lt;/a&gt; page is the only interface currently supported. Older PPS interfaces based on the &lt;tt&gt;ppsclock&lt;/tt&gt; and &lt;tt&gt;tty_clk&lt;/tt&gt; streams modules are no longer supported. The interface consists of the &lt;tt&gt;timepps.h&lt;/tt&gt; header file which is specific to each system. It is included automatically when the distribution is built.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;pps-driver&#34;&gt;PPS Driver&lt;/h4&gt;
&lt;p&gt;PPS support requires is built into some drivers, in particular the WWVB and NMEA drivers, and may be added to other drivers in future. Alternatively, the PPS driver described on the &lt;a href=&#34;/archives/drivers/driver22&#34;&gt;Type 22 PPS Clock Discipline&lt;/a&gt; page can be used. It operates in conjunction with another source that provides seconds numbering. The selected source is designate a prefer peer, as using the &lt;tt&gt;prefer&lt;/tt&gt; option, as described on the &lt;a href=&#34;/archives/4.2.8-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page. The prefer peer is ordinarily the radio clock that provides the PPS signal, but in principle another radio clock or even a remote Internet server could be designated preferred Note that the &lt;tt&gt;pps&lt;/tt&gt; configuration command has been obsoleted by this driver.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;using-the-pulse-per-second-pps-signal&#34;&gt;Using the Pulse-per-Second (PPS) Signal&lt;/h4&gt;
&lt;p&gt;The PPS signal can be used in either of two ways, one using the NTP grooming and mitigation algorithms and the other using the kernel PPS signal support described in the &lt;a href=&#34;/archives/4.2.8-series/kern&#34;&gt;Kernel Model for Precision Timekeeping&lt;/a&gt; page. The presence of  kernel support is automatically detected during the NTP build process and supporting code automatically compiled. In either case, the PPS signal must be present and within nominal jitter and wander tolerances. In addition, the prefer peer must be a truechimer; that is, survive the sanity checks and intersection algorithm. Finally, the offset of the system clock relative to the prefer peer must be within ±0.5 s. The kernel maintains a watchdog timer for the PPS signal; if the signal has not been heard or is out of tolerance for more than some interval, currently two minutes, the kernel discipline is disabled and operation continues as if it were not present.&lt;/p&gt;
&lt;p&gt;An option flag in the driver determines whether the NTP algorithms or kernel support is enabled (if available). For historical reasons, the NTP algorithms are selected by default, since performance is generally better using older, slower systems. However, performance is generally better with kernel support using newer, faster systems.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Quick Start</title>
      <link>/archives/4.2.8-series/quick/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.8-series/quick/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/panda.gif&#34; alt=&#34;gif&#34;&gt;FAX test image for SATNET (1979).&lt;/p&gt;
&lt;p&gt;The baby panda was scanned at University College London and used as a FAX test image for a demonstration of the DARPA Atlantic SATNET Program and the first transatlantic Internet connection in 1978. The computing system used for that demonstration was called the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/papers/fuzz.ps&#34;&gt;Fuzzball&lt;/a&gt;. As it happened, this was also the first Internet multimedia presentation and the first to use a predecessor of NTP in regular operation. The image was widely copied and used for testing purpose throughout much of the 1980s.&lt;/p&gt;
&lt;p&gt;Last update: 1-Dec-2012 04:44 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;For the rank amateur the sheer volume of the documentation collection must be intimidating. However, it doesn&amp;rsquo;t take much to fly the &lt;tt&gt;ntpd&lt;/tt&gt; daemon with a simple configuration where a workstation needs to synchronize to some server elsewhere in the Internet. The first thing is to build the distribution for the particular workstation and install in the usual place. The &lt;a href=&#34;/archives/4.2.8-series/build&#34;&gt;Building and Installing the Distribution&lt;/a&gt; page describes how to do this.&lt;/p&gt;
&lt;p&gt;While it is possible that certain configurations do not need a configuration file, most do. The file, called by default &lt;tt&gt;/etc/ntp.conf&lt;/tt&gt;, need only contain one command specifying a remote server, for instance&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;server foo.bar.com&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Choosing an appropriate remote server is somewhat of a black art, but a suboptimal choice is seldom a problem. The simplest and best is to use the Server Pool Scheme on the &lt;a href=&#34;/archives/4.2.8-series/discover&#34;&gt;Automatic Server Discovery&lt;/a&gt; page. There are about two dozen public time servers operated by the &lt;a href=&#34;http://tf.nist.gov/tf-cgi/servers.cgi&#34;&gt;National Institutes of Science and Technology (NIST)&lt;/a&gt;, &lt;a href=&#34;https://www.usno.navy.mil/USNO/time/ntp&#34;&gt;US Naval Observatory (USNO)&lt;/a&gt;, &lt;a href=&#34;https://nrc.canada.ca/en/certifications-evaluations-standards/canadas-official-time/network-time-protocol-ntp&#34;&gt;Canadian Metrology Centre (CMC)&lt;/a&gt; and many others available on the Internet. Lists of public primary and secondary NTP servers maintained on the &lt;a href=&#34;http://support.ntp.org/Servers/WebHome&#34;&gt;Public NTP Time Servers&lt;/a&gt; page, which is updated frequently. The lists are sorted by country and, in the case of the US, by state. Usually, the best choice is the nearest in geographical terms, but the terms of engagement specified in each list entry should be carefully respected.&lt;/p&gt;
&lt;p&gt;During operation &lt;tt&gt;ntpd&lt;/tt&gt; measures and corrects for incidental clock frequency error and occasionally writes the current value to a file specified by the&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;driftfile /etc/ntp.drift&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;configuration command. If &lt;tt&gt;ntpd&lt;/tt&gt; is stopped and restarted, it initializes the frequency from this file and avoids the potentially lengthy interval to relearn the correction.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s all there is to it, unless some problem in network connectivity or local operating system configuration occurs. The most common problem is some firewall between the workstation and server. System administrators should understand NTP uses UDP port 123 as both the source and destination port and that NTP does not involve any operating system interaction other than to set the system clock. While almost all modern Unix systems have included NTP and UDP port 123 defined in the services file, this should be checked if &lt;tt&gt;ntpd&lt;/tt&gt; fails to come up at all.&lt;/p&gt;
&lt;p&gt;The best way to confirm NTP is working is using the &lt;a href=&#34;/archives/4.2.8-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; utility, although the &lt;a href=&#34;/archives/4.2.8-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt;&lt;/a&gt; utility may be useful in extreme cases. See the documentation pages for further information. Don&amp;rsquo;t forget to check for &lt;a href=&#34;/archives/4.2.8-series/msyslog&#34;&gt;system log messages&lt;/a&gt;. In the most extreme cases the &lt;tt&gt;-d&lt;/tt&gt; option on the &lt;tt&gt;ntpd&lt;/tt&gt; command line results in a blow-by-blow trace of the daemon operations. While the trace output can be cryptic, to say the least, it gives a general idea of what the program is doing and, in particular, details the arriving and departing packets and any errors found.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
