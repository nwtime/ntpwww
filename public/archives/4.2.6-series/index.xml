<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NTP: Network Time Protocol – 4.2.6-series</title>
    <link>/archives/4.2.6-series/</link>
    <description>Recent content in 4.2.6-series on NTP: Network Time Protocol</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/archives/4.2.6-series/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Archives: </title>
      <link>/archives/4.2.6-series/toc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/toc/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;4.2.8p15 is the latest stable and recommended version of NTP. Click &lt;a href=&#34;/archives/4.2.8-series&#34;&gt;here&lt;/a&gt; to read the latest version of the docs.&lt;/p&gt;
&lt;p&gt;Click &lt;a href=&#34;/archives/4.2.6-series&#34;&gt;here&lt;/a&gt; to read the 4.2.6 version of the docs. Refer to the table below for the release announcement for each patch level in the 4.2.6-series.&lt;/p&gt;

&lt;/div&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Release Date&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Release Announcement&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;# of Security Fixes&lt;/th&gt;
&lt;th&gt;# of Fixes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;December 24, 2011&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://lists.ntp.org/pipermail/announce/2011-December/000119.html&#34;&gt;4.2.6p5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;September 22, 2011&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://lists.ntp.org/pipermail/announce/2011-September/000116.html&#34;&gt;4.2.6p4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;January 3, 2011&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://lists.ntp.org/pipermail/announce/2011-January/000111.html&#34;&gt;4.2.6p3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;July 9, 2010&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://lists.ntp.org/pipermail/announce/2010-July/000099.html&#34;&gt;4.2.6p2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;April 9, 2010&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://lists.ntp.org/pipermail/announce/2010-April/000095.html&#34;&gt;4.2.6p1&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;December 9, 2009&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://lists.ntp.org/pipermail/announce/2009-December/000088.html&#34;&gt;4.2.6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1 HIGH&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Access Control Options</title>
      <link>/archives/4.2.6-series/accopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/accopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo6.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The skunk watches for intruders and sprays.&lt;/p&gt;
&lt;p&gt;Last update: 30-Sep-2009 17:16 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/accopt/#access-control-support&#34;&gt;Access Control Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/accopt/#access-control-commands&#34;&gt;Access Control Commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;access-control-support&#34;&gt;Access Control Support&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; daemon implements a general purpose access control list (ACL) containing address/match entries sorted first by increasing address values and then by increasing mask values. A match occurs when the bitwise AND of the mask and the packet source address is equal to the bitwise AND of the mask and address in the list. The list is searched in order with the last match found defining the restriction flags associated with the entry.&lt;/p&gt;
&lt;p&gt;An example may clarify how it works. Our campus has two class-B networks, 128.4 for the ECE and CIS departments and 128.175 for the rest of campus. Let&amp;rsquo;s assume (not true!) that subnet 128.4.1 homes critical services like class rosters and spread sheets. A suitable ACL might be&lt;/p&gt;
&lt;pre&gt;restrict default nopeer				# deny new associations
restrict 128.175.0.0 mask 255.255.0.0 		# allow campus access
restrict 128.4.0.0 mask 255.255.0.0 none	# allow ECE and CIS access
restrict 128.4.1.0 mask 255.255.255.0 notrust # require authentication on subnet 1
restrict time.nist.gov				# allow access
&lt;/pre&gt;
&lt;p&gt;While this facility may be useful for keeping unwanted, broken or malicious clients from congesting innocent servers, it should not be considered an alternative to the NTP authentication facilities. Source address based restrictions are easily circumvented by a determined cracker.&lt;/p&gt;
&lt;h4 id=&#34;access-control-commands&#34;&gt;Access Control Commands&lt;/h4&gt;
&lt;dt id=&#34;discard&#34;&gt;&lt;tt&gt;discard [ average _avg_ ][ minimum _min_ ] [ monitor _prob_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the parameters of the rate control facility which protects the server from client abuse. If the &lt;tt&gt;limited&lt;/tt&gt; flag is present in the ACL, packets that violate these limits are discarded. If in addition the &lt;tt&gt;kod&lt;/tt&gt; restriction is present, a kiss-o&#39;-death packet is returned.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;average &lt;em&gt;avg&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the minimum average interpacket spacing (minimum average headway time) in log&lt;sub&gt;2&lt;/sub&gt; s with default 3.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;minimum &lt;em&gt;min&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the minimum interpacket spacing (guard time) in log&lt;sub&gt;2&lt;/sub&gt; s with default 1.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;monitor&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the probability of discard for packets that overflow the rate-control window. This is a performance optimization for servers with aggregate arrivals of 1000 packets per second or more.&lt;/p&gt;
&lt;dt id=&#34;restrict&#34;&gt;&lt;tt&gt;restrict _address_ [mask _mask_] [_flag_][...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The &lt;tt&gt;&lt;em&gt;address&lt;/em&gt;&lt;/tt&gt; argument expressed in dotted-quad form is the address of a host or network. Alternatively, the &lt;tt&gt;&lt;em&gt;address&lt;/em&gt;&lt;/tt&gt; argument can be a valid host DNS name. The &lt;tt&gt;&lt;em&gt;mask&lt;/em&gt;&lt;/tt&gt; argument expressed in dotted-quad form defaults to 255.255.255.255, meaning that the &lt;tt&gt;&lt;em&gt;address&lt;/em&gt;&lt;/tt&gt; is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0) is always included and is always the first entry in the list. Note that the text string &lt;tt&gt;default&lt;/tt&gt;, with no mask option, may be used to indicate the default entry.&lt;/p&gt;
&lt;p&gt;Some flags have the effect to deny service, some have the effect to enable service and some are conditioned by other flags. The flags. are not orthogonal, in that more restrictive flags will often make less restrictive ones redundant. The flags that deny service are classed in two categories, those that restrict time service and those that restrict informational queries and attempts to do run-time reconfiguration of the server. One or more of the following flags may be specified:&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;flake&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Discard received NTP packets with probability 0.1; that is, on average drop one packet in ten. This is for testing and amusement. The name comes from Bob Braden&amp;rsquo;s &lt;em&gt;flakeway&lt;/em&gt;, which once did a similar thing for early Internet testing.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;ignore&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Deny packets of all kinds, including &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;kod&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Send a kiss-o&#39;-death (KoD) packet if the &lt;tt&gt;limited&lt;/tt&gt; flag is present and a packet violates the rate limits established by the &lt;tt&gt;discard&lt;/tt&gt; command. KoD packets are themselves rate limited for each source address separately. If this flag is not present, packets that violate the rate limits are discarded.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;limited&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Deny time service if the packet violates the rate limits established by the &lt;tt&gt;discard&lt;/tt&gt; command. This does not apply to &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;lowpriotrap&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Declare traps set by matching hosts to be low priority. The number of traps a server can maintain is limited (the current limit is 3). Traps are usually assigned on a first come, first served basis, with later trap requestors being denied service. This flag modifies the assignment algorithm by allowing low priority traps to be overridden by later requests for normal priority traps.&lt;/p&gt;
&lt;p&gt;    mssntp&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Enable Microsoft Windows MS-SNTP authentication using Active Directory services. &lt;strong&gt;Note: Potential users should be aware that these services involve a TCP connection to another process that could potentially block, denying services to other users. Therefore, this flag should be used only for a dedicated server with no clients other than MS-SNTP&lt;/strong&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;nomodify&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Deny &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries which attempt to modify the state of the server (i.e., run time reconfiguration). Queries which return information are permitted.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;noquery&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Deny &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries. Time service is not affected.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;nopeer&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Deny packets that might mobilize an association unless authenticated. This includes broadcast, symmetric-active and manycast server packets when a configured association does not exist. Note that this flag does not apply to packets that do not attempt to mobilize an association.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;noserve&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Deny all packets except &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; queries.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;notrap&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Decline to provide mode 6 control message trap service to matching hosts. The trap service is a subsystem of the &lt;tt&gt;ntpdc&lt;/tt&gt; control message protocol which is intended for use by remote event logging programs.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;notrust&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Deny packets that are not cryptographically authenticated. Note carefully how this flag interacts with the &lt;tt&gt;auth&lt;/tt&gt; option of the &lt;tt&gt;enable&lt;/tt&gt; and &lt;tt&gt;disable&lt;/tt&gt; commands. If &lt;tt&gt;auth&lt;/tt&gt; is enabled, which is the default, authentication is required for all packets that might mobilize an association. If &lt;tt&gt;auth&lt;/tt&gt; is disabled, but the &lt;tt&gt;notrust&lt;/tt&gt; flag is not present, an association can be mobilized whether or not authenticated. If &lt;tt&gt;auth&lt;/tt&gt; is disabled, but the &lt;tt&gt;notrust&lt;/tt&gt; flag is present, authentication is required only for the specified address/mask range.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;ntpport&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;non-ntpport&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    This is actually a match algorithm modifier, rather than a restriction flag. Its presence causes the restriction entry to be matched only if the source port in the packet is the standard NTP UDP port (123). Both &lt;tt&gt;ntpport&lt;/tt&gt; and &lt;tt&gt;non-ntpport&lt;/tt&gt; may be specified. The &lt;tt&gt;ntpport&lt;/tt&gt; is considered more specific and is sorted later in the list.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;version&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Deny packets that do not match the current NTP version.&lt;/p&gt;
&lt;p&gt;Default restriction list entries with the flags &lt;tt&gt;ignore, ntpport&lt;/tt&gt;, for each of the local host&amp;rsquo;s interface addresses are inserted into the table at startup to prevent the server from attempting to synchronize to its own time. A default entry is also always present, though if it is otherwise unconfigured; no flags are associated with the default entry (i.e., everything besides your own NTP server is unrestricted).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Association Management</title>
      <link>/archives/4.2.6-series/assoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/assoc/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice51.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Make sure who your friends are.&lt;/p&gt;
&lt;p&gt;Last update: 21:56 UTC Friday, December 28, 2007&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/assoc/#association-modes&#34;&gt;Association Modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/assoc/#clientserver-mode&#34;&gt;Client/Server Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/assoc/#symmetric-activepassive-mode&#34;&gt;Symmetric Active/Passive Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/assoc/#broadcastmulticast-modes&#34;&gt;Broadcast/Multicast Modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/assoc/#manycast-mode&#34;&gt;Manycast Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/assoc/#orphan-mode&#34;&gt;Orphan Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/assoc/#burst-options&#34;&gt;Burst Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;association-modes&#34;&gt;Association Modes&lt;/h4&gt;
&lt;p&gt;This page describes the various modes of operation provided in NTPv4. Details about the configuration commands and options are given on the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Configuration Options&lt;/a&gt; page. Details about the cryptographic authentication schemes are given on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. Details about the automatic server discovery schemes are described on the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery Schemes&lt;/a&gt; page. Additional information is available in the papers, reports, memoranda and briefings on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ntp.html&#34;&gt;NTP Project&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;There are three types of associations in NTP: persistent, preemptable and ephemeral. Persistent associations are mobilized by a configuration command and never demobilized. Preemptable associations, which are new to NTPv4, are mobilized by a configuration command which includes the prempt option and are demobilized by a &amp;ldquo;better&amp;rdquo; server or by timeout, but only if the number of survivors exceeds the threshold set by the tos maxclock configuration command. Ephemeral associations are mobilized upon arrival of designated messages and demobilized by timeout.&lt;/p&gt;
&lt;p&gt;Ordinarily, successful mobilization of ephemeral associations requires the server to be cryptographically authenticated to the client. This can be done using either symmetric key or Autokey public key cryptography, as described in the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;There are three principal modes of operation in NTP: client/server, symmetric active/passive and broadcast/multicast. There are three automatic server discovery schemes in NTP: broadcast/multicast, manycast and pool described on the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery Schemes&lt;/a&gt; page. In addition, the orphan mode and burst options described on this page can be used in appropriate cases.&lt;/p&gt;
&lt;p&gt;Following is a summary of the operations in each mode. Note that reference to option applies to the commands described on the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Configuration Options&lt;/a&gt; page. See that page for applicability and defaults.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clientserver-mode&#34;&gt;Client/Server Mode&lt;/h4&gt;
&lt;p&gt;Client/server mode is the most common configuration in the Internet today. It operates in the classic remote-procedure-call (RPC) paradigm with stateless servers and stateful clients. In this mode a host sends a client (mode 3) request to the specified server and expects a server (mode 4) reply at some future time. In some contexts this would be described as a &amp;ldquo;pull&amp;rdquo; operation, in that the host pulls the time and related values from the server.&lt;/p&gt;
&lt;p&gt;A host is configured in client mode using the &lt;tt&gt;server&lt;/tt&gt; (sic) command and specifying the server DNS name or IPv4 or IPv6 address; the server requires no prior configuration. The &lt;tt&gt;iburst&lt;/tt&gt; option described later on this page is recommended for clients, as this speeds up initial synchronization from several minutes to several seconds. The &lt;tt&gt;burst&lt;/tt&gt; option described later on this page can be useful to reduce jitter on very noisy dial-up or ISDN network links.&lt;/p&gt;
&lt;p&gt;Ordinarily, the program automatically manages the poll interval between the default minimum and maximum values. The &lt;tt&gt;minpoll&lt;/tt&gt; and &lt;tt&gt;maxpoll&lt;/tt&gt; options can be used to bracket the range. Unless noted otherwise, these options should not be used with reference clock drivers.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;symmetric-activepassive-mode&#34;&gt;Symmetric Active/Passive Mode&lt;/h4&gt;
&lt;p&gt;Symmetric active/passive mode is intended for configurations were a clique of low-stratum peers operate as mutual backups for each other. Each peer operates with one or more primary reference sources, such as a radio clock, or a set of secondary (stratum, 2) servers known to be reliable and authentic. Should one of the peers lose all reference sources or simply cease operation, the other peers will automatically reconfigure so that time and related values can flow from the surviving peers to all hosts in the subnet. In some contexts this would be described as a &amp;ldquo;push-pull&amp;rdquo; operation, in that the peer either pulls or pushes the time and related values depending on the particular configuration.&lt;/p&gt;
&lt;p&gt;In symmetric active mode a peer symmetric active (mode 1) message to a designated peer. If a matching configured symmetric active association is found, the designated peer returns a symmetric active message. If no matching association is found, the designated peer mobilizes a ephemeral symmetric passive association and returns a symmetric passive (mode 2) message. Since an intruder can impersonate a symmetric active peer and cause a spurious symmetric passive association to be mobilized, symmetric passive mode should always be cryptographically validated.&lt;/p&gt;
&lt;p&gt;A peer is configured in symmetric active mode using the &lt;tt&gt;peer&lt;/tt&gt; command and specifying the other peer DNS name or IPv4 or IPv6 address. The &lt;tt&gt;burst&lt;/tt&gt; and &lt;tt&gt;iburst&lt;/tt&gt; options should not be used in symmetric modes, as this can upset the intended symmetry of the protocol and result in spurious duplicate or dropped messages.&lt;/p&gt;
&lt;p&gt;As symmetric modes are most often used as root servers for moderate to large subnets where rapid response is required, it is generally best to set the minimum and maximum poll intervals of each root server to the same value using the &lt;tt&gt;minpoll&lt;/tt&gt; and &lt;tt&gt;maxpoll&lt;/tt&gt; options.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;broadcastmulticast-modes&#34;&gt;Broadcast/Multicast Modes&lt;/h4&gt;
&lt;p&gt;NTP broadcast and multicast modes are intended for configurations involving one or a few servers and a possibly very large client population. Broadcast mode can be used with Ethernet, FDDI and WiFi spans interconnected by hubs or switches. Ordinarily, broadcast packets do not extend beyond a level-3 router. Where service is intended beyond a level-3 router, multicast mode can be used. Additional information is on the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic NTP Configuration Options&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;manycast-mode&#34;&gt;Manycast Mode&lt;/h4&gt;
&lt;p&gt;Manycast mode is a automatic discovery and configuration paradigm new to NTPv4. It is intended as a means for a multicast client to troll the nearby network neighborhood to find cooperating manycast servers, validate them using cryptographic means and evaluate their time values with respect to other servers that might be lurking in the vicinity. The intended result is that each manycast client mobilizes ephemeral client associations with some number of the &amp;ldquo;best&amp;rdquo; of the nearby manycast servers, yet automatically reconfigures to sustain this number of servers should one or another fail. Additional information is on the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic NTP Configuration Options&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;orphan-mode&#34;&gt;Orphan Mode&lt;/h4&gt;
&lt;p&gt;Sometimes an NTP subnet becomes isolated from all UTC sources such as local reference clocks or Internet time servers. In such cases it may be necessary that the subnet servers and clients remain synchronized to a common timescale, not necessarily the UTC timescale. Previously, this function was provided by the local clock driver to simulate a UTC source. A server with this driver could be used to synchronize other hosts in the subnet directly or indirectly.&lt;/p&gt;
&lt;p&gt;There are many disadvantages using the local clock driver, primarily that the subnet is vulnerable to single-point failures and multiple server redundancy is not possible. Orphan mode is intended to replace the local clock driver. It provides a single simulated UTC source with multiple servers and provides seamless switching as servers fail and recover.&lt;/p&gt;
&lt;p&gt;A common configuration for private networks includes one or more core servers operating at the lowest stratum. Good practice is to configure each of these servers as backup for the others using symmetric or broadcast modes. As long as at least one core server can reach a UTC source, the entire subnet can synchronize to it.&lt;/p&gt;
&lt;p&gt;If no UTC sources are available to any core server, one of them can provide a simulated UTC source for all other hosts in the subnet. However, only one core server can simulate the UTC source and all direct dependents, called orphan children, must select the same one, called the orphan parent.&lt;/p&gt;
&lt;p&gt;A host is enabled for orphan mode using the &lt;tt&gt;tos orphan &lt;em&gt;stratum&lt;/em&gt;&lt;/tt&gt; command, where &lt;tt&gt;&lt;em&gt;stratum&lt;/em&gt;&lt;/tt&gt; is some stratum less than 16 and greater than any anticipated stratum that might occur with configured Internet time servers. However, sufficient headroom should remain so every subnet host dependent on the orphan children has stratum less than 16. Where no associations for other servers or reference clocks are configured, the orphan stratum can be set to 1. These are the same considerations that guide the local clock driver stratum selection.&lt;/p&gt;
&lt;p&gt;A orphan parent with no sources shows reference ID &lt;code&gt;LOOP&lt;/code&gt; if operating at stratum 1 and 127.0.0.1 (Unix loopback address) otherwise. While ordinary NTP clients use a selection metric based on delay and dispersion, orphan children use a metric computed from the IP address of each core server. Each orphan child chooses the orphan parent as the root server with the smallest metric.&lt;/p&gt;
&lt;p&gt;For orphan mode to work well, each core server with available sources should operate at the same stratum. All core servers and orphan children should include the same &lt;code&gt;tos&lt;/code&gt; command in the configuration file. Each orphan child should include in the configuration file all root servers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/peer.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;For example, consider the peer network configuration above, where two or more campus primary or secondary (stratum 2) servers are configured with reference clocks or public Internet primary servers and with each other using symmetric modes. With this configuration a server that loses all sources continues to discipline the system clock using the other servers as backup. Only the core servers and orphan children need to be enabled for orphan mode.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/broad.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;For broadcast networks each core server is configured in both broadcast server and broadcast client modes as shown above. Orphan children operate as broadcast clients of all core servers. As in peer networks, the core servers back up each other and only they and the orphan children need to be enabled for orphan mode.&lt;/p&gt;
&lt;p&gt;In normal operation subnet hosts operate below stratum 5, so the subnet is automatically configured as described in the NTP specification. If all UTC sources are lost, all core servers become orphans and the orphan children will select the same root server to become the orphan parent.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;burst-options&#34;&gt;Burst Options&lt;/h4&gt;
&lt;p&gt;There are two burst options where a single poll event triggers a burst of eight packets at 2-s intervals instead of the normal one packet. They should be used only with the &lt;tt&gt;server&lt;/tt&gt; and &lt;tt&gt;pool&lt;/tt&gt; commands, but not with reference clock drivers nor symmetric peers. The &lt;tt&gt;burst&lt;/tt&gt; option sends a burst when the server is reachable, while the &lt;tt&gt;iburst&lt;/tt&gt; option sends a burst when the server is unreachable. Each mode is independently of the other and both can be used at the same time. In either mode the client sends one packet, waits for the reply, then sends the remaining packets in the burst. This may be useful to allow a modem to complete a call.&lt;/p&gt;
&lt;p&gt;In both modes received server packets update the clock filter, which selects the best (most accurate) time values. When the last packet in the burst is sent, the next received packet updates the system variables and adjusts the system clock as if only a single packet exchange had occurred.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;iburst&lt;/tt&gt; option is useful where the system clock must be set quickly or when the network attachment requires an initial calling or training sequence. The burst is initiated only when the server first becomes reachable. This improves accuracy with intermittent connections typical of PPP and ISDN services. Outliers due to initial dial-up delays, etc., are avoided and the client sets the clock within a few seconds after the first received packet.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;burst&lt;/tt&gt; option can be configured in cases of excessive network jitter or when the network attachment requires an initial calling or training sequence. The burst is initiated at each poll interval when the server is reachable. The number of packets in the burst is determined by the poll interval so that the average interval between packets is no less than 16. At a poll interval of 16 s, only one packet is sent in the burst; at 32 s, two packets are sent and so forth until at 128 s and above eight packets are sent.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Authentication Options</title>
      <link>/archives/4.2.6-series/authopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/authopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice44.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our resident cryptographer; now you see him, now you don&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Last update: 	14-Apr-2010 20:49 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#symmetric-key-cryptography&#34;&gt;Symmetric Key Cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#public-key-cryptography&#34;&gt;Public Key Cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#ntp-secure-groups&#34;&gt;NTP Secure Groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#identity-schemes-and-cryptotypes&#34;&gt;Identity Schemes and Cryptotypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#authentication-commands&#34;&gt;Authentication Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#error-codes&#34;&gt;Error Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This page describes the various cryptographic authentication provisions in NTPv4. Details about the configuration commands and options are given on the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Configuration Options&lt;/a&gt; page. Details about the automatic server discovery schemes are described on the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery Schemes&lt;/a&gt; page. Additional information is available in the papers, reports, memoranda and briefings cited on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ntp.html&#34;&gt;NTP Project&lt;/a&gt; page. Authentication support allows the NTP client to verify that servers are in fact known and trusted and not intruders intending accidentally or intentionally to masquerade as a legitimate server.&lt;/p&gt;
&lt;p&gt;The NTPv3 specification RFC-1305 defines a scheme properly described as symmetric key cryptography. It uses the Data Encryption Standard (DES) algorithm operating in cipher-block chaining (CBC) mode. Subsequently, this scheme was replaced by the RSA Message Digest 5 (MD5) algorithm commonly called keyed-MD5. Either algorithm computes a message digest or one-way hash which can be used to verify the client has the same key and key identifier as the server. If the OpenSSL cryptographic library is installed, support is available for all algorithms included in the library. Note however, if conformance to FIPS 140-2 is required, only a limited subset of these algorithms is available.&lt;/p&gt;
&lt;p&gt;NTPv4 includes the NTPv3 scheme and optionally a new scheme based on public key cryptography and called Autokey. Public key cryptography is generally considered more secure than symmetric key cryptography, since the security is based on private and public values which are generated by each participant and where the private value is never revealed. Autokey uses X.509 public certificates, which can be produced by commercial services, utility programs in the OpenSSL software library or the &lt;a href=&#34;/archives/4.2.6-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt;&lt;/a&gt; utility program in the NTP software distribution.&lt;/p&gt;
&lt;p&gt;While the algorithms for MD5 symmetric key cryptography are included in the NTPv4 software distribution, modern algorithms for symmetric key and public key cryptograpny requires the OpenSSL software library to be installed before building the NTP distribution. This library is available from &lt;a href=&#34;https://www.openssl.org&#34;&gt;https://www.openssl.org&lt;/a&gt; and can be installed using the procedures outlined in the &lt;a href=&#34;/archives/4.2.6-series/build&#34;&gt;Building and Installing the Distribution&lt;/a&gt; page. Once installed, the configure and build process automatically detects the library and links the library routines required.&lt;/p&gt;
&lt;p&gt;Note that according to US law, NTP binaries including OpenSSL library components, including the OpenSSL library itself, cannot be exported outside the US without license from the US Department of Commerce. Builders outside the US are advised to obtain the OpenSSL library directly from OpenSSL, which is outside the US, and build outside the US.&lt;/p&gt;
&lt;p&gt;Authentication is configured separately for each association using the &lt;tt&gt;key&lt;/tt&gt; or &lt;tt&gt;autokey&lt;/tt&gt; option of the &lt;tt&gt;server&lt;/tt&gt; configuration command, as described in the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Server Options&lt;/a&gt; page, and the options described on this page. The &lt;a href=&#34;/archives/4.2.6-series/keygen&#34;&gt;ntp-keygen&lt;/a&gt; page describes the files required for the various authentication schemes. Further details are in the briefings, papers and reports at the NTP project page linked from &lt;a href=&#34;http://www.ntp.org&#34;&gt;www.ntp.org&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;symmetric-key-cryptography&#34;&gt;Symmetric Key Cryptography&lt;/h4&gt;
&lt;p&gt;The original RFC-1305 specification allows any one of possibly 65,534 keys (excluding zero), each distinguished by a 32-bit key ID, to authenticate an association. The servers and clients involved must agree on the key, key ID and key type to authenticate NTP packets. If an NTP packet includes a message authentication code (MAC), consisting of a key ID and message digest, it is accepted only if the key ID matches a trusted key and the message digest is verified with this key. Note that for historic reasons the message digest algorithm is not consistent with RFC-1828. The digest is computed directly from the concatenation of the key string followed by the packet contents with the exception of the MAC itself.&lt;/p&gt;
&lt;p&gt;Keys and related information are specified in a keys file, usually called &lt;tt&gt;ntp.keys&lt;/tt&gt;, which must be distributed and stored using secure means beyond the scope of the NTP protocol itself. Besides the keys used for ordinary NTP associations, additional keys can be used as passwords for the &lt;tt&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq&#34;&gt;ntpq&lt;/a&gt;&lt;/tt&gt; and &lt;tt&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;ntpdc&lt;/a&gt;&lt;/tt&gt; utility programs. Ordinarily, the &lt;tt&gt;ntp.keys&lt;/tt&gt; file is generated by the &lt;tt&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen&#34;&gt;ntp-keygen&lt;/a&gt;&lt;/tt&gt; program, but it can be constructed and edited using an ordinary text editor. The program generates pseudo-random keys, one key for each line. Each line consists of three fields, the key identifier as a decimal number from 1 to 65534 inclusive, a key type chosen from the keywords of the &lt;tt&gt;digest&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; command, and a 20-character printable ASCII string or a 40-character hex string as the key itself.&lt;/p&gt;
&lt;p&gt;When &lt;tt&gt;ntpd&lt;/tt&gt; is first started, it reads the key file specified by the &lt;tt&gt;keys&lt;/tt&gt; command and installs the keys in the key cache. However, individual keys must be activated with the &lt;tt&gt;trustedkey&lt;/tt&gt; configuration command before use. This allows, for instance, the installation of possibly several batches of keys and then activating a key remotely using &lt;tt&gt;ntpdc&lt;/tt&gt;. The &lt;tt&gt;requestkey&lt;/tt&gt; command selects the key ID used as the password for the &lt;tt&gt;ntpdc&lt;/tt&gt; utility, while the &lt;tt&gt;controlkey&lt;/tt&gt; command selects the key ID used as the password for the &lt;tt&gt;ntpq&lt;/tt&gt; utility.&lt;/p&gt;
&lt;p&gt;By default, the message digest algorithm is MD5 selected by the key type &lt;tt&gt;M&lt;/tt&gt; in the keys file. However, if the OpenSSL library is installed, any message digest algorithm supported by that library can be used. The key type is selected as the algorithm name given in the OpenSSL documentation. The key type is associated with the key and can be different for different keys. The server and client must share the same key, key ID and key type and both must be trusted. Note that if conformance to FIPS 140-2 is required, the message digest algorithm must conform to the Secure Hash Standard (SHS), which requires an algorithm from the Secure Hash Algorithm (SHA) family, and the digital signature encryption algorithm, if used, must conform to the Digital Signature Standard (DSS), which requires the Digital Signature Algorithm (DSA).&lt;/p&gt;
&lt;p&gt;In addition to the above means, &lt;tt&gt;ntpd&lt;/tt&gt; now supports Microsoft Windows MS-SNTP authentication using Active Directory services. This support was contributed by the Samba Team and is still in development. It is enabled using the &lt;tt&gt;mssntp&lt;/tt&gt; flag of the &lt;tt&gt;restrict&lt;/tt&gt; command described on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Access Control Options&lt;/a&gt; page. &lt;strong&gt;Note: Potential users should be aware that these services involve a TCP connection to another process that could potentially block, denying services to other users. Therefore, this flag should be used only for a dedicated server with no clients other than MS-SNTP.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;public-key-cryptography&#34;&gt;Public Key Cryptography&lt;/h4&gt;
&lt;p&gt;NTPv4 supports the Autokey security protocol, which is based on public key cryptography. The Autokey Version 2 protocol described on the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/proto.html&#34;&gt;Autokey Protocol&lt;/a&gt; page verifies packet integrity using MD5 message digests and verifies the source using digital signatures and any of several digest/signature schemes. Optional identity schemes described on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ident.html&#34;&gt;Autokey Identity Schemes&lt;/a&gt; page are based on cryptographic challenge/response exchanges. These schemes provide strong security against replay with or without message modification, spoofing, masquerade and most forms of clogging attacks. These schemes are described along with an executive summary, current status, briefing slides and reading list on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/autokey.html&#34;&gt;Autonomous Authentication&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Autokey authenticates individual packets using cookies bound to the IP source and destination addresses. The cookies must have the same addresses at both the server and client. For this reason operation with network address translation schemes is not possible. This reflects the intended robust security model where government and corporate NTP servers are operated outside firewall perimeters.&lt;/p&gt;
&lt;p&gt;There are three timeouts associated with the Autokey scheme. The key list timeout, which defaults to about 1.1 h, specifies the interval between generating new key lists. The revoke timeout, which defaults to about 36 h, specifies the interval between generating new private values. The restart timeout, with default about 5 d, specifies the interval between protocol restarts to refresh public values. In general, the behavior when these timeouts expire is not affected by the issues discussed on this page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;ntp-secure-groups&#34;&gt;NTP Secure Groups&lt;/h4&gt;
&lt;p&gt;NTP secure groups are used to define cryptographic compartments and security hierarchies. All hosts belonging to a secure group have the same group name but different host names. The string specified in the &lt;tt&gt;host&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; command is the name of the host and the name used in the host key, sign key and certificate files. The string specified in the &lt;tt&gt;ident&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; command is the group name of all group hosts and the name used in the identity files. The file naming conventions are described on the &lt;a href=&#34;/archives/4.2.6-series/keygen&#34;&gt;ntp-keygen&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Each group includes one or more trusted hosts (THs) operating at the root, or lowest stratum in the group. The group name is used in the subject and issuer fields of the TH self-signed trusted certificate for these hosts. The host name is used in the subject and issuer fields of the self-signed certificates for all other hosts.&lt;/p&gt;
&lt;p&gt;All group hosts are configured to provide an unbroken path, called a certificate trail, from each host, possibly via intermediate hosts and ending at a TH. When a host starts up, it recursively retrieves the certificates along the trail in order to verify group membership and avoid masquerade and middleman attacks.&lt;/p&gt;
&lt;p&gt;Secure groups can be configured as hierarchies where a TH of one group can be a client of one or more other groups operating at a lower stratum. A certificate trail consist of a chain of hosts starting at a client, leading through secondary servers of progressively lower stratum and ending at a TH. In one scenario, groups RED and GREEN can be cryptographically distinct, but both be clients of group BLUE operating at a lower stratum. In another scenario, group CYAN can be a client of multiple groups YELLOW and MAGENTA, both operating at a lower stratum. There are many other scenarios, but all must be configured to include only acyclic certificate trails.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;identity-schemes-and-cryptotypes&#34;&gt;Identity Schemes and Cryptotypes&lt;/h4&gt;
&lt;p&gt;All configurations include a public/private host key pair and matching certificate. Absent an identity scheme, this is a Trusted Certificate (TC) scheme. There are three identity schemes, IFF, GQ and MV described on the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/ident.html&#34;&gt;Identity Schemes&lt;/a&gt; page. With these schemes all servers in the group have encrypted server identity keys, while clients have nonencrypted client identity parameters. The client parameters can be obtained from a trusted agent (TA), usually one of the THs of the lower stratum group. Further information on identity schemes is on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ident.html&#34;&gt;Autokey Identity Schemes&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;A specific combination of authentication and identity schemes is called a cryptotype, which applies to clients and servers separately. A group can be configured using more than one cryptotype combination, although not all combinations are interoperable. Note however that some cryptotype combinations may successfully intemperate with each other, but may not represent good security practice. The server and client cryptotypes are defined by the following codes.&lt;/p&gt;
&lt;dt&gt;NONE&lt;/dt&gt;
&lt;p&gt;A client or server is type NONE if authentication is not available or not configured. Packets exchanged between client and server have no MAC.&lt;/p&gt;
&lt;dt&gt;AUTH&lt;/dt&gt;
&lt;p&gt;A client or server is type AUTH if the &lt;tt&gt;key&lt;/tt&gt; option is specified with the &lt;tt&gt;server&lt;/tt&gt; configuration command and the client and server keys are compatible. Packets exchanged between clients and servers have a MAC.&lt;/p&gt;
&lt;dt&gt;PC&lt;/dt&gt;
&lt;p&gt;A client or server is type PC if the &lt;tt&gt;autokey&lt;/tt&gt; option is specified with the &lt;tt&gt;server&lt;/tt&gt; configuration command and compatible host key and private certificate files are present. Packets exchanged between clients and servers have a MAC.&lt;/p&gt;
&lt;dt&gt;TC&lt;/dt&gt;
&lt;p&gt;A client or server is type TC if the &lt;tt&gt;autokey&lt;/tt&gt; option is specified with the &lt;tt&gt;server&lt;/tt&gt; configuration command and compatible host key and public certificate files are present. Packets exchanged between clients and servers have a MAC.&lt;/p&gt;
&lt;dt&gt;IDENT&lt;/dt&gt;
&lt;p&gt;A client or server is type IDENT if the &lt;tt&gt;autokey&lt;/tt&gt; option is specified with the &lt;tt&gt;server&lt;/tt&gt; configuration command and compatible host key, public certificate and identity scheme files are present. Packets exchanged between clients and servers have a MAC.&lt;/p&gt;
&lt;/dl&gt;
&lt;p&gt;The compatible cryptotypes for clients and servers are listed in the following table.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Client/Server&lt;/th&gt;
&lt;th&gt;NONE&lt;/th&gt;
&lt;th&gt;AUTH&lt;/th&gt;
&lt;th&gt;PC&lt;/th&gt;
&lt;th&gt;TC&lt;/th&gt;
&lt;th&gt;IDENT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NONE&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes*&lt;/td&gt;
&lt;td&gt;yes*&lt;/td&gt;
&lt;td&gt;yes*&lt;/td&gt;
&lt;td&gt;yes*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AUTH&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PC&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TC&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IDENT&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;* These combinations are not valid if the restriction list includes the &lt;tt&gt;notrust&lt;/tt&gt; option.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;configuration&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;Autokey has an intimidating number of configuration options, most of which are not necessary in typical scenarios. The simplest scenario consists of a TH where the host name of the TH is also the name of the group. For the simplest identity scheme TC, the TH generates host key and trusted certificate files using the &lt;tt&gt;ntp-keygen -T&lt;/tt&gt; command, while the remaining group hosts use the same command with no options to generate the host key and public certificate files. All hosts use the &lt;tt&gt;crypto&lt;/tt&gt; configuration command with no options. Configuration with passwords is described in the &lt;a href=&#34;/archives/4.2.6-series/keygen&#34;&gt;ntp-keygen&lt;/a&gt; page. All group hosts are configured as an acyclic tree with root the TH.&lt;/p&gt;
&lt;p&gt;When an identity scheme is included, for example IFF, the TH generates host key, trusted certificate and private server identity key files using the &lt;tt&gt;ntp-keygen -T -I -i &lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; command, where &lt;tt&gt;&lt;em&gt;group&lt;/em&gt;&lt;/tt&gt; is the group name. The remaining group hosts use the same command as above. All hosts use the &lt;tt&gt;crypto ident group&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;p&gt;Hosts with no dependent clients can retrieve client parameter files from an archive or web page. The &lt;tt&gt;ntp-keygen&lt;/tt&gt; can export these data using the &lt;tt&gt;-e&lt;/tt&gt; option. Hosts with dependent clients other than the TH must retrieve copies of the server key files using secure means. The &lt;tt&gt;ntp-keygen&lt;/tt&gt; can export these data using the &lt;tt&gt;-q&lt;/tt&gt; option. In either case the data are installed as a file and then renamed using the name given as the first line in the file, but without the filestamp.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;examples&#34;&gt;Examples&lt;/h4&gt;
&lt;p&gt;Consider a scenario involving three secure groups RED, GREEN and BLUE. RED and BLUE are typical of national laboratories providing certified time to the Internet at large. As shown ion the figure, RED TH mort and BLUE TH macabre run NTP symmetric mode with each other for monitoring or backup. For the purpose of illustration, assume both THs are primary servers. GREEN is typical of a large university providing certified time to the campus community. GREEN TH howland is a broadcast client of both RED and BLUE. BLUE uses the IFF scheme, while both RED and GREEN use the GQ scheme, but with different keys. YELLOW is a client of GREEN and for purposes of illustration a TH for YELLOW.&lt;/p&gt;
&lt;p&gt;The BLUE TH macabre uses configuration commands&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto pw qqsv ident blue&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;peer mort autokey&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;broadcast &lt;em&gt;address&lt;/em&gt; autokey&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;where &lt;tt&gt;qqsv&lt;/tt&gt; is the password for macabre files and &lt;em&gt;address&lt;/em&gt; is the broadcast address for the local LAN. It generates BLUE files using the commands&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp-keygen -p qqsv -T -G -i blue&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;ntp-keygen -p qqsv -e &amp;gt;ntpkey_gqpar_blue&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The first line generates the host, trusted certificate and private GQ server keys file. The second generates the public GQ client parameters file, which can have any nonconflicting mnemonic name.&lt;/p&gt;
&lt;p&gt;The RED TH mort uses configuration commands&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto pw xxx ident red&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;peer macabre autokey&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;broadcast &lt;em&gt;address&lt;/em&gt; autokey&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;where &lt;tt&gt;xxx&lt;/tt&gt; is the password for mort files. It generates RED files using the commands&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp-keygen -p xxx -T -I -i red&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;ntp-keygen -p xxx -e &amp;gt;ntpkey_iffpar_red&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The GREEN TH howland uses configuration commands&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto pw yyy ident green&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;broadcastclient&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;where &lt;tt&gt;yyy&lt;/tt&gt; is the password for howland files. It generates GREEN files using the commands&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp-keygen -p yyy -T -G -i green&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;ntp-keygen -p yyy -e &amp;gt;ntpkey_gqpar_green&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;ntp-keygen -p yyy -q zzz &amp;gt;zzz_ntpkey_gqkey_green&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The first two lines serve the same purpose as the preceding examples. The third line generates a copy of the private GREEN server file for use on another server in the same group, say YELLOW, but encrypted with the &lt;tt&gt;zzz&lt;/tt&gt; password.&lt;/p&gt;
&lt;p&gt;A client of GREEN, for example YELLOW, uses the configuration commands&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto pw abc ident green&lt;/tt&gt;&lt;br&gt;
&lt;tt&gt;server howland autokey&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;where &lt;tt&gt;abc&lt;/tt&gt; is the password for its files. It generates files using the command&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp-keygen -p abc&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The client retrieves the client file for that group from a public archive or web page using nonsecure means. In addition, each server in a group retrieves the private server keys file from the TH of that group, but it is encrypted and so must be sent using secure means. The files are installed in the keys directory with name taken from the first line in the file, but without the filestamp.&lt;/p&gt;
&lt;p&gt;Note that if servers of different groups, in this case RED and BLUE, share the same broadcast media, each server must have client files for all groups other than its own, while each client must have client files for all groups. Note also that this scenario is for illustration only and probably would not be wise for practical use, as if one of the TH reference clocks fails, the certificate trail becomes cyclic. In such cases the symmetric path between RED and BLUE, each in a different group, would not be a good idea.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;authentication-commands&#34;&gt;Authentication Commands&lt;/h4&gt;
&lt;dt id=&#34;automax&#34;&gt;&lt;tt&gt;automax [_logsec_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the interval between regenerations of the session key list used with the Autokey protocol, as a power of 2 in seconds. Note that the size of the key list for each association depends on this interval and the current poll interval. The default interval is 12 (about 1.1 h). For poll intervals above the specified interval, a session key list with a single entry will be regenerated for every message sent.&lt;/p&gt;
&lt;dt id=&#34;controlkey&#34;&gt;&lt;tt&gt;controlkey _keyid_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the key ID to use with the &lt;a href=&#34;/archives/4.2.6-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; utility, which uses the standard protocol defined in RFC-1305. The &lt;tt&gt;&lt;em&gt;keyid&lt;/em&gt;&lt;/tt&gt; argument is the key ID for a trusted key, where the value can be in the range 1 to 65534, inclusive.&lt;/p&gt;
&lt;dt id=&#34;crypto&#34;&gt;&lt;tt&gt;crypto [randfile _file_] [host _name_] [ident _name_] [pw _password_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command requires the OpenSSL library. It activates public key cryptography and loads the required host key and public certificate. If one or more files are left unspecified, the default names are used as described below. Unless the complete path and name of the file are specified, the location of a file is relative to the keys directory specified in the &lt;tt&gt;keysdir&lt;/tt&gt; configuration command or default &lt;tt&gt;/usr/local/etc&lt;/tt&gt;. Following are the options.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;digest&lt;/tt&gt; &lt;tt&gt;MD2&lt;/tt&gt; | &lt;tt&gt;MD4&lt;/tt&gt; | &lt;tt&gt;MD5&lt;/tt&gt; | &lt;tt&gt;MDC2&lt;/tt&gt; | &lt;tt&gt;RIPEMD160&lt;/tt&gt; | &lt;tt&gt;SHA&lt;/tt&gt; | &lt;tt&gt;SHA1&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the message digest algorithm, with default MD5. If the OpenSSL library is installed, &lt;tt&gt;&lt;em&gt;name&lt;/em&gt;&lt;/tt&gt; can be any message digest algorithm supported by the library not exceeding 160 bits in length. However, all Autokey participants in an Autokey subnet must use the same algorithm. Note that the Autokey message digest algorithm is separate and distinct form the symmetric key message digest algorithms. Note: If compliance with FIPS 140-2 is required, the algorithm must be ether &lt;tt&gt;SHA&lt;/tt&gt; or &lt;tt&gt;SHA1&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;host &lt;em&gt;name&lt;/em&gt;&lt;/tt&gt;    &lt;/p&gt;
&lt;p&gt;    Specifies the string used when constructing the names for the host, sign and certificate files generated by the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program with the &lt;tt&gt;-s &lt;em&gt;name&lt;/em&gt;&lt;/tt&gt; option.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;ident &lt;em&gt;name&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the string used in constructing the identity files generated by the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program with the &lt;tt&gt;-i &lt;em&gt;name&lt;/em&gt;&lt;/tt&gt; option.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;pw &lt;em&gt;password&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the password to decrypt files previously encrypted by the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program with the &lt;tt&gt;-p&lt;/tt&gt; option.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;randfile &lt;em&gt;file&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the location of the random seed file used by the OpenSSL library. The defaults are described on the &lt;tt&gt;ntp-keygen&lt;/tt&gt; page.&lt;/p&gt;
&lt;dt id=&#34;keys&#34;&gt;&lt;tt&gt;keys _keyfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the complete path to the MD5 key file containing the keys and key IDs used by &lt;tt&gt;ntpd&lt;/tt&gt;, &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; when operating with symmetric key cryptography. This is the same operation as the &lt;tt&gt;-k&lt;/tt&gt; command line option. Note that the directory path for Autokey media is specified by the &lt;tt&gt;keysdir&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt id=&#34;keysdir&#34;&gt;&lt;tt&gt;keysdir _path_&lt;/tt&gt;K&lt;/dt&gt;
&lt;p&gt;This command specifies the default directory path for Autokey cryptographic keys, parameters and certificates. The default is &lt;tt&gt;/usr/local/etc/&lt;/tt&gt;. Note that the path for the symmetric keys file is specified by the &lt;tt&gt;keys&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt id=&#34;requestkey&#34;&gt;&lt;tt&gt;requestkey _keyid_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the key ID to use with the &lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt;&lt;/a&gt; utility program, which uses a proprietary protocol specific to this implementation of &lt;tt&gt;ntpd&lt;/tt&gt;. The &lt;tt&gt;&lt;em&gt;keyid&lt;/em&gt;&lt;/tt&gt; argument is a key ID for a trusted key, in the range 1 to 65534, inclusive.&lt;/p&gt;
&lt;dt id=&#34;revoke&#34;&gt;&lt;tt&gt;revoke [_logsec_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the interval between re-randomization of certain cryptographic values used by the Autokey scheme, as a power of 2 in seconds. These values need to be updated frequently in order to deflect brute-force attacks on the algorithms; however, updating some values is a relatively expensive operation. The default interval is 17 (about 36 h). For poll intervals above the specified interval, the values will be updated for every message sent.&lt;/p&gt;
&lt;dt id=&#34;trustedkey&#34;&gt;&lt;tt&gt;trustedkey [_keyid_ | (_lowid_ ... _highid_)] [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the key ID(s) which are trusted for the purposes of authenticating peers with symmetric key cryptography. Key IDs used to authenticate &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; operations must be listed here and additionally be enabled with &lt;em&gt;controlkey&lt;/em&gt; and/or &lt;em&gt;requestkey&lt;/em&gt;. The authentication procedure for time transfer require that both the local and remote NTP servers employ the same key ID and secret for this purpose, although different keys IDs may be used with different servers. Ranges of trusted key IDs may be specified: &amp;ldquo;&lt;tt&gt;trustedkey (1 &amp;hellip; 19) 1000 (100 &amp;hellip; 199)&lt;/tt&gt;&amp;rdquo; enables the lowest 120 key IDs which start with the digit 1. The spaces surrounding the ellipsis are required when specifying a range.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;error-codes&#34;&gt;Error Codes&lt;/h4&gt;
&lt;p&gt;Errors can occur due to mismatched configurations, unexpected protocol restarts, expired certificates and unfriendly people. In most cases the protocol state machine recovers automatically by retransmission, timeout and restart, where necessary. Some errors are due to mismatched keys, digest schemes or identity schemes and must be corrected by installing the correct media and/or correcting the configuration file. One of the most common errors is expired certificates, which must be regenerated and signed at least once per year using the &lt;a href=&#34;/archives/4.2.6-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt;&lt;/a&gt; program.&lt;/p&gt;
&lt;p&gt;The following error codes are reported via the NTP control and monitoring protocol trap mechanism and to the &lt;tt&gt;cryptostats&lt;/tt&gt; monitoring file if configured.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;101 bad field format or length&lt;/dt&gt;
&lt;p&gt;The packet has invalid version, length or format.&lt;/p&gt;
&lt;dt&gt;102 bad timestamp&lt;/dt&gt;
&lt;p&gt;The packet timestamp is the same or older than the most recent received. This could be due to a replay or a server clock time step.&lt;/p&gt;
&lt;dt&gt;103 bad filestamp&lt;/dt&gt;
&lt;p&gt;The packet filestamp is the same or older than the most recent received. This could be due to a replay or a key file generation error.&lt;/p&gt;
&lt;dt&gt;104 bad or missing public key&lt;/dt&gt;
&lt;p&gt;The public key is missing, has incorrect format or is an unsupported type.&lt;/p&gt;
&lt;dt&gt;105 unsupported digest type&lt;/dt&gt;
&lt;p&gt;The server requires an unsupported digest/signature scheme.&lt;/p&gt;
&lt;dt&gt;106 unsupported identity type&lt;/dt&gt;
&lt;p&gt;The client or server has requested an identity scheme the other does not support.&lt;/p&gt;
&lt;dt&gt;107 bad signature length&lt;/dt&gt;
&lt;p&gt;The signature length does not match the current public key.&lt;/p&gt;
&lt;dt&gt;108 signature not verified&lt;/dt&gt;
&lt;p&gt;The message fails the signature check. It could be bogus or signed by a different private key.&lt;/p&gt;
&lt;dt&gt;109 certificate not verified&lt;/dt&gt;
&lt;p&gt;The certificate is invalid or signed with the wrong key.&lt;/p&gt;
&lt;dt&gt;110 host certificate expired&lt;/dt&gt;
&lt;p&gt;The old server certificate has expired.&lt;/p&gt;
&lt;dt&gt;111 bad or missing cookie&lt;/dt&gt;
&lt;p&gt;The cookie is missing, corrupted or bogus.&lt;/p&gt;
&lt;dt&gt;112 bad or missing leapseconds table&lt;/dt&gt;
&lt;p&gt;The leapseconds table is missing, corrupted or bogus.&lt;/p&gt;
&lt;dt&gt;113 bad or missing certificate&lt;/dt&gt;
&lt;p&gt;The certificate is missing, corrupted or bogus.&lt;/p&gt;
&lt;dt&gt;114 bad or missing group key&lt;/dt&gt;
&lt;p&gt;The identity key is missing, corrupt or bogus.&lt;/p&gt;
&lt;dt&gt;115 protocol error&lt;/dt&gt;
&lt;p&gt;The protocol state machine has wedged due to unexpected restart.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;p&gt;See the &lt;a href=&#34;/archives/4.2.6-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt;&lt;/a&gt; page. Note that provisions to load leap second values from the NIST files have been removed. These provisions are now available whether or not the OpenSSL library is available. However, the functions that can download these values from servers remains available.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Automatic Server Discovery</title>
      <link>/archives/4.2.6-series/manyopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/manyopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice51.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Make sure who your friends are.&lt;/p&gt;
&lt;p&gt;Last update: 25-Nov-2009 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/manyopt/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/manyopt/#association-management&#34;&gt;Association Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/manyopt/#broadcastmulticast-scheme&#34;&gt;Broadcast/Multicast Scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/manyopt/#manycast-scheme&#34;&gt;Manycast Scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/manyopt/#server-pool-scheme&#34;&gt;Server Pool Scheme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This page describes the automatic server discovery schemes provided in NTPv4. Details about the configuration commands and options are described on the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Configuration Options&lt;/a&gt; page. Details about the cryptographic authentication schemes are described on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. Details about the other modes not directly involved in these schemes are described on the &lt;a href=&#34;/archives/4.2.6-series/assoc&#34;&gt;Association Management&lt;/a&gt; page. Additional information is available in the papers, reports, memoranda and briefings on the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/ntp.html&#34;&gt;NTP Project&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;There are three automatic server discovery schemes: broadcast/multicast, manycast and server pool described on this page. The broadcast/multicast and manycast schemes utilize the ubiquitous broadcast or one-to-many paradigm native to IPv4 and IPv6. The server pool scheme uses DNS to resolve addresses of multiple volunteer servers scattered throughout the world. All three schemes work in much the same way and might be described as &lt;em&gt;grab-n&#39;-prune&lt;/em&gt;. Through one means or another they grab a number of associations either directly or indirectly from the configuration file, order them from best to worst according to a defined metric, then cast off the associations with the lowest metric until no more than the number specified by the &lt;tt&gt;maxclock&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command remain.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;association-management&#34;&gt;Association Management&lt;/h4&gt;
&lt;p&gt;All schemes use a stratum filter to select just those servers with stratum considered useful. This can avoid large numbers of clients ganging up on a small number of low-stratum servers and avoid servers below or above specified stratum levels. By default, servers of all strata are acceptable; however, the &lt;tt&gt;tos&lt;/tt&gt; command can be used to restrict the acceptable range from the &lt;tt&gt;floor&lt;/tt&gt; option, inclusive, to the &lt;tt&gt;ceiling&lt;/tt&gt; option, exclusive. Potential servers operating at the same stratum as the client will be avoided, unless the &lt;tt&gt;cohort&lt;/tt&gt; option is present.&lt;/p&gt;
&lt;p&gt;The pruning process is handled using a set of counters, one for each preemptible association. Once each poll interval the counter is increased by one. If the association survives the selection and clustering algorithms; that is, it is a candidate for synchronization, the counter is reset to zero. If not and the counter reaches a defined threshold and the number of assocations is greater than &lt;tt&gt;maxclock&lt;/tt&gt;, the association becomes a candidate for pruning. The pruning algorithm assigns to each association a metric ranging from the lowest, corresponding to no possibility of synchronization, to the highest, corresponding to a very likely possibility of synchronization. Upon reaching the threshold, an association is demobilized if it has the lowest metric of all associations. Operation continues in this way until the number of remaining associations is not greater than &lt;tt&gt;maxclock&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Following is a summary of each scheme. Note that reference to option applies to the commands described on the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Configuration Options&lt;/a&gt; page. See that page for applicability and defaults.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;broadcastmulticast-scheme&#34;&gt;Broadcast/Multicast Scheme&lt;/h4&gt;
&lt;p&gt;A broadcast server generates messages continuously at intervals by default 64 s and time-to-live by default 127. These defaults can be overridden by the &lt;tt&gt;minpoll&lt;/tt&gt; and &lt;tt&gt;ttl&lt;/tt&gt; options, respectively. Not all kernels support the &lt;tt&gt;ttl&lt;/tt&gt; option. A broadcast client responds to the first message received by waiting a randomized interval to avoid implosion at the server. It then polls the server in client/server mode using the &lt;tt&gt;iburst&lt;/tt&gt; option in order to quickly authenticate the server, calibrate the propagation delay and set the host clock. This normally results in a volley of six client/server exchanges at 2-s intervals during which both the synchronization and cryptographic protocols run concurrently.&lt;/p&gt;
&lt;p&gt;Following the volley, the server continues in listen-only mode and sends no further messages. If for some reason the broadcast server does not respond to these messages, the client will cease transmission and continue in listen-only mode with a default propagation delay. The volley can be avoided by using the &lt;tt&gt;authdelay&lt;/tt&gt; command with nonzero argument.&lt;/p&gt;
&lt;p&gt;A server is configured in broadcast mode using the &lt;tt&gt;broadcast&lt;/tt&gt; command and specifying the broadcast address of a local interface. If two or more local interfaces are installed with different broadcast addresses, a &lt;tt&gt;broadcast&lt;/tt&gt; command is needed for each address. This provides a way to limit exposure in a firewall, for example. A broadcast client is configured using the &lt;tt&gt;broadcastclient&lt;/tt&gt; command.&lt;/p&gt;
&lt;p&gt;NTP multicast mode can be used to extend the scope using IPv4 multicast or IPv6 broadcast with defined span. The IANA has assigned IPv4 multicast address 224.0.1.1 and IPv6 address FF05::101 (site local) to NTP, but these addresses should be used only where the multicast span can be reliably constrained to protect neighbor networks. In general, administratively scoped IPv4 group addresses should be used, as described in RFC-2365, or GLOP group addresses, as described in RFC-2770.&lt;/p&gt;
&lt;p&gt;A multicast server is configured using the &lt;tt&gt;broadcast&lt;/tt&gt; command, but specifying a multicast address instead of a broadcast address. A multicast client is configured using the &lt;tt&gt;multicastclient&lt;/tt&gt; command specifying a list of one or more multicast addresses. Note that there is a subtle distinction between the IPv4 and IPv6 address families. The IPv4 broadcast or mulitcast mode is determined by the IPv4 class. For IPv6 the same distinction can be made using the link-local prefix FF02 for each interface and site-local prefix FF05 for all interfaces.&lt;/p&gt;
&lt;p&gt;It is possible and frequently useful to configure a host as both broadcast client and broadcast server. A number of hosts configured this way and sharing a common broadcast address will automatically organize themselves in an optimum configuration based on stratum and synchronization distance.&lt;/p&gt;
&lt;p&gt;Since an intruder can impersonate a broadcast server and inject false time values, broadcast mode should always be cryptographically authenticated. By default, a broadcast association will not be mobilized unless cryptographically authenticated. If necessary, the &lt;tt&gt;auth&lt;/tt&gt; option of the &lt;tt&gt;disable&lt;/tt&gt; command will disable this feature. The feature can be selectively enabled using the &lt;tt&gt;notrust&lt;/tt&gt; option of the &lt;tt&gt;restrict&lt;/tt&gt; command.&lt;/p&gt;
&lt;p&gt;With symmetric key cryptography each broadcast server can use the same or different keys. In one scenario on a broadcast LAN, a set of broadcast clients and servers share the same key along with another set that share a different key. Only the clients with matching key will respond to a server broadcast.&lt;/p&gt;
&lt;p&gt;Public key cryptography can be used with some restrictions. If multiple servers belonging to different secure groups share the same broadcast LAN, the clients on that LAN must have the client keys for all of them. This scenario is illustrated in the example on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;manycast-scheme&#34;&gt;Manycast Scheme&lt;/h4&gt;
&lt;p&gt;Manycast is a automatic server discovery and configuration paradigm new to NTPv4. It is intended as a means for a client to troll the nearby network neighborhood to find cooperating servers, validate them using cryptographic means and evaluate their time values with respect to other servers that might be lurking in the vicinity. It uses the grab-n&#39;-drop paradigm with the additional feature that active means are used to grab additional servers should the number of survivors fall below the &lt;tt&gt;minclock&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command.&lt;/p&gt;
&lt;p&gt;The manycast paradigm is not the anycast paradigm described in RFC-1546, which is designed to find a single server from a clique of servers providing the same service. The manycast paradigm is designed to find a plurality of redundant servers satisfying defined optimality criteria.&lt;/p&gt;
&lt;p&gt;A manycast clients is configured using the &lt;tt&gt;manycastclient&lt;/tt&gt; configuration command, which is similar to the &lt;tt&gt;server&lt;/tt&gt; configuration command. It sends ordinary client mode messages, but with a broadcast address rather than a unicast address and sends only if less than &lt;tt&gt;minclock&lt;/tt&gt; associateons remain and then only at the minimum feasible rate and minimum feasible time-to-live (TTL) hops. The polling strategy is designed to reduce as much as possible the volume of broadcast messages and the effects of implosion due to near-simultaneous arrival of manycast server messages. There can be as many manycast client associations as different addresses, each one serving as a template for a future unicast client/server association.&lt;/p&gt;
&lt;p&gt;A manycast server is configured using the &lt;tt&gt;manycastserver&lt;/tt&gt; command, which listens on the specified broadcast address for manycast client messages. If a manycast server is in scope of the current TTL and is itself synchronized to a valid source and operating at a stratum level equal to or lower than the manycast client, it replies with an ordinary unicast server message.&lt;/p&gt;
&lt;p&gt;The manycast client receiving this message mobilizes a preemptable client association according to the matching manycast client template, but only if cryptographically authenticated and the server stratum is less than or equal to the client stratum.&lt;/p&gt;
&lt;p&gt;It is possible and frequently useful to configure a host as both manycast client and manycast server. A number of hosts configured this way and sharing a common multicast group address will automatically organize themselves in an optimum configuration based on stratum and synchronization distance.&lt;/p&gt;
&lt;p&gt;The use of cryptograpic authentication is always a good idea in any server descovery scheme. Both symmetric key and public key cryptography can be used in the same scenarios as described above for the broadast/multicast scheme.&lt;/p&gt;
&lt;h4 id=&#34;server-pool-scheme&#34;&gt;Server Pool Scheme&lt;/h4&gt;
&lt;p&gt;The idea of targeting servers on a random basis to distribute and balance the load is not a new one; however, the NTP pool scheme puts this on steroids. At present, several hundred operators around the globe have volunteered their servers for public access. In general, NTP is a lightweight service and servers used for other purposes don&amp;rsquo;t mind an additional small load. The trick is to randomize over the population and minimize the load on any one server while retaining the advantages of multiple servers using the NTP mitigation algorithms.&lt;/p&gt;
&lt;p&gt;To support this service the DNS for some volunteer servers as been modified to collect a number of other volunteer servers and return a randomized list in response to a DNS query. The client receiving this list mobilizes some or all of them just as in the other discovery schemes and casts off the excess.&lt;/p&gt;
&lt;p&gt;The pool scheme is configured using one or &lt;tt&gt;pool&lt;/tt&gt; commands with the DNS name &lt;tt&gt;&lt;em&gt;region&lt;/em&gt;.pool.ntp.org&lt;/tt&gt;, where &lt;tt&gt;&lt;em&gt;region&lt;/em&gt;&lt;/tt&gt; is a region of the world, country of the region or state of the country or even the whole world if absent. The &lt;tt&gt;pool&lt;/tt&gt; command can be used more than once; duplicate servers are detected and discarded. In principle, it is possible to use a configuration file containing a single line &lt;tt&gt;pool pool.ntp.org&lt;/tt&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Build Options</title>
      <link>/archives/4.2.6-series/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/config/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo3a.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gnu autoconfigure tools are in the backpack.&lt;/p&gt;
&lt;p&gt;Last update: Monday, December 15, 2008 20:54 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Most modern software distributions include an autoconfigure utility which customizes the build and install configuration according to the specific hardware, operating system and file system conventions. For NTP this utility is called &lt;tt&gt;configure&lt;/tt&gt;, which is run before building and installing the program components. For most installations no additional actions are required other than running &lt;tt&gt;configure&lt;/tt&gt; with no options. However, it is possible to customize the build and install configuration through the use of &lt;tt&gt;configure&lt;/tt&gt; options.&lt;/p&gt;
&lt;p&gt;The available options, together with a concise description, can be displayed by running &lt;tt&gt;configure&lt;/tt&gt; with the &lt;tt&gt;&amp;ndash;help&lt;/tt&gt; option. Various options can be used to reduce the memory footprint, adjust the scheduling priority, enable or disable debugging support or reference clock driver support. The options can be used to specify where to install the program components or where to find various libraries if they are not in the default place.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Building and Installing the Distribution</title>
      <link>/archives/4.2.6-series/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/build/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/beaver.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For putting out compiler fires.&lt;/p&gt;
&lt;p&gt;Last update: 16:45 UTC Sunday, March 02, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/build/#building-and-installing-the-distribution&#34;&gt;Building and Installing the Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/build/#building-and-installing-for-unix&#34;&gt;Building and Installing for Unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/build/#building-and-installing-for-windows&#34;&gt;Building and Installing for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/build/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/build/#if-you-have-problems&#34;&gt;If You Have Problems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/build/#additional-ttmakett-commands&#34;&gt;Additional &lt;tt&gt;make&lt;/tt&gt; Commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;building-and-installing-the-distribution&#34;&gt;Building and Installing the Distribution&lt;/h4&gt;
&lt;p&gt;It is not possible in a software distribution such as this to support every individual computer and operating system with a common executable, even with the same system but different versions and options. Therefore, it is necessary to configure, build and install for each system and version. In almost all cases, these procedures are completely automatic, The user types &lt;tt&gt;./configure&lt;/tt&gt;, &lt;tt&gt;make&lt;/tt&gt; and &lt;tt&gt;install&lt;/tt&gt; in that order and the autoconfigure system does the rest. There are some exceptions, as noted below and on the &lt;a href=&#34;/archives/4.2.6-series/hints&#34;&gt;Hints and Kinks&lt;/a&gt; pages.&lt;/p&gt;
&lt;p&gt;If available, the OpenSSL library from &lt;a href=&#34;https://www.openssl.org&#34;&gt;https://www.openssl.org&lt;/a&gt; is used to support public key cryptography. The library must be built and installed prior to building NTP. The procedures for doing that are included in the OpenSSL documentation. The library is found during the normal NTP configure phase and the interface routines compiled automatically. Only the &lt;tt&gt;libcrypto.a&lt;/tt&gt; library file and &lt;tt&gt;openssl&lt;/tt&gt; header files are needed. If the library is not available or disabled, this step is not required.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;/archives/4.2.6-series/config&#34;&gt;Build Options&lt;/a&gt; page describes a number of options that determine whether debug support is included, whether and which reference clock drivers are included and the locations of the executables and library files, if not the default. By default debugging options and all reference clock drivers are included.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;building-and-installing-for-unix&#34;&gt;Building and Installing for Unix&lt;/h4&gt;
&lt;p&gt;This distribution uses common compilers and tools that come with most Unix distributions. Not all of these tools exist in the standard distribution of modern Unix versions (compilers are likely to be an add-on product). If this is the case, consider using the GNU tools and &lt;tt&gt;gcc&lt;/tt&gt; compiler included as freeware in some systems. For a successful build, all of these tools should be accessible via the current path.&lt;/p&gt;
&lt;p&gt;The first thing to do is uncompress the distribution and extract the source tree. In the distribution base directory use the &lt;tt&gt;./configure&lt;/tt&gt; command to perform an automatic configuration procedure. This command inspects the hardware and software environment and configures the build process accordingly. Use the &lt;tt&gt;make&lt;/tt&gt; command to compile and link the distribution and the &lt;tt&gt;install&lt;/tt&gt; command to install the executables by default in &lt;tt&gt;/usr/local/bin&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;If your site supports multiple architectures and uses NFS to share files, you can use a single source tree to build executables for multiple architectures. While running on a particular architecture, change to the base directory and create a subdirectory using a command like &lt;tt&gt;mkdir A.machine,&lt;/tt&gt; which will create an architecture-specific directory, then change to this directory and mumble &lt;tt&gt;../configure&lt;/tt&gt;. The remaining steps are the same whether building in the base directory or in the subdirectory.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;building-and-installing-for-windows&#34;&gt;Building and Installing for Windows&lt;/h4&gt;
&lt;p&gt;NTP supports Windows Vista, XP, NT4 and 2000 systems. See the &lt;a href=&#34;/archives/hints/winnt&#34;&gt;Windows NT&lt;/a&gt; page for directions to compile the sources and install the executables. A precompiled executable is available.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;configuration&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;You are now ready to configure the daemon. You will need to create a NTP configuration file by default in &lt;tt&gt;/etc/ntp.conf.&lt;/tt&gt; Newbies should see the &lt;a href=&#34;/archives/4.2.6-series/quick&#34;&gt;Quick Start&lt;/a&gt; page for orientation. Seasoned veterans can start with the &lt;a href=&#34;/archives/4.2.6-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt;&lt;/a&gt; page and move on to the specific configuration option pages from there.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;if-you-have-problems&#34;&gt;If You Have Problems&lt;/h4&gt;
&lt;p&gt;If you have problems with your hardware and software environment (e.g. operating system-specific issues), browse the &lt;a href=&#34;/archives/4.2.6-series/hints&#34;&gt;Hints and Kinks&lt;/a&gt; pages. For other problems a tutorial on debugging technique is in the &lt;a href=&#34;/archives/4.2.6-series/debug&#34;&gt;NTP Debugging Technique&lt;/a&gt; page. A list of important system log messages is on the &lt;a href=&#34;/archives/4.2.6-series/msyslog&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; System Log Messages&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The first line of general assistance is the &lt;a href=&#34;http://www.ntp.org&#34;&gt;NTP web site&lt;/a&gt; and the helpful documents resident there. Requests for assistance of a general nature and of interest to other timekeepers should be sent to the NTP newsgroup comp.protocols.time.ntp.&lt;/p&gt;
&lt;p&gt;Users are invited to report bugs and offer suggestions via the &lt;a href=&#34;/archives/4.2.6-series/bugs&#34;&gt;NTP Bug Reporting Procedures&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;additional-ttmakett-commands&#34;&gt;Additional &lt;tt&gt;make&lt;/tt&gt; commands&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;make clean&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Cleans out object files, programs and temporary files.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;make distclean&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Does the work of &lt;tt&gt;clean&lt;/tt&gt;, but cleans out all directories in preparation for a new distribution release.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;make dist&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Does the work of &lt;tt&gt;make distclean&lt;/tt&gt;, but constructs compressed tar files for distribution. You must have GNU automake to perform this function.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Command Index</title>
      <link>/archives/4.2.6-series/comdex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/comdex/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice38.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carrol&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Mad Hatter says &amp;ldquo;Bring it on&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Last update: 08-Apr-2009 2:56 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;access-control-commands&#34;&gt;Access Control Commands&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/accopt#discard&#34;&gt;discard - specify headway parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/accopt#restrict&#34;&gt;restrict - specify access restrictions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;authentication-commands&#34;&gt;Authentication Commands&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt#automax&#34;&gt;automax - specify Autokey regeneration interval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt#controlkey&#34;&gt;controlkey - specify control key ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt#crypto&#34;&gt;crypto - configure Autokey parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt#keysdir&#34;&gt;keysdir - specify Autokey key directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt#requestkey&#34;&gt;requestkey - specify request key ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt#revoke&#34;&gt;revoke - specify Autokey randomization interval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt#trustedkey&#34;&gt;trustedkey - specify trusted key IDs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;reference-clock-commands&#34;&gt;Reference Clock Commands&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/clockopt#server&#34;&gt;server - specify reference clock server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/clockopt#fudge&#34;&gt;fudge - specify fudge parameters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;server-commands&#34;&gt;Server Commands&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt#server&#34;&gt;server - configure client association&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt#server&#34;&gt;peer - configure symmetric peer association&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt#server&#34;&gt;broadcast - configure broadcast server association&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt#server&#34;&gt;manycastclient - configure manycast client association&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt#server&#34;&gt;pool - configure pool association&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt#server&#34;&gt;unpeer - remove association&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt#broadcastclient&#34;&gt;broadcastclient - enable broadcast client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt#manycastserver&#34;&gt;manycastserver - enable manycast server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt#multicastclient&#34;&gt;multicastclient - enable multicast client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;miscellaneous-commands&#34;&gt;Miscellaneous Commands&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#broadcastdelay&#34;&gt;broadcastdelay - specify broadcast delay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#driftfile&#34;&gt;driftfile - specify frequency file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#enable&#34;&gt;enable - enable options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#enable&#34;&gt;disable - disable options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#includefile&#34;&gt;includefile - specify include file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#interface&#34;&gt;interface - specify which local network addresses to use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#leapfile&#34;&gt;leapfile - specify leapseconds file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#logconfig&#34;&gt;logconfig - configure log file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#interface&#34;&gt;nic - alias for interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#phone&#34;&gt;phone - specify modem phone numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#saveconfigdir&#34;&gt;saveconfigdir - specify saveconfig directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#setvar&#34;&gt;setvar - set system variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#tinker&#34;&gt;tinker - modify sacred system parameters (dangerous)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#tos&#34;&gt;tos - modify service parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#trap&#34;&gt;trap - set trap address&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt#ttl&#34;&gt;ttl - set time to live&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;monitoring-commands&#34;&gt;Monitoring Commands&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/monopt#filegen&#34;&gt;filegen - specify monitor files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/monopt/#monitoring-commands&#34;&gt;statsdir - specify monitor files directory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Configuration File Definition (Advanced)</title>
      <link>/archives/4.2.6-series/ntp_conf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/ntp_conf/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo7.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Racoon is shooting configuration bugs.&lt;/p&gt;
&lt;p&gt;Last update: 02:20 UTC Monday, March 03, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntp_conf/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntp_conf/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntp_conf/#high-level-description&#34;&gt;High-Level Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntp_conf/#detailed-description&#34;&gt;Detailed Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntp_conf/#guidelines-for-adding-configuration-commands&#34;&gt;Guidelines for Adding Configuration Commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;The NTP configuration process is driven by a phrase-structure grammar which is used to specify the format of the configuration commands and the actions needed to build an abstract syntax tree (AST). The grammar is fed to a parser generator (Bison) which produces a parser for the configuration file.&lt;/p&gt;
&lt;p&gt;The generated parser is used to parse an NTP configuration file and check it for syntax and semantic errors. The result of the parse is an AST, which contains a representation of the various commands and options. This AST is then traversed to set up the NTP daemon to the correct configuration.&lt;/p&gt;
&lt;p&gt;This document is intended for developers who wish to modify the configuration code and/or add configuration commands and options. It contains a description of the files used in the configuration process as well as guidelines on how to construct them.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;p&gt;A brief description of the files used by the configuration code is given below:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ntp_config.y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This file is a Bison source file that contains the phrase-structure grammar and the actions that need to be performed to generate an AST.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ntp_config.c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This file contains the major chunk of the configuration code. It contains all the functions that are called for building the AST as well as the functions that are needed for traversing the AST.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ntp_config.h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This file is the header file for  &lt;code&gt;ntp_config.c&lt;/code&gt;. It mainly contains the structure definitions needed to build the AST.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ntp_scanner.c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This file contains the code for a simple lexical analyzer. This file is directly included into the  &lt;code&gt;ntp_config.c &lt;/code&gt; file since this code is only used by the configuration code. The most important function in this file is &lt;tt&gt;yylex&lt;/tt&gt;, which is called by the generated parser to get the next token on the input line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ntp_data_structures.c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This file contains a generic implementation of a priority queue and a simple queue. This code can be used to create a queue for any structure.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ntp_data_structures.h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This header file contains the structure declarations and function prototypes needed to use the data structures defined in  &lt;code&gt;ntp_data_structures.c&lt;/code&gt;. This file forms the public interface of the data structures.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ntp_config.tab.c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This file is generated by Bison from the &lt;code&gt;ntp_config.y&lt;/code&gt; file. This file is also included directly into the configuration code.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;high-level-description&#34;&gt;High-Level Description&lt;/h4&gt;
&lt;p&gt;A high-level description of the configuration process showing where all the files fit in is given below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/description.jpg&#34; alt=&#34;JPEG&#34;&gt;&lt;/p&gt;
&lt;p&gt;The scanner reads in an NTP configuration file and converts it into tokens. The Bison generated parser reads these tokens and converts them into an AST. The AST traverser consists of a set of functions that configure parts of NTP on the basis of what is on the tree. A more detailed description of these parts and the files used is given below.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;detailed-description&#34;&gt;Detailed Description&lt;/h4&gt;
&lt;dt&gt;ntp_scanner.c&lt;/dt&gt;
&lt;p&gt;This file contains the scanner. The scanner is a small program that converts an input NTP configuration file into a set of &lt;code&gt;tokens&lt;/code&gt; that correspond to &lt;code&gt;lexemes&lt;/code&gt; in the input. Lexemes are strings in the input, delimited by whitespace and/or special characters. Tokens are basically unique integers that represent these lexemes. A different token is generated for each reserved word and special character in the input. There are two main functions in the public interface of this file:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;int yylex&lt;/tt&gt;()&lt;/dt&gt;
&lt;p&gt;This function is called &lt;tt&gt;yylex&lt;/tt&gt; for historical reasons; &lt;tt&gt;lex&lt;/tt&gt; is a program that takes a set of regular expressions and generates a scanner that returns tokens corresponding to those regular expressions. The name of the generated function is called &lt;tt&gt;yylex&lt;/tt&gt;. We aren&amp;rsquo;t using&lt;tt&gt;lex&lt;/tt&gt;because it requires linking against an external library and we didn&amp;rsquo;t want to increase the compile-time requirements of NTP.&lt;/p&gt;
&lt;p&gt;History lessons aside, this function basically checks to see if the next input character is a special character as defined in the array &lt;tt&gt;char special_char[]&lt;/tt&gt;. (The function &lt;tt&gt;int is_special(char ch)&lt;/tt&gt;, can be used for this.) If yes, the special character is returned as the token. If not, a set of characters is read until the next whitespace or special character is encountered. This set of characters forms the lexeme; &lt;tt&gt;yylex&lt;/tt&gt; then checks whether this lexeme is an integer, a double, an IP address or a reserved word. If yes, the corresponding token is returned. If not, a token for a string is returned as the default token.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;struct state *create_keyword_scanner(struct key_tok *_keyword_list_)&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This function takes a list of (&lt;em&gt;keyword, token&lt;/em&gt;) pairs and converts them into a trie that can recognize the keywords (reserved words). Every time the scanner reads a lexeme, it compares it against the list of reserved words. If it finds a match, it returns the corresponding token for that keyword.&lt;/p&gt;
&lt;dt&gt;ntp_data_structures.c&lt;/dt&gt;
&lt;p&gt;This file contains an implementation of a generic priority queue and FIFO queue. By generic, we mean that these queues can hold element of any type (integers, user-defined structs, etc.), provided that these elements are allocated on the heap using the function &lt;tt&gt;void&lt;/tt&gt; *&lt;tt&gt;get_node(size_t size)&lt;/tt&gt;. Note that the prototype for this function is exactly the same as that of &lt;tt&gt;malloc&lt;/tt&gt; and that it can be used in the exact same way. Behind the scenes, &lt;tt&gt;get_node&lt;/tt&gt; calls &lt;tt&gt;malloc&lt;/tt&gt; to allocate &lt;em&gt;size&lt;/em&gt; plus some extra memory needed for bookkeeping. The allocated memory can be freed using the function &lt;tt&gt;void free_node (void *&lt;em&gt;my_node&lt;/em&gt;)&lt;/tt&gt;. In addition to these two functions, the public interface of this file contains the following functions:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;queue *create_priority_queue(int (*get_order)(void *, void*))&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This function creates a priority queue in which the order of the elements is determined by the &lt;tt&gt;get_order&lt;/tt&gt;function that is passed as input to the priority queue. The &lt;tt&gt;get_order&lt;/tt&gt;function should return positive if the priority of the first element is less than the priority of the second element.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;queue *create_queue(void)&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This function creates a FIFO queue. It basically calls the &lt;tt&gt;create_priority_queue&lt;/tt&gt; function with the &lt;tt&gt;get_fifo_order&lt;/tt&gt;function as its argument.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;void destroy_queue(queue *_my_queue_)&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This function deletes &lt;tt&gt;&lt;em&gt;my_queue&lt;/em&gt;&lt;/tt&gt;and frees up all the memory allocated to it an its elements.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;int empty(queue *&lt;/tt&gt;_&lt;tt&gt;my_queue&lt;/tt&gt;_&lt;tt&gt;)&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This function checks to see if &lt;em&gt;&lt;tt&gt;my_queue&lt;/tt&gt;&lt;/em&gt; is empty. Returns &lt;tt&gt;true&lt;/tt&gt; if &lt;tt&gt;&lt;em&gt;my_queue&lt;/em&gt;&lt;/tt&gt; does not have any elements, else it returns false.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;queue *enqueue(queue *_my_queue_, void *_my_node_)&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This function adds an element, &lt;em&gt;&lt;tt&gt;my_node&lt;/tt&gt;&lt;/em&gt;, to a queue, &lt;em&gt;&lt;tt&gt;my_queue&lt;/tt&gt;&lt;/em&gt;. &lt;em&gt;&lt;tt&gt;my_node&lt;/tt&gt;&lt;/em&gt; must be allocated on the heap using the &lt;tt&gt;get_node&lt;/tt&gt; function instead of &lt;tt&gt;malloc&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;void *dequeue(queue *_my_queue_)&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This function returns the element at the front of the queue. This element will be element with the highest priority.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;int get_no_of_elements(queue *_my_queue_)&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This function returns the number of elements in &lt;tt&gt;&lt;em&gt;my_queue&lt;/em&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;void append_queue(queue *_q_1, queue *_q_2)&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This function adds all the elements of &lt;tt&gt;_q_2&lt;/tt&gt; to &lt;tt&gt;_q_1&lt;/tt&gt;. The queue &lt;tt&gt;_q_2&lt;/tt&gt; is destroyed in the process.&lt;/p&gt;
&lt;dt&gt;ntp_config.y&lt;/dt&gt;
&lt;p&gt;This file is structured as a standard Bison file and consists of three main parts, separated by &lt;tt&gt;%%&lt;/tt&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The prologue and bison declarations: This section contains a list of the terminal symbols, the non-terminal symbols and the types of these symbols.&lt;/li&gt;
&lt;li&gt;The rules section: This section contains a description of the actual phrase-structure rules that are used to parse the configuration commands. Each rule consists of a left-hand side (LHS), a right-hand side (RHS) and an optional action. As is standard with phrase-structure grammars, the LHS consists of a single non-terminal symbol. The RHS can contain both terminal and non-terminal symbols, while the optional action can consist of any arbitrary C code.&lt;/li&gt;
&lt;li&gt;The epilogue: This section is left empty on purpose. It is traditionally used to code the support functions needed to build the ASTs Since, we have moved all the support functions to &lt;code&gt;ntp_config.c&lt;/code&gt;, this section is left empty.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Prologue and Bison Declarations&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All the terminal symbols (also known as tokens) have to be declared in the prologue section. Note that terminals and non-terminals may have values associated with them and these values have types. (More on this later). An unnamed union has to be declared with all the possible types at the start of the prologue section. For example, we declare the following union at the start of the &lt;strong&gt;ntp_config.y&lt;/strong&gt; file:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;%union {&lt;br&gt;
char *String;&lt;br&gt;
double Double;&lt;br&gt;
int Integer;&lt;br&gt;
void *VoidPtr;&lt;br&gt;
queue *Queue;&lt;br&gt;
struct attr_val *Attr_val;&lt;br&gt;
struct address_node *Address_node;&lt;br&gt;
struct setvar_node &lt;em&gt;Set_var;&lt;br&gt;
/&lt;/em&gt; Simulation types */&lt;br&gt;
server_info *Sim_server;&lt;br&gt;
script_info *Sim_script;&lt;br&gt;
}&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Some tokens may not have any types. For example, tokens that correspond to reserved words do not usually have types as they simply indicate that a reserved word has been read in the input file. Such tokens have to be declared as follows:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;%token T_Discard&lt;br&gt;
%token T_Dispersion&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Other tokens do have types. For example, a &lt;tt&gt;T_Double&lt;/tt&gt; token is returned by the scanner whenever it sees a floating-point double in the configuration file. The value associated with the token is the actual number that was read in the configuration file and its type (after conversion) is double. Hence, the token &lt;tt&gt;T_Double&lt;/tt&gt; will have to be declared as follows in the prologue of &lt;strong&gt;ntp_config.y&lt;/strong&gt; file:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;%token &lt;Double&gt; T_Double&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Note that the declaration given in the angled brackets is not &lt;tt&gt;double&lt;/tt&gt; but &lt;tt&gt;Double&lt;/tt&gt;, which is the name of the variable given in the &lt;tt&gt;%union {}&lt;/tt&gt; declaration above.&lt;/p&gt;
&lt;p&gt;Finally, non-terminal symbols may also have values associated with them, which have types. This is because Bison allows non-terminal symbols to have actions associated with them. Actions may be thought of as small functions which get executed whenever the RHS of a non-terminal is detected. The return values of these functions are the values associated with the non-terminals. The types of the non-terminals are specified with a &lt;tt&gt;%type&lt;/tt&gt; declaration as shown below:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;%type &lt;Queue&gt; address_list&lt;br&gt;
%type &lt;Integer&gt; boolean&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;%type&lt;/tt&gt; declaration may be omitted for non-terminals that do not return any value and do not have type information associated with them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Rules Section&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The rule section only consists of phrase-structure grammar rules. Each rule typically has the following format:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;LHS : RHS [{ Actions }]&lt;br&gt;
;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;where LHS consists of a single non-terminal symbol and the RHS consists of one or more terminal and non-terminal symbols. The &lt;tt&gt;Actions&lt;/tt&gt; are optional and may consist of any number of arbitrary C statements. Note that Bison can only process LALR(1) grammars, which imposes additional restrictions on the kind of rules that can be specified. Examples of rules are shown below:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;orphan_mode_command&lt;br&gt;
: T_Tos tos_option_list&lt;br&gt;
{ append_queue(my_config.orphan_cmds, $2); }&lt;br&gt;
;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;tos_option_list&lt;br&gt;
: tos_option_list tos_option { $ = enqueue($1, $2); }&lt;br&gt;
| tos_option { $ = enqueue_in_new_queue($1); }&lt;br&gt;
;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;$n&lt;/tt&gt; notation, where &lt;tt&gt;n&lt;/tt&gt; is an integer, is used to refer to the value of a terminal or non-terminal symbol. All terminals and non-terminal symbols within a particular rule are numbered (starting from 1) according to the order in which they appear within the RHS of a rule. &lt;tt&gt;$&lt;/tt&gt; is used to refer to the value of the LHS terminal symbol - it is used to return a value for the non-terminal symbol specified in the LHS of the rule.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Invoking Bison&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bison needs to be invoked in order to convert the &lt;strong&gt;ntp_config.y&lt;/strong&gt; file into a C source file. To invoke Bison, simply enter the command:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;bison ntp_config.y&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;at the command prompt. If no errors are detected, an &lt;strong&gt;ntp_config.tab.c&lt;/strong&gt; file will be generated by default. This generated file can be directly included into the &lt;strong&gt;ntp_config.c&lt;/strong&gt; file.&lt;/p&gt;
&lt;p&gt;If Bison report shift-reduce errors or reduce-reduce errors, it means that the grammar specified using the rules in not LALR(1). To debug such a grammar, invoke Bison with a &lt;tt&gt;-v&lt;/tt&gt; switch, as shown below. This will generate a &lt;strong&gt;ntp_config.output&lt;/strong&gt; file, which will contain a description of the generated state machine, together with a list of states that have shift-reduce/reduce-reduce conflicts. You can then change the rules to remove such conflicts.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;bison -v ntp_config.y&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;For more information, refer to the &lt;a href=&#34;http://www.gnu.org/software/bison/manual/bison.html&#34;&gt;Bison manual&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ntp_config.c&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This file contains the major chunk of the configuration code including all the support functions needed for building and traversing the ASTs. As such, most of the functions in this file can be divided into two groups:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Functions that have a &lt;tt&gt;create_&lt;/tt&gt; prefix. These functions are used to build a node of the AST.&lt;/li&gt;
&lt;li&gt;Functions that have a &lt;tt&gt;config_&lt;/tt&gt; prefix. These functions are used to traverse the AST and configure NTP according to the nodes present on the tree.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;guidelines-for-adding-configuration-commands&#34;&gt;Guidelines for Adding Configuration Commands&lt;/h4&gt;
&lt;p&gt;The following steps may be used to add a new configuration command to the NTP reference implementation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write phrase-structure grammar rules for the syntax of the new command. Add these rules to the rules section of the &lt;strong&gt;ntp_config.y&lt;/strong&gt; file.&lt;/li&gt;
&lt;li&gt;Write the action to be performed on recognizing the rules. These actions will be used to build the AST.&lt;/li&gt;
&lt;li&gt;If new reserved words are needed, add these to the &lt;tt&gt;struct key_tok keyword_list[]&lt;/tt&gt;structure in the &lt;strong&gt;ntp_config.c&lt;/strong&gt; file. This will allow the scanner to recognize these reserved words and generate the desired tokens on recognizing them.&lt;/li&gt;
&lt;li&gt;Specify the types of all the terminals and non-terminal symbols in the prologue section of the &lt;strong&gt;ntp_config.c&lt;/strong&gt; file.&lt;/li&gt;
&lt;li&gt;Write a function with a &lt;tt&gt;config_&lt;/tt&gt; prefix that will be executed for this new command. Make sure this function is called in the &lt;tt&gt;config_ntpd()&lt;/tt&gt;function.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;mailto:skamboj@udel.edu&#34;&gt;Sachin Kamboj&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Copyright Notice</title>
      <link>/archives/4.2.6-series/copyright/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/copyright/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/sheepb.jpg&#34; alt=&#34;Clone me,&#34;&gt; Clone me, says Dolly sheepishly.&lt;/p&gt;
&lt;p&gt;Last update: 1-Jan-2011 08:34 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The following copyright notice applies to all files collectively called the Network Time Protocol Version 4 Distribution. Unless specifically declared otherwise in an individual file, this notice applies as if the text was explicitly included in the file.&lt;/p&gt;
&lt;pre&gt;***********************************************************************
*                                                                     *
* Copyright (c) University of Delaware 1992-2011                      *
*                                                                     *
* Permission to use, copy, modify, and distribute this software and   *
* its documentation for any purpose with or without fee is hereby     *
* granted, provided that the above copyright notice appears in all    *
* copies and that both the copyright notice and this permission       *
* notice appear in supporting documentation, and that the name        *
* University of Delaware not be used in advertising or publicity      *
* pertaining to distribution of the software without specific,        *
* written prior permission. The University of Delaware makes no       *
* representations about the suitability this software for any         *
* purpose. It is provided &#34;as is&#34; without express or implied          *
* warranty.                                                           *
*                                                                     *
***********************************************************************
&lt;/pre&gt;
&lt;p&gt;The following individuals contributed in part to the Network Time Protocol Distribution Version 4 and are acknowledged as authors of this work.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20takao_abe@xurb.jp&#34;&gt;Takao Abe &lt;a href=&#34;mailto:takao_abe@xurb.jp&#34;&gt;takao_abe@xurb.jp&lt;/a&gt;&lt;/a&gt; Clock driver for JJY receivers&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mark_andrews@isc.org&#34;&gt;Mark Andrews &lt;a href=&#34;mailto:mark_andrews@isc.org&#34;&gt;mark_andrews@isc.org&lt;/a&gt;&lt;/a&gt; Leitch atomic clock controller&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20altmeier@atlsoft.de&#34;&gt;Bernd Altmeier &lt;a href=&#34;mailto:altmeier@atlsoft.de&#34;&gt;altmeier@atlsoft.de&lt;/a&gt;&lt;/a&gt; hopf Elektronik serial line and PCI-bus devices&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20vbais@mailman1.intel.co&#34;&gt;Viraj Bais &lt;a href=&#34;mailto:vbais@mailman1.intel.com&#34;&gt;vbais@mailman1.intel.com&lt;/a&gt;&lt;/a&gt; and &lt;a href=&#34;mailto:%20kirkwood@striderfm.intel.com&#34;&gt;Clayton Kirkwood &lt;a href=&#34;mailto:kirkwood@striderfm.intel.com&#34;&gt;kirkwood@striderfm.intel.com&lt;/a&gt;&lt;/a&gt; port to WindowsNT 3.5&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20michael.barone@lmco.com&#34;&gt;Michael Barone &amp;lt;michael,barone@lmco.com&amp;gt;&lt;/a&gt; GPSVME fixes&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20karl@owl.HQ.ileaf.com&#34;&gt;Karl Berry &lt;a href=&#34;mailto:karl@owl.HQ.ileaf.com&#34;&gt;karl@owl.HQ.ileaf.com&lt;/a&gt;&lt;/a&gt; syslog to file option&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20greg.brackley@bigfoot.com&#34;&gt;Greg Brackley &lt;a href=&#34;mailto:greg.brackley@bigfoot.com&#34;&gt;greg.brackley@bigfoot.com&lt;/a&gt;&lt;/a&gt; Major rework of WINNT port. Clean up recvbuf and iosignal code into separate modules.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Marc.Brett@westgeo.com&#34;&gt;Marc Brett &lt;a href=&#34;mailto:Marc.Brett@westgeo.com&#34;&gt;Marc.Brett@westgeo.com&lt;/a&gt;&lt;/a&gt; Magnavox GPS clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Piete.Brooks@cl.cam.ac.uk&#34;&gt;Piete Brooks &lt;a href=&#34;mailto:Piete.Brooks@cl.cam.ac.uk&#34;&gt;Piete.Brooks@cl.cam.ac.uk&lt;/a&gt;&lt;/a&gt; MSF clock driver, Trimble PARSE support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20nelson@bolyard.me&#34;&gt;Nelson B Bolyard &lt;a href=&#34;mailto:nelson@bolyard.me&#34;&gt;nelson@bolyard.me&lt;/a&gt;&lt;/a&gt; update and complete broadcast and crypto features in sntp&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Jean-Francois.Boudreault@viagenie.qc.ca&#34;&gt;Jean-Francois Boudreault &lt;a href=&#34;mailto:Jean-Francois.Boudreault@viagenie.qc.ca&#34;&gt;Jean-Francois.Boudreault@viagenie.qc.ca&lt;/a&gt;&lt;/a&gt; IPv6 support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20reg@dwf.com&#34;&gt;Reg Clemens &lt;a href=&#34;mailto:reg@dwf.com&#34;&gt;reg@dwf.com&lt;/a&gt;&lt;/a&gt; Oncore driver (Current maintainer)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20clift@ml.csiro.au&#34;&gt;Steve Clift &lt;a href=&#34;mailto:clift@ml.csiro.au&#34;&gt;clift@ml.csiro.au&lt;/a&gt;&lt;/a&gt; OMEGA clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:casey@csc.co.za&#34;&gt;Casey Crellin &lt;a href=&#34;mailto:casey@csc.co.za&#34;&gt;casey@csc.co.za&lt;/a&gt;&lt;/a&gt; vxWorks (Tornado) port and help with target configuration&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Sven_Dietrich@trimble.COM&#34;&gt;Sven Dietrich &lt;a href=&#34;mailto:sven_dietrich@trimble.com&#34;&gt;sven_dietrich@trimble.com&lt;/a&gt;&lt;/a&gt; Palisade reference clock driver, NT adj. residuals, integrated Greg&amp;rsquo;s Winnt port.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20dundas@salt.jpl.nasa.gov&#34;&gt;John A. Dundas III &lt;a href=&#34;mailto:dundas@salt.jpl.nasa.gov&#34;&gt;dundas@salt.jpl.nasa.gov&lt;/a&gt;&lt;/a&gt; Apple A/UX port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20duwe@immd4.informatik.uni-erlangen.de&#34;&gt;Torsten Duwe &lt;a href=&#34;mailto:duwe@immd4.informatik.uni-erlangen.de&#34;&gt;duwe@immd4.informatik.uni-erlangen.de&lt;/a&gt;&lt;/a&gt; Linux port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20dennis@mrbill.canet.ca&#34;&gt;Dennis Ferguson &lt;a href=&#34;mailto:dennis@mrbill.canet.ca&#34;&gt;dennis@mrbill.canet.ca&lt;/a&gt;&lt;/a&gt; foundation code for NTP Version 2 as specified in RFC-1119&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20jhay@icomtek.csir.co.za&#34;&gt;John Hay &lt;a href=&#34;mailto:jhay@icomtek.csir.co.za&#34;&gt;jhay@icomtek.csir.co.za&lt;/a&gt;&lt;/a&gt; IPv6 support and testing&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20davehart@davehart.com&#34;&gt;Dave Hart &lt;a href=&#34;mailto:davehart@davehart.com&#34;&gt;davehart@davehart.com&lt;/a&gt;&lt;/a&gt; General maintenance, Windows port interpolation rewrite&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20neoclock4x@linum.com&#34;&gt;Claas Hilbrecht &lt;a href=&#34;mailto:neoclock4x@linum.com&#34;&gt;neoclock4x@linum.com&lt;/a&gt;&lt;/a&gt; NeoClock4X clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20glenn@herald.usask.ca&#34;&gt;Glenn Hollinger &lt;a href=&#34;mailto:glenn@herald.usask.ca&#34;&gt;glenn@herald.usask.ca&lt;/a&gt;&lt;/a&gt; GOES clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20iglesias@uci.edu&#34;&gt;Mike Iglesias &lt;a href=&#34;mailto:iglesias@uci.edu&#34;&gt;iglesias@uci.edu&lt;/a&gt;&lt;/a&gt; DEC Alpha port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20jagubox.gsfc.nasa.gov&#34;&gt;Jim Jagielski &lt;a href=&#34;mailto:jim@jagubox.gsfc.nasa.gov&#34;&gt;jim@jagubox.gsfc.nasa.gov&lt;/a&gt;&lt;/a&gt; A/UX port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20jbj@chatham.usdesign.com&#34;&gt;Jeff Johnson &lt;a href=&#34;mailto:jbj@chatham.usdesign.com&#34;&gt;jbj@chatham.usdesign.com&lt;/a&gt;&lt;/a&gt; massive prototyping overhaul&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:Hans.Lambermont@nl.origin-it.com&#34;&gt;Hans Lambermont &lt;a href=&#34;mailto:Hans.Lambermont@nl.origin-it.com&#34;&gt;Hans.Lambermont@nl.origin-it.com&lt;/a&gt;&lt;/a&gt; or &lt;a href=&#34;mailto:H.Lambermont@chello.nl&#34;&gt;&lt;a href=&#34;mailto:H.Lambermont@chello.nl&#34;&gt;H.Lambermont@chello.nl&lt;/a&gt;&lt;/a&gt; ntpsweep&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20phk@FreeBSD.ORG&#34;&gt;Poul-Henning Kamp &lt;a href=&#34;mailto:phk@FreeBSD.ORG&#34;&gt;phk@FreeBSD.ORG&lt;/a&gt;&lt;/a&gt; Oncore driver (Original author)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www4.informatik.uni-erlangen.de/%7ekardel&#34;&gt;Frank Kardel&lt;/a&gt; [&amp;lt;kardel (at) ntp (dot) org&amp;gt;](mailto:%20kardel (at) ntp (dot) org) PARSE &lt;GENERIC&gt; driver (&amp;gt;14 reference clocks), STREAMS modules for PARSE, support scripts, syslog cleanup, dynamic interface handling&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20jones@hermes.chpc.utexas.edu&#34;&gt;William L. Jones &lt;a href=&#34;mailto:jones@hermes.chpc.utexas.edu&#34;&gt;jones@hermes.chpc.utexas.edu&lt;/a&gt;&lt;/a&gt; RS/6000 AIX modifications, HPUX modifications&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20dkatz@cisco.com&#34;&gt;Dave Katz &lt;a href=&#34;mailto:dkatz@cisco.com&#34;&gt;dkatz@cisco.com&lt;/a&gt;&lt;/a&gt; RS/6000 AIX port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20leres@ee.lbl.gov&#34;&gt;Craig Leres &lt;a href=&#34;mailto:leres@ee.lbl.gov&#34;&gt;leres@ee.lbl.gov&lt;/a&gt;&lt;/a&gt; 4.4BSD port, ppsclock, Magnavox GPS clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20lindholm@ucs.ubc.ca&#34;&gt;George Lindholm &lt;a href=&#34;mailto:lindholm@ucs.ubc.ca&#34;&gt;lindholm@ucs.ubc.ca&lt;/a&gt;&lt;/a&gt; SunOS 5.1 port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20louie@ni.umd.edu&#34;&gt;Louis A. Mamakos &lt;a href=&#34;mailto:louie@ni.umd.edu&#34;&gt;louie@ni.umd.edu&lt;/a&gt;&lt;/a&gt; MD5-based authentication&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20thorinn@diku.dk&#34;&gt;Lars H. Mathiesen &lt;a href=&#34;mailto:thorinn@diku.dk&#34;&gt;thorinn@diku.dk&lt;/a&gt;&lt;/a&gt; adaptation of foundation code for Version 3 as specified in RFC-1305&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mayer@ntp.org&#34;&gt;Danny Mayer &lt;a href=&#34;mailto:mayer@ntp.org&#34;&gt;mayer@ntp.org&lt;/a&gt;&lt;/a&gt;Network I/O, Windows Port, Code Maintenance&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mills@udel.edu&#34;&gt;David L. Mills &lt;a href=&#34;mailto:mills@udel.edu&#34;&gt;mills@udel.edu&lt;/a&gt;&lt;/a&gt; Version 4 foundation: clock discipline, authentication, precision kernel; clock drivers: Spectracom, Austron, Arbiter, Heath, ATOM, ACTS, KSI/Odetics; audio clock drivers: CHU, WWV/H, IRIG&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20moeller@gwdgv1.dnet.gwdg.de&#34;&gt;Wolfgang Moeller &lt;a href=&#34;mailto:moeller@gwdgv1.dnet.gwdg.de&#34;&gt;moeller@gwdgv1.dnet.gwdg.de&lt;/a&gt;&lt;/a&gt; VMS port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mogul@pa.dec.com&#34;&gt;Jeffrey Mogul &lt;a href=&#34;mailto:mogul@pa.dec.com&#34;&gt;mogul@pa.dec.com&lt;/a&gt;&lt;/a&gt; ntptrace utility&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20tmoore@fievel.daytonoh.ncr.com&#34;&gt;Tom Moore &lt;a href=&#34;mailto:tmoore@fievel.daytonoh.ncr.com&#34;&gt;tmoore@fievel.daytonoh.ncr.com&lt;/a&gt;&lt;/a&gt; i386 svr4 port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20kamal@whence.com&#34;&gt;Kamal A Mostafa &lt;a href=&#34;mailto:kamal@whence.com&#34;&gt;kamal@whence.com&lt;/a&gt;&lt;/a&gt; SCO OpenServer port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20derek@toybox.demon.co.uk&#34;&gt;Derek Mulcahy &lt;a href=&#34;mailto:derek@toybox.demon.co.uk&#34;&gt;derek@toybox.demon.co.uk&lt;/a&gt;&lt;/a&gt; and &lt;a href=&#34;mailto:%20d@hd.org&#34;&gt;Damon Hart-Davis &lt;a href=&#34;mailto:d@hd.org&#34;&gt;d@hd.org&lt;/a&gt;&lt;/a&gt; ARCRON MSF clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20neal@ntp.org&#34;&gt;Rob Neal &lt;a href=&#34;mailto:neal@ntp.org&#34;&gt;neal@ntp.org&lt;/a&gt;&lt;/a&gt; Bancomm refclock and config/parse code maintenance&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Rainer.Pruy@informatik.uni-erlangen.de&#34;&gt;Rainer Pruy &lt;a href=&#34;mailto:Rainer.Pruy@informatik.uni-erlangen.de&#34;&gt;Rainer.Pruy@informatik.uni-erlangen.de&lt;/a&gt;&lt;/a&gt; monitoring/trap scripts, statistics file handling&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20dirce@zk3.dec.com&#34;&gt;Dirce Richards &lt;a href=&#34;mailto:dirce@zk3.dec.com&#34;&gt;dirce@zk3.dec.com&lt;/a&gt;&lt;/a&gt; Digital UNIX V4.0 port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20wsanchez@apple.com&#34;&gt;Wilfredo Sánchez &lt;a href=&#34;mailto:wsanchez@apple.com&#34;&gt;wsanchez@apple.com&lt;/a&gt;&lt;/a&gt; added support for NetInfo&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20mrapple@quack.kfu.com&#34;&gt;Nick Sayer &lt;a href=&#34;mailto:mrapple@quack.kfu.com&#34;&gt;mrapple@quack.kfu.com&lt;/a&gt;&lt;/a&gt; SunOS streams modules&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20jack@innovativeinternet.com&#34;&gt;Jack Sasportas &lt;a href=&#34;mailto:jack@innovativeinternet.com&#34;&gt;jack@innovativeinternet.com&lt;/a&gt;&lt;/a&gt; Saved a Lot of space on the stuff in the html/pic/ subdirectory&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20schnitz@unipress.com&#34;&gt;Ray Schnitzler &lt;a href=&#34;mailto:schnitz@unipress.com&#34;&gt;schnitz@unipress.com&lt;/a&gt;&lt;/a&gt; Unixware1 port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20shields@tembel.org&#34;&gt;Michael Shields &lt;a href=&#34;mailto:shields@tembel.org&#34;&gt;shields@tembel.org&lt;/a&gt;&lt;/a&gt; USNO clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20pebbles.jpl.nasa.gov&#34;&gt;Jeff Steinman &lt;a href=&#34;mailto:jss@pebbles.jpl.nasa.gov&#34;&gt;jss@pebbles.jpl.nasa.gov&lt;/a&gt;&lt;/a&gt; Datum PTS clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20harlan@pfcs.com&#34;&gt;Harlan Stenn &lt;a href=&#34;mailto:harlan@pfcs.com&#34;&gt;harlan@pfcs.com&lt;/a&gt;&lt;/a&gt; GNU automake/autoconfigure makeover, various other bits (see the ChangeLog)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20ken@sdd.hp.com&#34;&gt;Kenneth Stone &lt;a href=&#34;mailto:ken@sdd.hp.com&#34;&gt;ken@sdd.hp.com&lt;/a&gt;&lt;/a&gt; HP-UX port&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20ajit@ee.udel.edu&#34;&gt;Ajit Thyagarajan &lt;a href=&#34;mailto:ajit@ee.udel.edu&#34;&gt;ajit@ee.udel.edu&lt;/a&gt;&lt;/a&gt;IP multicast/anycast support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20tsuruoka@nc.fukuoka-u.ac.jp&#34;&gt;Tomoaki TSURUOKA &lt;a href=&#34;mailto:tsuruoka@nc.fukuoka-u.ac.jp&#34;&gt;tsuruoka@nc.fukuoka-u.ac.jp&lt;/a&gt;&lt;/a&gt;TRAK clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20vixie@vix.com&#34;&gt;Paul A Vixie &lt;a href=&#34;mailto:vixie@vix.com&#34;&gt;vixie@vix.com&lt;/a&gt;&lt;/a&gt; TrueTime GPS driver, generic TrueTime clock driver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:%20Ulrich.Windl@rz.uni-regensburg.de&#34;&gt;Ulrich Windl &lt;a href=&#34;mailto:Ulrich.Windl@rz.uni-regensburg.de&#34;&gt;Ulrich.Windl@rz.uni-regensburg.de&lt;/a&gt;&lt;/a&gt; corrected and validated HTML documents according to the HTML DTD&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Debugging Reference Clock Drivers</title>
      <link>/archives/4.2.6-series/rdebug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/rdebug/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/oz2.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;The Wizard of Oz&lt;/em&gt;, L. Frank Baum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Call the girls and they&amp;rsquo;ll sweep your bugs.&lt;/p&gt;
&lt;p&gt;Last update: 01:24 UTC Saturday, November 24, 2007&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The &lt;a href=&#34;/archives/4.2.6-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; and &lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt;&lt;/a&gt; utility programs can be used to debug reference clocks, either on the server itself or from another machine elsewhere in the network. The server is compiled, installed and started using the configuration file described in the &lt;a href=&#34;/archives/4.2.6-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt;&lt;/a&gt; page and its dependencies. If the clock appears in the &lt;tt&gt;ntpq&lt;/tt&gt; utility and &lt;tt&gt;pe&lt;/tt&gt; command, no errors have occurred and the daemon has started, opened the devices specified and waiting for peers and radios to come up. If not, the first thing to look for are error messages on the system log. These are usually due to improper configuration, missing links or multiple instances of the daemon.&lt;/p&gt;
&lt;p&gt;It normally takes a minute or so for evidence to appear that the clock is running and the driver is operating correctly. The first indication is a nonzero value in the &lt;tt&gt;reach&lt;/tt&gt; column in the &lt;tt&gt;pe&lt;/tt&gt; billboard. If nothing appears after a few minutes, the next step is to be sure the RS232 messages, if used, are getting to and from the clock. The most reliable way to do this is with an RS232 tester and to look for data flashes as the driver polls the clock and/or as data arrive from the clock. Our experience is that the overwhelming fraction of problems occurring during installation are due to problems such as miswired connectors or improperly configured device links at this stage.&lt;/p&gt;
&lt;p&gt;If RS232 messages are getting to and from the clock, the variables of interest can be inspected using the &lt;tt&gt;ntpq&lt;/tt&gt; program and various commands described on the documentation page. First, use the &lt;tt&gt;pe&lt;/tt&gt; and &lt;tt&gt;as&lt;/tt&gt; commands to display billboards showing the peer configuration and association IDs for all peers, including the radio clock. The assigned clock address should appear in the &lt;tt&gt;pe&lt;/tt&gt; billboard and the association ID for it at the same relative line position in the &lt;tt&gt;as&lt;/tt&gt; billboard.&lt;/p&gt;
&lt;p&gt;Additional information is available with the &lt;tt&gt;rv&lt;/tt&gt; and &lt;tt&gt;clockvar&lt;/tt&gt; commands, which take as argument the association ID shown in the &lt;tt&gt;as&lt;/tt&gt; billboard. The &lt;tt&gt;rv&lt;/tt&gt; command with no argument shows the system variables, while the &lt;tt&gt;rv&lt;/tt&gt; command with association ID argument shows the peer variables for the clock, as well as other peers of interest. The &lt;tt&gt;clockvar&lt;/tt&gt; command with argument shows the peer variables specific to reference clock peers, including the clock status, device name, last received timecode (if relevant), and various event counters. In addition, a subset of the &lt;tt&gt;fudge&lt;/tt&gt; parameters is included. The poll and error counters in the &lt;tt&gt;clockvar&lt;/tt&gt; billboard are useful debugging aids. The &lt;tt&gt;poll&lt;/tt&gt; counts the poll messages sent to the clock, while the &lt;tt&gt;noreply&lt;/tt&gt;, &lt;tt&gt;badformat&lt;/tt&gt; and &lt;tt&gt;baddate&lt;/tt&gt; count various errors. Check the timecode to be sure it matches what the driver expects. This may require consulting the clock hardware reference manual, which is probably pretty dusty at this stage.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpdc&lt;/tt&gt; utility program can be used for detailed inspection of the clock driver status. The most useful are the &lt;tt&gt;clockstat&lt;/tt&gt; and &lt;tt&gt;clkbug&lt;/tt&gt; commands described in the document page. While these commands permit getting quite personal with the particular driver involved, their use is seldom necessary, unless an implementation bug shows up. If all else fails, turn on the debugging trace using two &lt;tt&gt;-d&lt;/tt&gt; flags in the &lt;tt&gt;ntpd&lt;/tt&gt; startup command line. Most drivers will dump status at every received message in this case. While the displayed trace can be intimidating, this provides the most detailed and revealing indicator of how the driver and clock are performing and where bugs might lurk.&lt;/p&gt;
&lt;p&gt;Most drivers write a message to the &lt;tt&gt;clockstats&lt;/tt&gt; file as each timecode or surrogate is received from the radio clock. By convention, this is the last ASCII timecode (or ASCII gloss of a binary-coded one) received from the radio clock. This file is managed by the &lt;tt&gt;filegen&lt;/tt&gt; facility described in the &lt;tt&gt;ntpd&lt;/tt&gt; page and requires specific commands in the configuration file. This forms a highly useful record to discover anomalies during regular operation of the clock. The scripts included in the &lt;tt&gt;./scripts/stats&lt;/tt&gt; directory can be run from a &lt;tt&gt;cron&lt;/tt&gt; job to collect and summarize these data on a daily or weekly basis. The summary files have proven inspirational to detect infrequent misbehavior due to clock implementation bugs in some radios.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Event Messages and Status Words</title>
      <link>/archives/4.2.6-series/decode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/decode/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice47.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Caterpillar knows all the error codes, which is more than most of us do.&lt;/p&gt;
&lt;p&gt;Last update: 30-Apr-2010 23:13 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#system-status-word&#34;&gt;System Status Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#peer-status-word&#34;&gt;Peer Status Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#clock-status-word&#34;&gt;Clock Status Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#flash-status-word&#34;&gt;Flash Status Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#kiss-codes&#34;&gt;Kiss Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#crypto-messages&#34;&gt;Crypto Messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This page lists the status words, event messages and error codes used for &lt;tt&gt;ntpd&lt;/tt&gt; reporting and monitoring. Status words are used to display the current status of the running program. There is one system status word and a peer status word for each association. There is a clock status word for each association that supports a reference clock. There is a flash code for each association which shows errors found in the last packet received (pkt) and during protocol processing (peer). These are commonly viewed using the &lt;tt&gt;ntpq&lt;/tt&gt; program.&lt;/p&gt;
&lt;p&gt;Significant changes in program state are reported as events. There is one set of system events and a set of peer events for each association. In addition, there is a set of clock events for each association that supports a reference clock. Events are normally reported to the &lt;tt&gt;protostats&lt;/tt&gt; monitoring file and optionally to the system log. In addition, if the trap facility is configured, events can be reported to a remote program that can page an administrator.&lt;/p&gt;
&lt;p&gt;This page also includes a description of the error messages produced by the Autokey protocol. These messages are normally sent to the &lt;tt&gt;cryptostats&lt;/tt&gt; monitoring file.&lt;/p&gt;
&lt;p&gt;In the following tables the Code Field is the status or event code assigned and the Message Field a short string used for display and event reporting. The Description field contains a longer explanation of the status or event. Some messages include additional information useful for error diagnosis and performance assessment.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;system-status-word&#34;&gt;System Status Word&lt;/h4&gt;
&lt;p&gt;The system status word consists of four fields LI (0-1), Source (2-7), Count (8-11) and Code (12-15). It is reported in the first line of the &lt;tt&gt;rv&lt;/tt&gt; display produced by the &lt;tt&gt;ntpq&lt;/tt&gt; program.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Leap Field&lt;/strong&gt; displays the system leap indicator bits coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;leap_none&lt;/td&gt;
&lt;td&gt;normal synchronized state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;leap_add_sec&lt;/td&gt;
&lt;td&gt;insert second after 23:59:59 of the current day&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;leap_del_sec&lt;/td&gt;
&lt;td&gt;delete second 23:59:59 of the current day&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;leap_alarm&lt;/td&gt;
&lt;td&gt;never synchronized&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;strong&gt;Source Field&lt;/strong&gt; displays the current synchronization source coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;sync_unspec&lt;/td&gt;
&lt;td&gt;not yet synchronized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;sync_pps&lt;/td&gt;
&lt;td&gt;pulse-per-second signal (Cs, Ru, GPS, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;sync_lf_radio&lt;/td&gt;
&lt;td&gt;VLF/LF radio (WWVB, DCF77, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;sync_hf_radio&lt;/td&gt;
&lt;td&gt;MF/HF radio (WWV, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;sync_uhf_radio&lt;/td&gt;
&lt;td&gt;VHF/UHF radio/satellite (GPS, Galileo, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;sync_local&lt;/td&gt;
&lt;td&gt;local timecode (IRIG, LOCAL driver, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;sync_ntp&lt;/td&gt;
&lt;td&gt;NTP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;sync_other&lt;/td&gt;
&lt;td&gt;other (IEEE 1588, openntp, crony, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;sync_wristwatch&lt;/td&gt;
&lt;td&gt;eyeball and wristwatch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;sync_telephone&lt;/td&gt;
&lt;td&gt;telephone modem (ACTS, PTB, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;strong&gt;Count Field&lt;/strong&gt; displays the number of events since the last time the code changed. Upon reaching 15, subsequent events with the same code are ignored.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Event Field&lt;/strong&gt; displays the most recent event message coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;unspecified&lt;/td&gt;
&lt;td&gt;unspecified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;freq_not_set&lt;/td&gt;
&lt;td&gt;frequency file not available&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;freq_set&lt;/td&gt;
&lt;td&gt;frequency set from frequency file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;spike_detect&lt;/td&gt;
&lt;td&gt;spike detected&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;freq_mode&lt;/td&gt;
&lt;td&gt;initial frequency training mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;clock_sync&lt;/td&gt;
&lt;td&gt;clock synchronized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;restart&lt;/td&gt;
&lt;td&gt;program restart&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07&lt;/td&gt;
&lt;td&gt;panic_stop&lt;/td&gt;
&lt;td&gt;clock error more than 600 s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08&lt;/td&gt;
&lt;td&gt;no_system_peer&lt;/td&gt;
&lt;td&gt;no system peer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;09&lt;/td&gt;
&lt;td&gt;leap_armed&lt;/td&gt;
&lt;td&gt;leap second armed from file or Autokey&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0a&lt;/td&gt;
&lt;td&gt;leap_disarmed&lt;/td&gt;
&lt;td&gt;leap second disarmed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0b&lt;/td&gt;
&lt;td&gt;leap_event&lt;/td&gt;
&lt;td&gt;leap event&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0c&lt;/td&gt;
&lt;td&gt;clock_step&lt;/td&gt;
&lt;td&gt;clock stepped&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0d&lt;/td&gt;
&lt;td&gt;kern&lt;/td&gt;
&lt;td&gt;kernel information message&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0e&lt;/td&gt;
&lt;td&gt;TAI&amp;hellip;&lt;/td&gt;
&lt;td&gt;leapsecond values update from file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0f&lt;/td&gt;
&lt;td&gt;stale leapsecond values&lt;/td&gt;
&lt;td&gt;new NIST leapseconds file needed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;clockhop&lt;/td&gt;
&lt;td&gt;spurious clock hop suppressed&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;peer-status-word&#34;&gt;Peer Status Word&lt;/h4&gt;
&lt;p&gt;The peer status word consists of four fields: Status (0-4), Select (5-7), Count (8-11) and Code (12-15). It is reported in the first line of the &lt;tt&gt;rv &lt;em&gt;associd&lt;/em&gt;&lt;/tt&gt; display produced by the &lt;tt&gt;ntpq&lt;/tt&gt; program.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Status Field&lt;/strong&gt; displays the peer status code bits in hexadecimal; each bit is an independent flag. &lt;strong&gt;Note this field is 5 bits wide, and combines with the 3-bit-wide Select Field to create the first full byte of the peer status word.&lt;/strong&gt; The meaning of each bit in the Status Field is listed in the following table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;08&lt;/td&gt;
&lt;td&gt;bcst&lt;/td&gt;
&lt;td&gt;broadcast association&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;reach&lt;/td&gt;
&lt;td&gt;host reachable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;authenb&lt;/td&gt;
&lt;td&gt;authentication enabled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;auth&lt;/td&gt;
&lt;td&gt;authentication ok&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;config&lt;/td&gt;
&lt;td&gt;persistent association&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;strong&gt;Select Field&lt;/strong&gt; displays the current selection status. The T Field in the following table gives the corresponding tally codes used in the &lt;tt&gt;ntpq peers&lt;/tt&gt; display. The values are coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;T&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;sel_reject&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;discarded as not valid (TEST10-TEST13)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;sel_falsetick&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;discarded by intersection algorithm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;sel_excess&lt;/td&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;discarded by table overflow (not used)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;sel_outlyer&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;discarded by the cluster algorithm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;sel_candidate&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;included by the combine algorithm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;sel_backup&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;backup (more than &lt;tt&gt;tos maxclock&lt;/tt&gt; sources)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;sel_sys.peer&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;system peer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;sel_pps.peer&lt;/td&gt;
&lt;td&gt;o&lt;/td&gt;
&lt;td&gt;PPS peer (when the prefer peer is valid)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;strong&gt;Count Field&lt;/strong&gt; displays the number of events since the last time the code changed. Upon reaching 15, subsequent events with the same code are ignored.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Event Field&lt;/strong&gt; displays the most recent event message coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;mobilize&lt;/td&gt;
&lt;td&gt;association mobilized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;demobilize&lt;/td&gt;
&lt;td&gt;association demobilized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;unreachable&lt;/td&gt;
&lt;td&gt;server unreachable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;reachable&lt;/td&gt;
&lt;td&gt;server reachable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;restart&lt;/td&gt;
&lt;td&gt;association restart&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;no_reply&lt;/td&gt;
&lt;td&gt;no server found (&lt;tt&gt;ntpdate&lt;/tt&gt; mode)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07&lt;/td&gt;
&lt;td&gt;rate_exceeded&lt;/td&gt;
&lt;td&gt;rate exceeded (kiss code &lt;tt&gt;RATE&lt;/tt&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08&lt;/td&gt;
&lt;td&gt;access_denied&lt;/td&gt;
&lt;td&gt;access denied (kiss code &lt;tt&gt;DENY&lt;/tt&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;09&lt;/td&gt;
&lt;td&gt;leap_armed&lt;/td&gt;
&lt;td&gt;leap armed from server LI code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0a&lt;/td&gt;
&lt;td&gt;sys_peer&lt;/td&gt;
&lt;td&gt;become system peer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0b&lt;/td&gt;
&lt;td&gt;clock_event&lt;/td&gt;
&lt;td&gt;see clock status word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0c&lt;/td&gt;
&lt;td&gt;bad_auth&lt;/td&gt;
&lt;td&gt;authentication failure&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0d&lt;/td&gt;
&lt;td&gt;popcorn&lt;/td&gt;
&lt;td&gt;popcorn spike suppressor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0e&lt;/td&gt;
&lt;td&gt;interleave_mode&lt;/td&gt;
&lt;td&gt;entering interleave mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0f&lt;/td&gt;
&lt;td&gt;interleave_error&lt;/td&gt;
&lt;td&gt;interleave error (recovered)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;TAI&amp;hellip;&lt;/td&gt;
&lt;td&gt;leapsecond values update from server&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clock-status-word&#34;&gt;Clock Status Word&lt;/h4&gt;
&lt;p&gt;The clock status word consists of three fields: Unused (0-7), Count (8-11) and Code (12-15). It is reported in the first line of the &lt;tt&gt;clockvar &lt;em&gt;associd&lt;/em&gt;&lt;/tt&gt; display produced by the &lt;tt&gt;ntpq&lt;/tt&gt; program.&lt;/p&gt;
&lt;p&gt;The Count Field displays the number of events since the last &lt;tt&gt;lockvar&lt;/tt&gt; command, while the &lt;strong&gt;Event Field&lt;/strong&gt; displays the most recent event message coded as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;clk_unspe&lt;/td&gt;
&lt;td&gt;nominal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;clk_noreply&lt;/td&gt;
&lt;td&gt;no reply to poll&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;clk_badformat&lt;/td&gt;
&lt;td&gt;bad timecode format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;clk_fault&lt;/td&gt;
&lt;td&gt;hardware or software fault&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;clk_bad_signal&lt;/td&gt;
&lt;td&gt;signal loss&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;clk_bad_date&lt;/td&gt;
&lt;td&gt;bad date format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;clk_bad_time&lt;/td&gt;
&lt;td&gt;bad time format&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;When the clock driver sets the code to a new value, a &lt;tt&gt;clock_alarm&lt;/tt&gt; (11) peer event is reported.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;flash-status-word&#34;&gt;Flash Status Word&lt;/h4&gt;
&lt;p&gt;The flash status word is displayed by the &lt;tt&gt;ntpq&lt;/tt&gt; program &lt;tt&gt;rv&lt;/tt&gt; command. It consists of a number of bits coded in hexadecimal as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Tag&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0001&lt;/td&gt;
&lt;td&gt;TEST1&lt;/td&gt;
&lt;td&gt;pkt_dup&lt;/td&gt;
&lt;td&gt;duplicate packet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0002&lt;/td&gt;
&lt;td&gt;TEST2&lt;/td&gt;
&lt;td&gt;pkt_bogus&lt;/td&gt;
&lt;td&gt;bogus packet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0004&lt;/td&gt;
&lt;td&gt;TEST3&lt;/td&gt;
&lt;td&gt;pkt_unsync&lt;/td&gt;
&lt;td&gt;protocol unsynchronized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0008&lt;/td&gt;
&lt;td&gt;TEST4&lt;/td&gt;
&lt;td&gt;pkt_denied&lt;/td&gt;
&lt;td&gt;access denied&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0010&lt;/td&gt;
&lt;td&gt;TEST5&lt;/td&gt;
&lt;td&gt;pkt_auth&lt;/td&gt;
&lt;td&gt;bad authentication&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0020&lt;/td&gt;
&lt;td&gt;TEST6&lt;/td&gt;
&lt;td&gt;pkt_stratum&lt;/td&gt;
&lt;td&gt;bad synch or stratum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0040&lt;/td&gt;
&lt;td&gt;TEST7&lt;/td&gt;
&lt;td&gt;pkt_header&lt;/td&gt;
&lt;td&gt;bad header&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0080&lt;/td&gt;
&lt;td&gt;TEST8&lt;/td&gt;
&lt;td&gt;pkt_autokey&lt;/td&gt;
&lt;td&gt;bad autokey&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0100&lt;/td&gt;
&lt;td&gt;TEST9&lt;/td&gt;
&lt;td&gt;pkt_crypto&lt;/td&gt;
&lt;td&gt;bad crypto&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0200&lt;/td&gt;
&lt;td&gt;TEST10&lt;/td&gt;
&lt;td&gt;peer_stratum&lt;/td&gt;
&lt;td&gt;peer bad synch or stratum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0400&lt;/td&gt;
&lt;td&gt;TEST11&lt;/td&gt;
&lt;td&gt;peer_dist&lt;/td&gt;
&lt;td&gt;peer distance exceeded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0800&lt;/td&gt;
&lt;td&gt;TEST12&lt;/td&gt;
&lt;td&gt;peer_loop&lt;/td&gt;
&lt;td&gt;peer synchronization loop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;TEST13&lt;/td&gt;
&lt;td&gt;peer_unreach&lt;/td&gt;
&lt;td&gt;peer unreachable&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;kiss-codes&#34;&gt;Kiss Codes&lt;/h4&gt;
&lt;p&gt;Kiss codes are used in kiss-o&#39;-death (KoD) packets, billboard displays and log messages. They consist of a string of four zero-padded ASCII characters. In practice they are informal and tend to change with time and implementation. Some of these codes can appear in the reference identifier field in &lt;tt&gt;ntpq&lt;/tt&gt; billboards. Following is the current list:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ACST&lt;/td&gt;
&lt;td&gt;manycast server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AUTH&lt;/td&gt;
&lt;td&gt;authentication error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AUTO&lt;/td&gt;
&lt;td&gt;Autokey sequence error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BCST&lt;/td&gt;
&lt;td&gt;broadcast server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CRYPT&lt;/td&gt;
&lt;td&gt;Autokey protocol error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DENY&lt;/td&gt;
&lt;td&gt;access denied by server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INIT&lt;/td&gt;
&lt;td&gt;association initialized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MCST&lt;/td&gt;
&lt;td&gt;multicast server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RATE&lt;/td&gt;
&lt;td&gt;rate exceeded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIME&lt;/td&gt;
&lt;td&gt;association timeout&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;STEP&lt;/td&gt;
&lt;td&gt;step time change&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;crypto-messages&#34;&gt;Crypto Messages&lt;/h4&gt;
&lt;p&gt;These messages are sent to the &lt;tt&gt;cryptostats&lt;/tt&gt; file when an error is detected in the Autokey protocol.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;bad_format&lt;/td&gt;
&lt;td&gt;bad extension field format or length&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;bad_timestamp&lt;/td&gt;
&lt;td&gt;bad timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;bad_filestamp&lt;/td&gt;
&lt;td&gt;bad filestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;bad_public_key&lt;/td&gt;
&lt;td&gt;bad or missing public key&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;bad_digest&lt;/td&gt;
&lt;td&gt;unsupported digest type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;bad_identity&lt;/td&gt;
&lt;td&gt;unsupported identity type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07&lt;/td&gt;
&lt;td&gt;bad_siglength&lt;/td&gt;
&lt;td&gt;bad signature length&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08&lt;/td&gt;
&lt;td&gt;bad signature&lt;/td&gt;
&lt;td&gt;extension field signature not verified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;09&lt;/td&gt;
&lt;td&gt;cert_not_verified&lt;/td&gt;
&lt;td&gt;certificate signature not verified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0a&lt;/td&gt;
&lt;td&gt;cert_expired&lt;/td&gt;
&lt;td&gt;host certificate expired&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0b&lt;/td&gt;
&lt;td&gt;bad_cookie&lt;/td&gt;
&lt;td&gt;bad or missing cookie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0c&lt;/td&gt;
&lt;td&gt;bad_leapseconds&lt;/td&gt;
&lt;td&gt;bad or missing leapseconds values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0d&lt;/td&gt;
&lt;td&gt;cert_missing&lt;/td&gt;
&lt;td&gt;bad or missing certificate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0e&lt;/td&gt;
&lt;td&gt;bad_group_key&lt;/td&gt;
&lt;td&gt;bad or missing group key&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0f&lt;/td&gt;
&lt;td&gt;proto_error&lt;/td&gt;
&lt;td&gt;protocol error&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: External Clock Discipline and the Local Clock Driver</title>
      <link>/archives/4.2.6-series/extern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/extern/</guid>
      <description>
        
        
        &lt;p&gt;Last update: 18:38 UTC Thursday, July 28, 2005&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The NTPv4 implementation includes provisions for an external clock, where the system clock is implemented by some external hardware device. One implementation might take the form of a bus peripheral with a high resolution counter disciplined by a GPS receiver, for example. Another implementation might involve another synchronization protocol, such as the Digital Time Synchronization Service (DTSS), where the system time is disciplined to this protocol and NTP clients of the server obtain synchronization indirectly via the server. A third implementation might be a completely separate clock discipline algorithm and synchronization protocol, such as the &lt;tt&gt;Lockclock&lt;/tt&gt; algorithm used with NIST Automated Computer Time Service (ACTS) modem synchronized time.&lt;/p&gt;
&lt;p&gt;When external clocks are used in conjunction with NTP service, some way needs to be provided for the external clock driver and NTP daemon &lt;tt&gt;ntpd&lt;/tt&gt; to communicate and determine which discipline is in control. This is necessary in order to provide backup, for instance if the external clock or protocol were to fail and synchronization service fall back to other means, such as a local reference clock or another NTP server. In addition, when the external clock and driver are in control, some means needs to be provided for the clock driver to pass on status information and error statistics to the NTP daemon.&lt;/p&gt;
&lt;p&gt;Control and monitoring functions for the external clock and driver are implemented using the &lt;a href=&#34;/archives/drivers/driver1&#34;&gt;Local Clock (type 1) driver&lt;/a&gt; and the &lt;tt&gt;ntp_adjtime()&lt;/tt&gt; system call. This system call is implemented by special kernel provisions included in the kernel of several operating systems, including Solaris, Tru64, FreeBSD and Linux, and possibly others. When the external clock is disabled or not implemented, the system call is used to pass time and frequency information, as well as error statistics, to the kernel. Besides disciplining the system time, the same interface can be used by other applications to determine the operating parameters of the discipline.&lt;/p&gt;
&lt;p&gt;When the external clock is enabled, &lt;tt&gt;ntpd&lt;/tt&gt; does not discipline the system clock, nor does it maintain the error statistics. In this case, the external clock and driver do this using mechanisms unknown to &lt;tt&gt;ntpd&lt;/tt&gt;; however, in this case the kernel state variables are retrieved at 64-s intervals by the Local Clock driver and used by the clock selection and mitigation algorithms to determine the system variables presented to other NTP clients and peers. In this way, downstream clients and servers in the NTP subnet can make an intelligent choice when more than one server is available.&lt;/p&gt;
&lt;p&gt;In order to implement a reliable mitigation between ordinary NTP sources and the external clock source, a protocol is necessary between the local clock driver and the external clock driver. This is implemented using Boolean variables and certain bits in the kernel clock status word. The Boolean variables include the following:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp_enable&lt;/tt&gt;. set/reset by the &lt;tt&gt;enable&lt;/tt&gt; command. enables ntpd clock discipline&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp_contro&lt;/tt&gt;l. set during initial configuration if kernel support is available&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;kern_enable&lt;/tt&gt; Set/reset by the &lt;tt&gt;enable&lt;/tt&gt; command&lt;/p&gt;
&lt;p&gt;If the &lt;tt&gt;kern_enable&lt;/tt&gt; switch is set, the daemon computes the offset, frequency, maximum error, estimated error, time constant and status bits, then provides them to the kernel via &lt;tt&gt;ntp_adjtime()&lt;/tt&gt;. If this switch is not set, these values are not passed to the kernel; however, the daemon retrieves their present values and uses them in place of the values computed by the daemon.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;pps_update&lt;/tt&gt; bit set in the protocol routine if the prefer peer has survived and has offset less than 128 ms; otherwise set to zero.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;PPS control&lt;/tt&gt; Updated to the current time by kernel support if the PPS signal is enabled and working correctly. Set to zero in the adjust routine if the interval since the last update exceeds 120 s.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntp_enable&lt;/tt&gt; and &lt;tt&gt;kern_enable&lt;/tt&gt; are set by the configuration module. Normally, both switches default on, so the daemon can control the time and the kernel discipline can be used, if available. The &lt;tt&gt;pps_update&lt;/tt&gt; switch is set by the protocol module when it believes the PPS provider source is legitimate and operating within nominals. The &lt;tt&gt;ntp_control&lt;/tt&gt; switch is set during configuration by interrogating the kernel. If both the &lt;tt&gt;kern_enable&lt;/tt&gt; and &lt;tt&gt;ntp_control&lt;/tt&gt; switches are set, the daemon disciplines the clock via the kernel and the internal daemon discipline is disabled.&lt;/p&gt;
&lt;p&gt;The external clock driver controls the system time and clock selection in the following way. Normally, the driver adjusts the kernel time using the &lt;tt&gt;ntp_adjtime()&lt;/tt&gt; system call in the same way as the daemon. In the case where the kernel discipline is to be used intact, the clock offset is provided in this call and the loop operates as specified. In the case where the driver steers only the frequency, the offset is specified as zero.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Gadget Box PPS Level Converter and CHU Modem</title>
      <link>/archives/4.2.6-series/gadget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/gadget/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/gadget.jpg&#34; alt=&#34;gif&#34;&gt;A Gadget Box built by Chuck Hanavin&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Many radio clocks used as a primary reference source for NTP servers produce a pulse-per-second (PPS) signal that can be used to improve accuracy to a high degree. However, the signals produced are usually incompatible with the modem interface signals on the serial ports used to connect the signal to the host. The gadget box consists of a handful of electronic components assembled in a small aluminum box. It includes level converters and a optional radio modem designed to decode the radio timecode signals transmitted by the Canadian time and frequency station CHU. A complete set of schematics, PCB artwork, drill templates can be obtained via the web from ftp.udel.edu as &lt;a href=&#34;https://www.eecis.udel.edu/~ntp/ntp_spool/hardware/gadget.tar.Z&#34;&gt;gadget.tar.Z&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The gadget box is assembled in a 5&amp;quot;x3&amp;quot;x2&amp;quot; aluminum minibox containing the level converter and modem circuitry. It includes two subcircuits. One of these converts a TTL positive edge into a fixed-width pulse at EIA levels and is for use with a timecode receiver or oscillator including a TTL PPS output. The other converts the timecode modulation broadcast by Canadian time/frequency standard station CHU into a 300-bps serial character stream at EIA levels and is for use with the &lt;a href=&#34;/archives/drivers/driver7&#34;&gt;Radio CHU Audio Demodulator/Decoder&lt;/a&gt; driver.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Hints and Kinks</title>
      <link>/archives/4.2.6-series/hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/hints/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice35.gif&#34; alt=&#34;gif&#34;&gt; &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mother in law has all the answers.&lt;/p&gt;
&lt;p&gt;Last update: 20:27 UTC Monday, December 02, 2002&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This is an index for a set of troubleshooting notes contained in individual text files in the &lt;tt&gt;./hints&lt;/tt&gt; directory. They were supplied by various volunteers in the form of mail messages, patches or just plain word of mouth. Each note applies to a specific computer and operating system and gives information found useful in setting up the NTP distribution or site configuration. The notes are very informal and subject to errors; no attempt has been made to verify the accuracy of the information contained in them.&lt;/p&gt;
&lt;p&gt;Additions or corrections to this list or the information contained in the notes is solicited. The most useful submissions include the name of the computer manufacturer (and model numbers where appropriate), operating system (specific version(s) where appropriate), problem description, problem solution and submitter&amp;rsquo;s name and electric address. If the submitter is willing to continue debate on the problem, please so advise. See the &lt;a href=&#34;/archives/hints/toc&#34;&gt;directory listing&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: How to build new PARSE clocks</title>
      <link>/archives/4.2.6-series/parsenew/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/parsenew/</guid>
      <description>
        
        
        &lt;p&gt;Here is an attempt to sketch out what you need to do in order to add another clock to the parse driver: Currently the implementation is being cleaned up - so not all information in here is completely correct. Refer to the included code where in doubt.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does the system you want the clock connect to have the include files termio.h or termios.h ? (You need that for the parse driver)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What to do:&lt;/p&gt;
&lt;p&gt;Make a conversion module (&lt;code&gt;libparse/clk_\*.c&lt;/code&gt;)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What is the time code format ?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Find year, month, day, hour, minute, second, status (synchronised or not), possibly time zone information (you need to give the offset to UTC). You will have to convert the data from a string into a struct clocktime:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;      struct clocktime                /* clock time broken up from time code */
          {
        long day;
        long month;
        long year;
        long hour;
        long minute;
        long second;
        long usecond;
        long utcoffset;       /* in seconds */
        time_t utcoffset;     /* true utc time instead of date/time */
        long flags;           /* current clock status */
          };
    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Conversion is usually simple and straight forward. For the flags following values can be OR&amp;rsquo;ed together:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;     PARSEB_ANNOUNCE           switch time zone warning (informational only)
         PARSEB_POWERUP            no synchronisation - clock confused (must set then)
         PARSEB_NOSYNC             timecode currently not confirmed (must set then)
                                   usually on reception error when there is still a
                                   chance the the generated time is still ok.

         PARSEB_DST                DST in effect (informational only)
         PARSEB_UTC                timecode contains UTC time (informational only)
         PARSEB_LEAPADD            LEAP addition warning (prior to leap happening - must set when imminent)
                       also used for time code that do not encode the
                       direction (as this is currently the default).
         PARSEB_LEAPDEL            LEAP deletion warning (prior to leap happening - must set when imminent)
         PARSEB_ALTERNATE          backup transmitter (informational only)
         PARSEB_POSITION           geographic position available (informational only)
         PARSEB_LEAPSECOND         actual leap second (this time code is the leap
                                   second - informational only)
    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are feature flags denoting items that are supported by the clock:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;     PARSEB_S_LEAP             supports LEAP - might set PARSEB_LEAP
         PARSEB_S_ANTENNA          supports ANTENNA - might set PARSEB_ALTERNATE
         PARSEB_S_PPS              supports PPS time stamping
         PARSEB_S_POSITION         supports position information (GPS)
       &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the utctime field is non zero this value will be take as time code value. This allows for conversion routines that already have the utc time value. The utctime field gives the seconds since Jan 1st 1970, 0:00:00. The useconds field gives the respective usec value. The fields for date and time (down to second resolution) will be ignored.&lt;/p&gt;
&lt;p&gt;Conversion is done in the &lt;code&gt;cvt_\*&lt;/code&gt; routine in &lt;code&gt;parse/clk_\*.c&lt;/code&gt; files, look in them for examples. The basic structure is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;     struct clockformat &amp;lt;yourclock&amp;gt;_format = {
           lots of fields for you to fill out (see below)
         };

         static cvt_&amp;lt;yourclock&amp;gt;()
           ...
         {
           if (&amp;lt;I do not recognize my time code&amp;gt;) {
             return CVT_NONE;
           } else {
             if (&amp;lt;conversion into clockformat is ok&amp;gt;) {
               &amp;lt;set all necessary flags&amp;gt;;
               return CVT_OK;
             } else {
               return CVT_FAIL|CVT_BADFMT;
             }
           }
    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The struct clockformat is the interface to the rest of the parse driver - it holds all information necessary for finding the clock message and doing the appropriate time stamping.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;struct clockformat
    {
      u_long (*input)();
      /* input routine - your routine - cvt_&amp;lt;yourclock&amp;gt; */
      u_long (*convert)();
      /* conversion routine - your routine - cvt_&amp;lt;yourclock&amp;gt; */
      /* routine for handling RS232 sync events (time stamps) - usually sync_simple */
      u_long (*syncpps)(); 
      /* PPS input routine - usually pps_one */
      void           *data;
      /* local parameters - any parameters/data/configuration info your conversion
         routine might need */
      char           *name;
      /* clock format name - Name of the time code */
      unsigned short  length;
      /* maximum length of data packet for your clock format */
      u_long   flags;
     /* information for the parser what to look for */
    };
    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above should have given you some hints on how to build a &lt;code&gt;clk_\*.c&lt;/code&gt; file with the time code conversion. See the examples and pick a clock closest to yours and tweak the code to match your clock.&lt;/p&gt;
&lt;p&gt;In order to make your &lt;code&gt;clk_\*.c&lt;/code&gt; file usable a reference to the clockformat structure must be put into &lt;code&gt;parse_conf.c&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;TTY setup and initialisation/configuration will be done in &lt;code&gt;ntpd/refclock_parse.c&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Find out the exact tty settings for your clock (baud rate, parity, stop bits, character size, &amp;hellip;) and note them in terms of &lt;code&gt;termio\*.h&lt;/code&gt; c_cflag macros.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;ntpd/refclock_parse.c&lt;/code&gt; fill out a new the struct clockinfo element (that allocates a new &amp;ldquo;IP&amp;rdquo; address - see comments) (see all the other clocks for example).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;pre&amp;gt;   struct clockinfo
         {
          u_long  cl_flags;             /* operation flags (io modes) */
         PARSE_F_PPSPPS       use loopfilter PPS code (CIOGETEV)
         PARSE_F_PPSONSECOND  PPS pulses are on second
         usually flags stay 0 as they are used only for special setups

        void  (*cl_poll)();           /* active poll routine */
             The routine to call when the clock needs data sent to it in order to
             get a time code from the clock (e.g. Trimble clock)

        int   (*cl_init)();           /* active poll init routine */
             The routine to call for very special initializations.

        void  (*cl_event)();          /* special event handling (e.g. reset clock) */
             What to do, when an event happens - used to re-initialize clocks on timeout.

        void  (*cl_end)();            /* active poll end routine */
             The routine to call to undo any special initialisation (free memory/timers)

        void   *cl_data;              /* local data area for &amp;quot;poll&amp;quot; mechanism */
             local data for polling routines

        u_fp    cl_rootdelay;         /* rootdelay */
             NTP rootdelay estimate (usually 0)

             u_long  cl_basedelay;         /* current offset - unsigned l_fp
                                                  fractional part (fraction) by
                                                  which the RS232 time code is
                                                  delayed from the actual time. */

        u_long  cl_ppsdelay;          /* current PPS offset - unsigned l_fp fractional
             time (fraction) by which the PPS time stamp is delayed (usually 0)
       part */

        char   *cl_id;                /* ID code (usually &amp;quot;DCF&amp;quot;) */
             Refclock id - (max 4 chars)

        char   *cl_description;       /* device name */
             Name of this device.

        char   *cl_format;            /* fixed format */
             If the data format cann not ne detected automatically this is the name
         as in clk_*.c clockformat.

        u_char  cl_type;              /* clock type (ntp control) */
             Type if clock as in clock status word (ntp control messages) - usually 0

        u_long  cl_maxunsync;         /* time to trust oscillator after losing synch
      */
             seconds a clock can be trusted after losing synchronisation.

        u_long  cl_speed;             /* terminal input &amp;amp; output baudrate */
        u_long  cl_cflag;             /* terminal io flags */
        u_long  cl_iflag;             /* terminal io flags */
        u_long  cl_oflag;             /* terminal io flags */
        u_long  cl_lflag;             /* terminal io flags */
             termio*.h tty modes.

        u_long  cl_samples;           /* samples for median filter */
        u_long  cl_keep;              /* samples for median filter to keep */
             median filter parameters - smoothing and rejection of bad samples
      } clockinfo[] = {
      ...,&amp;lt;other clocks&amp;gt;,...
      { &amp;lt; your parameters&amp;gt; },
      };

    &amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, this is very sketchy, I know. But I hope it helps a little bit. The best way is to look which clock comes closest to your and tweak that code.&lt;/p&gt;
&lt;p&gt;Two sorts of clocks are used with parse. Clocks that automatically send their time code (once a second) do not need entries in the poll routines because they send the data all the time. The second sort are the clocks that need a command sent to them in order to reply with a time code (like the Trimble clock).&lt;/p&gt;
&lt;p&gt;For questions: &lt;a href=&#34;mailto:%20kardel@acm.org&#34;&gt;kardel@acm.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please include an exact description on how your clock works. (initialisation, TTY modes, strings to be sent to it, responses received from the clock).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: How to Write a Reference Clock Driver</title>
      <link>/archives/4.2.6-series/howto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/howto/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo4.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You need a little magic.&lt;/p&gt;
&lt;p&gt;Last update: 11-Jul-2009 20:44&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/howto/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/howto/#conventions-fudge-factors-and-flags&#34;&gt;Conventions, Fudge Factors and Flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/howto/#files-which-need-to-be-changed&#34;&gt;Files Which Need to be Changed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/howto/#interface-routine-overview&#34;&gt;Interface Routine Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/howto/#pulse-per-second-interface&#34;&gt;Pulse-per-Second Interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;NTP reference clock support maintains the fiction that the clock is actually an ordinary server in the NTP tradition, but operating at a synthetic stratum of zero. The entire suite of algorithms filter the received data and select the best sources to correct the system clock. No packets are exchanged with a reference clock; however, the transmit, receive and packet procedures are replaced with code to simulate them.&lt;/p&gt;
&lt;p&gt;The driver assumes three timescales: standard time maintained by a distant laboratory such as USNO or NIST, reference time maintained by the external radio and the system time maintained by NTP. The radio synchronizes reference time via radio, satellite or modem. As the transmission means may not always be reliable, most radios continue to provide clock updates for some time after signal loss using an internal reference oscillator. In such cases the radio may or may not reveal the time since last synchronized or the estimated time error.&lt;/p&gt;
&lt;p&gt;All three timescales run only in Coordinated Universal Time (UTC) and are not adjusted for local timezone or standard/daylight time. The local timezone, standard/daylight indicator and year, if provided, are ignored. However, it is important to determine whether a leap second is to be inserted in the UTC timescale in the near future so NTP can insert it in the system timescale at the appropriate epoch.&lt;/p&gt;
&lt;p&gt;The interface routines in the &lt;tt&gt;ntp_refclock.c&lt;/tt&gt; source file call the following driver routines via a transfer vector:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;startup&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The association has just been mobilized. The driver may allocate a private structure and open the device(s) required.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;shutdown&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The association is about to be demobilized. The driver should close all device(s) and free private structures.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;receive&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A timecode string is ready for retrieval using the &lt;tt&gt;refclock_gtlin()&lt;/tt&gt; or &lt;tt&gt;refclock_gtraw()&lt;/tt&gt; routines and provide clock updates.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;poll&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Called at poll timeout, by default 64 s. Ordinarily, the driver will send a poll sequence to the radio as required.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;timer&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Called once per second. This can be used for housekeeping functions. In the case with pulse-per-second (PPS) signals, this can be used to process the signals and provide clock updates.&lt;/p&gt;
&lt;p&gt;The receive routine retrieves a timecode string via serial or parallel port, PPS signal or other means. It decodes the timecode in days, hours, minutes, seconds and nanoseconds and checks for errors. It provides these data along with the on-time timestamp to the &lt;tt&gt;refclock_process&lt;/tt&gt; routine, which saves the computed offset in a 60-sample circular buffer. On occasion, either by timeout, sample count or call to the poll routine, the driver calls &lt;tt&gt;refclock_receive&lt;/tt&gt; to process the circular buffer samples and update the system clock.&lt;/p&gt;
&lt;p&gt;The best way to understand how the clock drivers work is to study one of the drivers already implemented, such as &lt;tt&gt;refclock_wwvb.c&lt;/tt&gt;. The main interface is the &lt;tt&gt;refclockproc&lt;/tt&gt; structure, which contains for most drivers the decoded timecode, on-time timestamp, reference timestamp, exception reports and statistics tallies, etc. The support routines are passed a pointer to the &lt;tt&gt;peer&lt;/tt&gt; structure, which contains a pointer to the &lt;tt&gt;refclockproc&lt;/tt&gt; structure, which in turn contains a pointer to the unit structure, if used. For legacy purposes, a table &lt;tt&gt;typeunit[type][unit]&lt;/tt&gt; contains the peer structure pointer for each configured clock type and unit. This structure should not be used for new implementations.&lt;/p&gt;
&lt;p&gt;Radio and modem reference clocks by convention have addresses of the form &lt;tt&gt;127.127.&lt;em&gt;t&lt;/em&gt;.&lt;em&gt;u&lt;/em&gt;&lt;/tt&gt;, where &lt;em&gt;t&lt;/em&gt; is the clock type and &lt;em&gt;u&lt;/em&gt; in the range 0-3 is used to distinguish multiple instances of clocks of the same type. Most clocks require a serial or parallel port or special bus peripheral. The particular device is normally specified by adding a soft link &lt;tt&gt;/dev/device_u_&lt;/tt&gt; to the particular hardware device.&lt;/p&gt;
&lt;p&gt;By convention, reference clock drivers are named in the form &lt;tt&gt;refclock__xxxx_.c&lt;/tt&gt;, where &lt;tt&gt;_xxxx_&lt;/tt&gt; is a unique string. Each driver is assigned a unique type number, long-form driver name, short-form driver name and device name. The existing assignments are in the &lt;a href=&#34;/archives/4.2.6-series/refclock&#34;&gt;Reference Clock Drivers&lt;/a&gt; page and its dependencies. All drivers supported by the particular hardware and operating system are automatically detected in the autoconfigure phase and conditionally compiled.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;conventions-fudge-factors-and-flags&#34;&gt;Conventions, Fudge Factors and Flags&lt;/h4&gt;
&lt;p&gt;Most drivers support manual or automatic calibration for systematic offset bias using values encoded in the &lt;tt&gt;fudge&lt;/tt&gt; configuration command. By convention, the &lt;tt&gt;time1&lt;/tt&gt; value defines the calibration offset in seconds. For those drivers that support statistics collection using the &lt;tt&gt;filegen&lt;/tt&gt; utility and the &lt;tt&gt;clockstats&lt;/tt&gt; file, the &lt;tt&gt;flag4&lt;/tt&gt; switch enables the utility.&lt;/p&gt;
&lt;p&gt;If the calibration feature has been enabled, the &lt;tt&gt;flag1&lt;/tt&gt; switch is set and the PPS signal is actively disciplining the system time, the &lt;tt&gt;time1&lt;/tt&gt; value is automatically adjusted to maintain a residual offset of zero. Once its value has stabilized, the value can be inserted in the configuration file and the calibration feature disabled.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files-which-need-to-be-changed&#34;&gt;Files Which Need to be Changed&lt;/h4&gt;
&lt;p&gt;When a new reference clock driver is installed, the following files need to be edited. Note that changes are also necessary to properly integrate the driver in the configuration and makefile scripts, but these are decidedly beyond the scope of this page.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;./include/ntp.h&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The reference clock type defines are used in many places. Each driver is assigned a unique type number. Unused numbers are clearly marked in the list. A unique &lt;tt&gt;REFCLK__xxxx_&lt;/tt&gt; identification code should be recorded in the list opposite its assigned type number.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;./libntp/clocktypes.c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The &lt;tt&gt;./libntp/clktype&lt;/tt&gt; array is used by certain display functions. A unique short-form name of the driver should be entered together with its assigned identification code.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;./ntpd/ntp_control.c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The &lt;tt&gt;clocktypes&lt;/tt&gt; array is used for certain control message displays functions. It should be initialized with the reference clock class assigned to the driver, as per the NTP specification RFC-1305. See the &lt;tt&gt;./include/ntp_control.h&lt;/tt&gt; header file for the assigned classes.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;./ntpd/refclock_conf.c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This file contains a list of external structure definitions which are conditionally defined. A new set of entries should be installed similar to those already in the table. The &lt;tt&gt;refclock_conf&lt;/tt&gt; array is a set of pointers to transfer vectors in the individual drivers. The external name of the transfer vector should be initialized in correspondence with the type number.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;interface-routine-overview&#34;&gt;Interface Routine Overview&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;refclock_newpeer&lt;/tt&gt; - initialize and start a reference clock.&lt;/dt&gt;
&lt;p&gt;This routine allocates and initializes the interface structure which supports a reference clock in the form of an ordinary NTP peer. A driver-specific support routine completes the initialization, if used. Default peer variables which identify the clock and establish its reference ID and stratum are set here. It returns one if success and zero if the clock address is invalid or already running, insufficient resources are available or the driver declares a bum rap.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_unpeer&lt;/tt&gt; - shut down a clock&lt;/dt&gt;
&lt;p&gt;This routine is used to shut down a clock and return its resources to the system.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_transmit&lt;/tt&gt; - simulate the transmit procedure&lt;/dt&gt;
&lt;p&gt;This routine implements the NTP transmit procedure for a reference clock. This provides a mechanism to call the driver at the NTP poll interval, as well as provides a reachability mechanism to detect a broken radio or other madness.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_process&lt;/tt&gt; - insert a sample in the circular buffer&lt;/dt&gt;
&lt;p&gt;This routine saves the offset computed from the on-time timestamp and the days, hours, minutes, seconds and nanoseconds in the circular buffer. Note that no provision is included for the year, as provided by some (but not all) radio clocks. Ordinarily, the year is implicit in the Unix file system and hardware/software clock support, so this is ordinarily not a problem.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_receive&lt;/tt&gt; - simulate the receive and packet procedures&lt;/dt&gt;
&lt;p&gt;This routine simulates the NTP receive and packet procedures for a reference clock. This provides a mechanism in which the ordinary NTP filter, selection and combining algorithms can be used to suppress misbehaving radios and to mitigate between them when more than one is available for backup.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_gtraw&lt;/tt&gt;, &lt;tt&gt;refclock_gtlin&lt;/tt&gt; - read the buffer and on-time timestamp&lt;/dt&gt;
&lt;p&gt;These routines return the data received from the clock and the on-time timestamp. The &lt;tt&gt;refclock_gtraw&lt;/tt&gt; routine returns a batch of one or more characters returned by the Unix terminal routines in raw mode. The &lt;tt&gt;refclock_gtlin&lt;/tt&gt; routine removes the parity bit and control characters and returns all the characters up to and including the line terminator. Either routine returns the number of characters delivered.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_open&lt;/tt&gt; - open a serial port for reference clock&lt;/dt&gt;
&lt;p&gt;This routine opens a serial port for I/O and sets default options. It returns the file descriptor if success and zero if failure.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_ioctl&lt;/tt&gt; - set serial port control functions&lt;/dt&gt;
&lt;p&gt;This routine attempts to hide the internal, system-specific details of serial ports. It can handle POSIX (&lt;tt&gt;termios&lt;/tt&gt;), SYSV (&lt;tt&gt;termio&lt;/tt&gt;) and BSD (&lt;tt&gt;sgtty&lt;/tt&gt;) interfaces with varying degrees of success. The routine returns one if success and zero if failure.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_ppsapi&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This routine initializes the Pulse-per-Second interface (see below).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;refclock_pps&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This routine is called once per second to read the latest PPS offset and save it in the circular buffer (see below).&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;pulse-per-second-interface&#34;&gt;Pulse-per-Second Interface&lt;/h4&gt;
&lt;p&gt;When the Pulse-per-Second Application Interface (RFC 2783) is present, a compact PPS interface is available to all drivers. See the &lt;a href=&#34;/archives/4.2.6-series/prefer&#34;&gt;Mitigation Rules and the Prefer Peer&lt;/a&gt; page for further information. To use this interface, include the &lt;tt&gt;timeppps.h&lt;/tt&gt; and &lt;tt&gt;refclock_atom.h&lt;/tt&gt; header files and define the &lt;tt&gt;refclock_atom&lt;/tt&gt; structure in the driver private storage. The &lt;tt&gt;timepps.h&lt;/tt&gt; file is specific to each operating system and may not be available for some systems.&lt;/p&gt;
&lt;p&gt;To use the interface, call &lt;tt&gt;refclock_ppsapi&lt;/tt&gt; from the startup routine passing the device file descriptor and &lt;tt&gt;refclock_atom&lt;/tt&gt; structure pointer. Then, call &lt;tt&gt;refclock_pps&lt;/tt&gt; from the timer routine passing the association pointer and &lt;tt&gt;refclock_atom&lt;/tt&gt; structure pointer. See the &lt;tt&gt;refclock_atom.c&lt;/tt&gt; file for examples and calling sequences. If the PPS signal is valid, the offset sample will be saved in the circular buffer and a bit set in the association flags word indicating the sample is valid and the driver an be selected as a PPS peer. If this bit is set when the poll routine is called, the driver calls the &lt;tt&gt;refclock_receive&lt;/tt&gt; routine to process the samples in the circular buffer and update the system clock.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/pogo1a.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Kernel Model for Precision Timekeeping</title>
      <link>/archives/4.2.6-series/kern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/kern/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice61.gif&#34; alt=&#34;gif&#34;&gt; &lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alice finds the kernel a house of cards.&lt;/p&gt;
&lt;p&gt;Last update: 15:42 UTC Sunday, March 02, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The technical report &lt;sup&gt;&lt;a href=&#34;#myfootnote2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, which is a revision and update of an earlier report &lt;sup&gt;&lt;a href=&#34;#myfootnote3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, describes an engineering model for a precision clock discipline function for a generic operating system. The model is the same hybrid phase/frequency-lock feedback loop used by &lt;tt&gt;ntpd&lt;/tt&gt;, but implemented in the kernel. The code described in &lt;sup&gt;&lt;a href=&#34;#myfootnote2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; is included in Solaris and Digital/Compaq/HP Tru64. It provides two system calls &lt;tt&gt;ntp_gettime()&lt;/tt&gt; and &lt;tt&gt;ntp_adjtime()&lt;/tt&gt; and can discipline the system clock with microsecond resolution. However, newer hardware and kernels with the same system calls can discipline the clock with nanosecond resolution. The new code described in &lt;sup&gt;&lt;a href=&#34;#myfootnote1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; is in FreeBSD and is an option for Linux, SunOS and Tru64; however, of the options, only the Linux implementation, which does not include licensed code, is readily available. The software and documentation, including a simulator used to verify correct behavior, but not involving licensed code, is available from &lt;a href=&#34;https://www.eecis.udel.edu/~ntp/ntp_spool/software/nanokernel.tar.gz&#34;&gt;nanokernel.tar.gz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The kernel model also provides support for an external precision timing source, such as described in the &lt;a href=&#34;/archives/4.2.6-series/pps&#34;&gt;Pulse-per-second (PPS) Signal Interfacing&lt;/a&gt; page. The new system calls are used by the &lt;a href=&#34;/archives/4.2.6-series/kernpps&#34;&gt;PPSAPI interface&lt;/a&gt; and in turn by the &lt;a href=&#34;/archives/drivers/driver22&#34;&gt;PPS Clock Discipline&lt;/a&gt; driver (type 22) to provide synchronization limited in principle only by the accuracy and stability of the external timing source.&lt;/p&gt;
&lt;h4 id=&#34;footnotes&#34;&gt;Footnotes&lt;/h4&gt;
&lt;p&gt;&lt;a name=&#34;myfootnote1&#34;&gt;1&lt;/a&gt; Mills, D.L., and P.-H. Kamp. The nanokernel. &lt;em&gt;Proc. Precision Time and Time Interval (PTTI) Applications and Planning Meeting&lt;/em&gt; (Reston VA, November 2000). Paper: &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/papers/nano/nano2.ps&#34;&gt;PostScript&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/papers/nano/nano2.pdf&#34;&gt;PDF&lt;/a&gt;, Slides: &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/brief/nano/nano.ps&#34;&gt;PostScript&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/brief/nano/nano.pdf&#34;&gt;PDF&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/brief/nano/nano.ppt&#34;&gt;PowerPoint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;myfootnote2&#34;&gt;2&lt;/a&gt;  Mills, D.L. Unix kernel modifications for precision time synchronization. Electrical Engineering Department Report 94-10-1, University of Delaware, October 1994, 24 pp. Abstract: &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/reports/kern/kerna.ps&#34;&gt;PostScript&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/reports/kern/kerna.pdf&#34;&gt;PDF&lt;/a&gt;, Body: &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/reports/kern/kernb.ps&#34;&gt;PostScript&lt;/a&gt; | &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/reports/kern/kernb.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;myfootnote3&#34;&gt;3&lt;/a&gt;  Mills, D.L. A kernel model for precision timekeeping. Network Working Group Report RFC-1589, University of Delaware, March 1994. 31 pp. &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/rfc/rfc1589.txt&#34;&gt;ASCII&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Miscellaneous Options</title>
      <link>/archives/4.2.6-series/miscopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/miscopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/boom3.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We have three, now looking for more.&lt;/p&gt;
&lt;p&gt;Last update: 13-Nov-2009 19:08 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;dt id=&#34;broadcastdelay&#34;&gt;&lt;tt&gt;broadcastdelay _seconds_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The broadcast and multicast modes require a special calibration to determine the network delay between the local and remote servers. Ordinarily, this is done automatically by the initial protocol exchanges between the client and server. In some cases, the calibration procedure may fail due to network or server access controls, for example. This command specifies the default delay to be used under these circumstances. Typically (for Ethernet), a number between 0.003 and 0.007 seconds is appropriate.&lt;/p&gt;
&lt;dt id=&#34;driftfile&#34;&gt;&lt;tt&gt;driftfile _driftfile_ { _tolerance_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command specifies the complete path and name of the file used to record the frequency of the local clock oscillator. This is the same operation as the &lt;tt&gt;-f&lt;/tt&gt; command linke option. If the file exists, it is read at startup in order to set the initial frequency and then updated once per hour or more with the current frequency computed by the daemon. If the file name is specified, but the file itself does not exist, the starts with an initial frequency of zero and creates the file when writing it for the first time. If this command is not given, the daemon will always start with an initial frequency of zero.&lt;/p&gt;
&lt;p&gt;The file format consists of a single line containing a single floating point number, which records the frequency offset measured in parts-per-million (PPM). The file is updated by first writing the current drift value into a temporary file and then renaming this file to replace the old version. This implies that &lt;tt&gt;ntpd&lt;/tt&gt; must have write permission for the directory the drift file is located in, and that file system links, symbolic or otherwise, should be avoided.&lt;/p&gt;
&lt;p&gt;The parameter &lt;tt&gt;tolerance&lt;/tt&gt; is the wander threshold to skip writing the new value. If the value of wander computed from recent frequency changes is greater than this threshold the file will be updated once per hour. If below the threshold, the file will not be written.&lt;/p&gt;
&lt;dt id=&#34;enable&#34;&gt;&lt;tt&gt;enable [ auth | bclient | calibrate | kernel | monitor | ntp | pps | stats]&lt;/tt&gt;  
&lt;tt&gt;disable [ auth | bclient | calibrate | kernel | monitor | ntp | pps | stats ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Provides a way to enable or disable various system options. Flags not mentioned are unaffected. Note that all of these flags can be controlled remotely using the &lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt;&lt;/a&gt; utility program.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;auth&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Enables the server to synchronize with unconfigured peers only if the peer has been correctly authenticated using either public key or private key cryptography. The default for this flag is enable.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;bclient&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Enables the server to listen for a message from a broadcast or multicast server, as in the &lt;tt&gt;multicastclient&lt;/tt&gt; command with default address. The default for this flag is disable.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;calibrate&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Enables the calibrate feature for reference clocks. The default for this flag is disable.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;kernel&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Enables the kernel time discipline, if available. The default for this flag is enable if support is available, otherwise disable.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;monitor&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Enables the monitoring facility. See the &lt;tt&gt;ntpdc&lt;/tt&gt; program and the &lt;tt&gt;monlist&lt;/tt&gt; command or further information. The default for this flag is enable.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;ntp&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Enables time and frequency discipline. In effect, this switch opens and closes the feedback loop, which is useful for testing. The default for this flag is enable.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;stats&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Enables the statistics facility. See the &lt;a href=&#34;/archives/4.2.6-series/monopt&#34;&gt;Monitoring Options&lt;/a&gt; page for further information. The default for this flag is disable.&lt;/p&gt;
&lt;dt id=&#34;includefile&#34;&gt;&lt;tt&gt;includefile _includefile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command allows additional configuration commands to be included from a separate file. Include files may be nested to a depth of five; upon reaching the end of any include file, command processing resumes in the previous configuration file. This option is useful for sites that run &lt;tt&gt;ntpd&lt;/tt&gt; on multiple hosts, with (mostly) common options (e.g., a restriction list).&lt;/p&gt;
&lt;dt id=&#34;interface&#34;&gt;&lt;tt&gt;interface [listen | ignore | drop] [all | ipv4 | ipv6 | wildcard | _name_ | _address_[/_prefixlen_]]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command controls which network addresses &lt;tt&gt;ntpd&lt;/tt&gt; opens, and whether input is dropped without processing. The first parameter determines the action for addresses which match the second parameter. That parameter specifies a class of addresses, or a specific interface name, or an address. In the address case, &lt;tt&gt;&lt;em&gt;prefixlen&lt;/em&gt;&lt;/tt&gt; determines how many bits must match for this rule to apply. &lt;tt&gt;ignore&lt;/tt&gt; prevents opening matching addresses, &lt;tt&gt;drop&lt;/tt&gt; causes &lt;tt&gt;ntpd&lt;/tt&gt; to open the address and drop all received packets without examination. Multiple &lt;tt&gt;interface&lt;/tt&gt; commands can be used. The last rule which matches a particular address determines the action for it. &lt;tt&gt;interface&lt;/tt&gt; commands are disabled if any &lt;a href=&#34;/archives/4.2.6-series/ntpd#--interface&#34;&gt;&lt;tt&gt;-I&lt;/tt&gt;&lt;/a&gt; or &lt;a href=&#34;/archives/4.2.6-series/ntpd#--novirtualips&#34;&gt;&lt;tt&gt;-L&lt;/tt&gt;&lt;/a&gt; command-line options are used. If none of those options are used and no &lt;tt&gt;interface&lt;/tt&gt; actions are specified in the configuration file, all available network addresses are opened. The &lt;tt&gt;nic&lt;/tt&gt; command is an alias for &lt;tt&gt;interface&lt;/tt&gt;.&lt;/p&gt;
&lt;dt id=&#34;leapfile&#34;&gt;&lt;tt&gt;leapfile _leapfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command loads the NIST leapseconds file and initializes the leapsecond values for the next leapsecond time, expiration time and TAI offset. The file can be obtained directly from NIST national time servers using &lt;tt&gt;ftp&lt;/tt&gt; as the ASCII file &lt;tt&gt;pub/leap-seconds&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;While not strictly a security function, the Autokey protocol provides means to securely retrieve the current or updated leapsecond values from a server.&lt;/p&gt;
&lt;dt id=&#34;logconfig&#34;&gt;&lt;tt&gt;logconfig _configkeyword_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command controls the amount and type of output written to the system &lt;tt&gt;syslog&lt;/tt&gt; facility or the alternate &lt;tt&gt;logfile&lt;/tt&gt; log file. All &lt;em&gt;&lt;tt&gt;configkeyword&lt;/tt&gt;&lt;/em&gt; keywords can be prefixed with &lt;tt&gt;=&lt;/tt&gt;, &lt;tt&gt;+&lt;/tt&gt; and &lt;tt&gt;-&lt;/tt&gt;, where &lt;tt&gt;=&lt;/tt&gt; sets the &lt;tt&gt;syslogmask&lt;/tt&gt;, &lt;tt&gt;+&lt;/tt&gt; adds and &lt;tt&gt;-&lt;/tt&gt; removes messages. &lt;tt&gt;syslog messages&lt;/tt&gt; can be controlled in four classes (&lt;tt&gt;clock&lt;/tt&gt;, &lt;tt&gt;peer&lt;/tt&gt;, &lt;tt&gt;sys&lt;/tt&gt; and &lt;tt&gt;sync&lt;/tt&gt;). Within these classes four types of messages can be controlled: informational messages (&lt;tt&gt;info&lt;/tt&gt;), event messages (&lt;tt&gt;events&lt;/tt&gt;), statistics messages (&lt;tt&gt;statistics&lt;/tt&gt;) and status messages (&lt;tt&gt;status&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;Configuration keywords are formed by concatenating the message class with the event class. The &lt;tt&gt;all&lt;/tt&gt; prefix can be used instead of a message class. A message class may also be followed by the &lt;tt&gt;all&lt;/tt&gt; keyword to enable/disable all messages of the respective message class. By default, &lt;tt&gt;logconfig&lt;/tt&gt; output is set to &lt;tt&gt;allsync&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Thus, a minimal log configuration could look like this:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;logconfig=syncstatus +sysevents&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;This would just list the synchronizations state of &lt;tt&gt;ntpd&lt;/tt&gt; and the major system events. For a simple reference server, the following minimum message configuration could be useful:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;logconfig allsync +allclock&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;This configuration will list all clock information and synchronization information. All other events and messages about peers, system events and so on is suppressed.&lt;/p&gt;
&lt;dt id=&#34;logfile&#34;&gt;&lt;tt&gt;logfile _logfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command specifies the location of an alternate log file to be used instead of the default system &lt;tt&gt;syslog&lt;/tt&gt; facility. This is the same operation as the &lt;tt&gt;-l&lt;/tt&gt; command line option.&lt;/p&gt;
&lt;dt id=&#34;phone&#34;&gt;&lt;tt&gt;phone _dial_1 _dial_2 ...&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command is used in conjunction with the ACTS modem driver (type 18). The arguments consist of a maximum of 10 telephone numbers used to dial USNO, NIST or European time services. The Hayes command ATDT is normally prepended to the number, which can contain other modem control codes as well.&lt;/p&gt;
&lt;dt id=&#34;saveconfigdir&#34;&gt;&lt;tt&gt;saveconfigdir _directory_path_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the directory in which to write configuration snapshots requested with &lt;tt&gt;ntpq&lt;/tt&gt;&amp;rsquo;s &lt;a href=&#34;/archives/4.2.6-series/ntpq#saveconfig&#34;&gt;saveconfig&lt;/a&gt; command. If &lt;tt&gt;saveconfigdir&lt;/tt&gt; does not appear in the configuration file, saveconfig requests are rejected by ntpd.&lt;/p&gt;
&lt;dt id=&#34;setvar&#34;&gt;&lt;tt&gt;setvar _variable_ [default]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command adds an additional system variable. These variables can be used to distribute additional information such as the access policy. If the variable of the form &lt;tt&gt;&lt;em&gt;name&lt;/em&gt; = &lt;em&gt;value&lt;/em&gt;&lt;/tt&gt; is followed by the &lt;tt&gt;default&lt;/tt&gt; keyword, the variable will be listed as part of the default system variables (&lt;tt&gt;ntpq rv&lt;/tt&gt; command). These additional variables serve informational purposes only. They are not related to the protocol other that they can be listed. The known protocol variables will always override any variables defined via the &lt;tt&gt;setvar&lt;/tt&gt; mechanism. There are three special variables that contain the names of all variable of the same group. The &lt;tt&gt;sys_var_list&lt;/tt&gt; holds the names of all system variables. The &lt;tt&gt;peer_var_list&lt;/tt&gt; holds the names of all peer variables and the &lt;tt&gt;clock_var_list&lt;/tt&gt; holds the names of the reference clock variables.&lt;/p&gt;
&lt;dt id=&#34;tinker&#34;&gt;&lt;tt&gt;tinker [ allan _allan_ | dispersion _dispersion_ | freq _freq_ | huffpuff _huffpuff_ | panic _panic_ | step _step_ | stepout _stepout_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command alters certain system variables used by the clock discipline algorithm. The default values of these variables have been carefully optimized for a wide range of network speeds and reliability expectations. Very rarely is it necessary to change the default values; but, some folks can&amp;rsquo;t resist twisting the knobs. The options are as follows:&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;allan &lt;em&gt;allan&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the Allan intercept, which is a parameter of the PLL/FLL clock discipline algorithm, in seconds with default 1500 s.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;dispersion &lt;em&gt;dispersion&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the dispersion increase rate in parts-per-million (PPM) with default 15 PPM.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;freq &lt;em&gt;freq&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the frequency offset in parts-per-million (PPM) with default the value in the frequency file.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;huffpuff &lt;em&gt;huffpuff&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the huff-n&#39;-puff filter span, which determines the most recent interval the algorithm will search for a minimum delay. The lower limit is 900 s (15 m), but a more reasonable value is 7200 (2 hours).&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;panic &lt;em&gt;panic&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the panic threshold in seconds with default 1000 s. If set to zero, the panic sanity check is disabled and a clock offset of any value will be accepted.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;step &lt;em&gt;step&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the step threshold in seconds. The default without this command is 0.128 s. If set to zero, step adjustments will never occur. &lt;strong&gt;Note: The kernel time discipline is disabled if the step threshold is set to zero or greater than 0.5 s.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;stepout &lt;em&gt;stepout&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the stepout threshold in seconds. The default without this command is 900 s. If set to zero, popcorn spikes will not be suppressed.&lt;/p&gt;
&lt;dt id=&#34;tos&#34;&gt;&lt;tt&gt;tos [ beacon _beacon_ | ceiling _ceiling_ | cohort {0 | 1} | floor _floor_ | maxclock _maxclock_ | maxdist _maxdist_ | minclock _minclock_ | mindist _mindist_ | minsane _minsane_ | orphan _stratum_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command alters certain system variables used by the clock selection and clustering algorithms. The default values of these variables have been carefully optimized for a wide range of network speeds and reliability expectations. Very rarely is it necessary to change the default values; but, some folks can&amp;rsquo;t resist twisting the knobs. It can be used to select the quality and quantity of peers used to synchronize the system clock and is most useful in dynamic server discovery schemes. The options are as follows:&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;beacon &lt;em&gt;beacon&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    The manycast server sends packets at intervals of 64 s if less than &lt;tt&gt;maxclock&lt;/tt&gt; servers are available. Otherwise, it sends packets at the &lt;em&gt;&lt;tt&gt;beacon&lt;/tt&gt;&lt;/em&gt; interval in seconds. The default is 3600 s. See the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery&lt;/a&gt; page for further details.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;ceiling &lt;em&gt;ceiling&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the maximum stratum (exclusive) for acceptable server packets. The default is 16. See the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery&lt;/a&gt; page for further details.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;cohort { 0 | 1 }&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify whether (1) or whether not (0) a server packet will be accepted for the same stratum as the client. The default is 0. See the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery&lt;/a&gt; page for further details.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;floor &lt;em&gt;floor&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the minimum stratum (inclusive) for acceptable server packest. The default is 1. See the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery&lt;/a&gt; page for further details.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;maxclock &lt;em&gt;maxclock&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the maximum number of servers retained by the server discovery schemes. The default is 10. See the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery&lt;/a&gt; page for further details.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;maxdist &lt;em&gt;maxdistance&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the synchronization distance threshold used by the clock selection algorithm. The default is 1.5 s. This determines both the minimum number of packets to set the system clock and the maximum roundtrip delay. It can be decreased to improve reliability or increased to synchronize clocks on the Moon or planets.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;minclock &lt;em&gt;minclock&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the number of servers used by the clustering algorithm as the minimum to include on the candidate list. The default is 3. This is also the number of servers to be averaged by the combining algorithm.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;mindist &lt;em&gt;mindistance&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the minimum distance used by the selection and anticlockhop algorithm. Larger values increase the tolerance for outliers; smaller values increase the selectivity. The default is .001 s. In some cases, such as reference clocks with high jitter and a PPS signal, it is useful to increase the value to insure the intersection interval is always nonempty.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;minsane &lt;em&gt;minsane&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the number of servers used by the selection algorithm as the minimum to set the system clock. The default is 1 for legacy purposes; however, for critical applications the value should be somewhat higher but less than &lt;tt&gt;minclock&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;orphan &lt;em&gt;stratum&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specify the orphan stratum with default 16. If less than 16 this is the stratum assumed by the root servers. See the &lt;a href=&#34;/archives/4.2.6-series/assoc&#34;&gt;Association Management&lt;/a&gt; page for further details.&lt;/p&gt;
&lt;/dl&gt;
&lt;dt id=&#34;trap&#34;&gt;&lt;tt&gt;trap _host_address_ [port _port_number_] [interface _interfSace_address_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command configures a trap receiver at the given host address and port number for sending messages with the specified local interface address. If the port number is unspecified, a value of 18447 is used. If the interface address is not specified, the message is sent with a source address of the local interface the message is sent through. Note that on a multihomed host the interface used may vary from time to time with routing changes.&lt;/p&gt;
&lt;p&gt;The trap receiver will generally log event messages and other information from the server in a log file. While such monitor programs may also request their own trap dynamically, configuring a trap receiver will ensure that no messages are lost when the server is started.&lt;/p&gt;
&lt;dt id=&#34;ttl&#34;&gt;&lt;tt&gt;ttl _hop_ ...&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command specifies a list of TTL values in increasing order. up to 8 values can be specified. In manycast mode these values are used in turn in an expanding-ring search. The default is eight multiples of 32 starting at 31.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Mitigation Rules and the prefer Keyword</title>
      <link>/archives/4.2.6-series/prefer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/prefer/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice11.gif&#34; alt=&#34;gif&#34;&gt; &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Listen carefully to what I say; it is very complicated.&lt;/p&gt;
&lt;p&gt;Last update: 22-Apr-2009 14:04 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/prefer/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/prefer/#peer-classification&#34;&gt;Peer Classification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/prefer/#the-ttprefertt-peer&#34;&gt;The &lt;tt&gt;prefer&lt;/tt&gt; Peer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/prefer/#mitigation-rules&#34;&gt;Mitigation Rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/prefer/#the-ttminsanett-option&#34;&gt;The &lt;tt&gt;minsane&lt;/tt&gt; Option&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This page summarizes the criteria for choosing from among a number of potential sources suitable contributors to the clock discipline algorithm. The criteria are very meticulous, since they have to handle many different scenarios that may be optimized for peculiar circumstances, including some scenarios designed to support planetary and deep space missions.&lt;/p&gt;
&lt;p&gt;Recall the suite of NTP data acquisition and grooming algorithms as these algorithms proceed in five phases. Phase one discovers the available sources and mobilizes an association for each candidate found. These candidates can result from explicit configuration, broadcast discovery or the pool and manycast autonomous configuration schemes. Phase two grooms the selectable candidates excluding those sources showing one or more of the following errors:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A stratum error occurs if (1) the source had never been synchronized or (2) the stratum of the source is below the &lt;tt&gt;floor&lt;/tt&gt; option or not below the &lt;tt&gt;ceiling&lt;/tt&gt; option specified by the &lt;tt&gt;tos&lt;/tt&gt; command. The default value for these options are 0 and 16, respectively.&lt;/li&gt;
&lt;li&gt;A distance error occurs for a remote source if the root distance is not below the distance threshold &lt;tt&gt;maxdist&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command. The default value for this option is 1.5 s for networks including only the Earth, but this should be increased to 2.5 s for networks including the Moon.&lt;/li&gt;
&lt;li&gt;A loop error occurs if the source is synchronized to the client of if the source is synchronized to the same source as the client.&lt;/li&gt;
&lt;li&gt;An unreachable error occurs if the source is unreachable or if the &lt;tt&gt;server&lt;/tt&gt; or &lt;tt&gt;peer&lt;/tt&gt; command for the source includes the &lt;tt&gt;noselect&lt;/tt&gt; option.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Phase three uses an intersection algorithm to select the truechimers from among the candidates, leaving behind the falsetickers. A server or peer configured with the &lt;tt&gt;true&lt;/tt&gt; option is ipso facto a truechimer independent of this algorithm. Phase four uses a clustering algorithm to cast off statistical outliers from the truechimers until a set of survivors not less than the number specified as the &lt;tt&gt;minclock&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command, with default 3. Phase five uses a set of mitigation rules to select from among the survivors a system peer from which a set of system statistics can be inherited and passed along to a dependent client population. The clock offset developed from these algorithms can discipline the system clock either using the &lt;tt&gt;ntpd&lt;/tt&gt; clock discipline algorithm or enable the kernel to discipline the system clock directly, as described on the &lt;a href=&#34;/archives/4.2.6-series/kern&#34;&gt;A Kernel Model for Precision Timekeeping&lt;/a&gt; page. Phase five is the topic of this page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;peer-classification&#34;&gt;Peer Classification&lt;/h4&gt;
&lt;p&gt;The behavior of the various algorithms and mitigation rules involved depends on how the various synchronization sources are classified. This depends on whether the source is local or remote and if local the type of source. The following classes are defined:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An association configured for a remote server or peer is classified simply as a &lt;em&gt;server&lt;/em&gt;. All other associations are classified as a &lt;em&gt;device driver&lt;/em&gt; of one kind or another. In general, one or more sources of either or both types will be configured in each installation.&lt;/li&gt;
&lt;li&gt;If all sources have been lost and the orphan stratum has been specified by the &lt;tt&gt;orphan&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command, a pseudo-source called the &lt;em&gt;orphan parent&lt;/em&gt; is created with offset and jitter both zero. Dependent orphan children will see the orphan parent as if synchronized to a server at the orphan stratum.If the only survivor is the orphan parent, it becomes the system peer and its clock offset and jitter are inherited by the corresponding system variables. Note that by design all the orphan children having the same set of orphan parents will select the same parent.&lt;/li&gt;
&lt;li&gt;When a device driver has been configured for pulse-per-second (PPS) signals and PPS signals are being received, it is designated the &lt;em&gt;PPS driver.&lt;/em&gt; Note that the Pulse-per-Second driver (type 22) is often used as a PPS driver, but any driver can be operated as a PPS driver as well. The PPS driver provides precision clock discipline only within +-0.5 s, so is always associated with another source or sources that provide the seconds numbering function.&lt;/li&gt;
&lt;li&gt;When the Undisciplined Local Clock driver (type 1) is configured, it is designated the &lt;em&gt;local driver&lt;/em&gt;. This driver is used either as a backup source (stratum greater than zero) should all sources fail, or as the primary source (stratum zero) in cases where the kernel time is disciplined by some other means of synchronization, such as the NIST &lt;tt&gt;lockclock&lt;/tt&gt; scheme, or another synchronization protocol such as the Digital Time Synchronization Service (DTSS).&lt;/li&gt;
&lt;li&gt;When the Automated Computer Time Service driver (type 18) is configured, it is designated the &lt;em&gt;modem driver&lt;/em&gt;. This is used either as a backup source, should all other sources fail, or as the (only) primary source.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;the-ttprefertt-peer&#34;&gt;The &lt;tt&gt;prefer&lt;/tt&gt; Peer&lt;/h4&gt;
&lt;p&gt;The mitigation rules are designed to provide an intelligent selection of the system peer from among the survivors of different types. When used with the &lt;tt&gt;server&lt;/tt&gt; or &lt;tt&gt;peer&lt;/tt&gt; commands, the &lt;tt&gt;prefer&lt;/tt&gt; option designates one or more survivors as preferred over all others. While the rules do not forbid it, it is usually not useful to designate more than one source as preferred; however, if more than one source is so designated, they are used in the order specified in the configuration file; that is, if the first one becomes unselectable, the second one is considered and so forth. This order of priority is also applicable to multiple PPS drivers, multiple modem drivers and even multiple local drivers, although that would not normally be useful.&lt;/p&gt;
&lt;p&gt;The clustering algorithm works on the set of truechimers produced by the intersection algorithms. Ordinarily, any one of them can in principle provide correct time; however, due to various latency variations, not all can provide the most accurate and stable time. The clustering algorithm, processes the truechimers in one or more rounds to cast off a statistical outlier until no more than the &lt;tt&gt;minclock&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command are left. The default for this option is 3.&lt;/p&gt;
&lt;p&gt;In the prefer scheme the clustering algorithm is modified so that the prefer peer is never discarded; on the contrary, its potential removal becomes a rounds-termination condition. However, the prefer peer can still be discarded by the intersection algorithm as a falseticker. To avoid this, it is usually wise to increase the &lt;tt&gt;mindist&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command from the default .005 s to something like .05 s.&lt;/p&gt;
&lt;p&gt;Ordinarily, the combining algorithm computes a weighted average of the survivor offsets to produce the final synchronization source. However, if a prefer peer is among the survivors, the combining algorithm is not used. Instead, the offset of the prefer peer is used exclusively as the final synchronization source. In the common case involving a radio clock and a flock of remote backup servers, and with the radio clock designated a prefer peer, the result is that the radio clock normally disciplines the system clock as long as the radio itself remains operational. However, if the radio fails or becomes a falseticker, the averaged backup sources continue to discipline the system clock.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;mitigation-rules&#34;&gt;Mitigation Rules&lt;/h4&gt;
&lt;p&gt;As the selection algorithm scans the associations for selectable candidates, the modem driver and local driver are segregated for later, but only if not designated a prefer peer. If so designated, a driver is included among the candidate population. In addition, if orphan parents are found the parent with the lowest metric is segregated for later; the others are discarded. For this purpose the metric is defined as the four-octet IPv4 address or the first four octets of the hashed IPv6 address. The resulting candidates, including any prefer peers found, are processed by the intersection to produce a possibly empty set of truechimers. The clustering algorithm ranks the truechimers first by stratum then by synchronization distance and designates the survivor with the lowest distance as the potential system peer.&lt;/p&gt;
&lt;p&gt;If one or more truechimers support a pulse-per-second (PPS) signal and the PPS signal is operating correctly, it is designated a PPS driver. If more than one PPS diver are found, only the first one is used. The PPS driver is not included in the combining algorithm and is mitigated separately.&lt;/p&gt;
&lt;p&gt;At this point we have the following contributors to the system clock discipline:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(potential) system peer, if there are survivors;&lt;/li&gt;
&lt;li&gt;orphan parent, if present;&lt;/li&gt;
&lt;li&gt;local driver and zero offset, if present;&lt;/li&gt;
&lt;li&gt;modem driver and modem offset, if present;&lt;/li&gt;
&lt;li&gt;prefer peer and offset, if present;&lt;/li&gt;
&lt;li&gt;PPS driver and offset, if present.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The mitigation algorithm proceeds in three steps in turn.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If there are no survivors, the modem driver becomes the only survivor if there is one. If not, the local driver becomes the only survivor if there is one. If not, the orphan parent becomes the only survivor if there is one. If the number of survivors at this point is less than the &lt;tt&gt;minsane&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command, the algorithm is terminated and the system variables remain unchanged. Note that &lt;tt&gt;minsane&lt;/tt&gt; is by default 1, but can be set at any value including 0.&lt;/li&gt;
&lt;li&gt;If the prefer peer is among the survivors, it becomes the system peer and its clock offset and jitter are inherited by the corresponding system variables. Otherwise, the combining algorithm computes these variables from the survivor population.&lt;/li&gt;
&lt;li&gt;If there is a PPS driver and the system clock offset at this point is less than 0.4 s, and if there is a prefer peer among the survivors or if the PPS peer is designated as a prefer peer, the PPS driver becomes the system peer and its offset and jitter are inherited by the system variables, thus overriding any variables already computed. Note that a PPS driver is present only if PPS signals are actually being received and enabled by the associated driver.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If none of the above is the case, the data are disregarded and the system variables remain as they are.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;the-ttminsanett-option&#34;&gt;The &lt;tt&gt;minsane&lt;/tt&gt; Option&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;minsane&lt;/tt&gt; option of the &lt;tt&gt;tos&lt;/tt&gt; command, the &lt;tt&gt;prefer&lt;/tt&gt; option of the &lt;tt&gt;server&lt;/tt&gt; and &lt;tt&gt;peer&lt;/tt&gt; commands and the &lt;tt&gt;flag&lt;/tt&gt; options of the &lt;tt&gt;fudge&lt;/tt&gt; command for the PPS driver can be used with the mitigation rules to provide many useful configurations. The &lt;tt&gt;minsane&lt;/tt&gt; option specifies the minimum number of survivors required to synchronized the system clock. The &lt;tt&gt;prefer&lt;/tt&gt; option designates the prefer peer. The driver-dependent &lt;tt&gt;flag&lt;/tt&gt; options enable the PPS driver for various conditions.&lt;/p&gt;
&lt;p&gt;A common scenario is a GPS driver with a serial timecode and PPS signal. The PPS signal is disabled until the system clock has been set by some means, not necessarily the GPS driver. If the serial timecode is within 0.4 s of the PPS signal, the GPS driver is designated the PPS driver and the PPS signal disciplines the system clock. If no GPS satellites are in view, or if the PPS signal is disconnected, the GPS driver stops updating the system clock and so eventually becomes unreachable and replaced by other sources..&lt;/p&gt;
&lt;p&gt;Whether or not the GPS driver disables the PPS signal when unreachable is at the discretion of the driver. Ordinarily, the PPS signal would be disabled in this case; however, When the GPS receiver has a precision holdover oscillator, the driver may elect to continue PPS operation. In this case the PPS signal continues to discipline the system clock.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Monitoring Options</title>
      <link>/archives/4.2.6-series/monopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/monopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo8.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;&lt;/a&gt; from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/p&gt;
&lt;p&gt;Pig was hired to watch the logs.&lt;/p&gt;
&lt;p&gt;Last update: 10-May-2009 16:19 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/monopt/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/monopt/#monitoring-commands&#34;&gt;Monitoring Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/monopt/#file-set-types&#34;&gt;File Set Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; includes a comprehensive monitoring facility which collects statistical data of various types and writes the data to files associated with each type at defined events or intervals. The files associated with a particular type are collectively called the generation file set for that type. The files in the file set are the members of that set.&lt;/p&gt;
&lt;p&gt;File sets have names specific to the type and generation epoch. The names are constructed from three concatenated elements &lt;em&gt;&lt;tt&gt;prefix&lt;/tt&gt;&lt;/em&gt;, &lt;em&gt;&lt;tt&gt;filename&lt;/tt&gt;&lt;/em&gt; and &lt;em&gt;&lt;tt&gt;suffix&lt;/tt&gt;&lt;/em&gt;:&lt;/p&gt;
&lt;dt&gt;_&lt;tt&gt;prefix&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;The directory path specified in the &lt;tt&gt;statsdir&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;_&lt;tt&gt;name&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;The name specified by the &lt;tt&gt;file&lt;/tt&gt; option of the &lt;tt&gt;filegen&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;_&lt;tt&gt;suffix&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;A string of elements bdginning with . (dot) followed by a number of elements depending on the file set type.&lt;/p&gt;
&lt;p&gt;Statistics files can be managed using scripts, examples of which are in the &lt;tt&gt;./scripts&lt;/tt&gt; directory. Using these or similar scripts and Unix &lt;tt&gt;cron&lt;/tt&gt; jobs, the files can be automatically summarized and archived for retrospective analysis.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;monitoring-commands&#34;&gt;Monitoring Commands&lt;/h4&gt;
&lt;dt id=&#34;filegen&#34;&gt;&lt;tt&gt;filegen _name_ file _filename_ [type _type_] [link | nolink] [enable | disable]&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;_&lt;tt&gt;name&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;Specifies the file set type from the list in the next section.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;file _filename_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specfies the file set name.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;type _typename_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the file set interval. The following intervals are supported with default &lt;tt&gt;day&lt;/tt&gt;:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;none&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The file set is actually a single plain file.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pid&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is created for every incarnation of &lt;tt&gt;ntpd&lt;/tt&gt;. The file name suffix is the string .&lt;tt&gt;n&lt;/tt&gt;, where &lt;tt&gt;n&lt;/tt&gt; is the process ID of the &lt;tt&gt;ntpd&lt;/tt&gt; server process.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;day&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is created per day. A day is defined as the period between 00:00 and 23:59 UTC. The file name suffix is the string .&lt;tt&gt;yyyymmdd&lt;/tt&gt;, where &lt;tt&gt;yyyy&lt;/tt&gt; is the year, &lt;tt&gt;mm&lt;/tt&gt; the month of the year and &lt;tt&gt;dd&lt;/tt&gt; the day of the month. Thus, member created on 10 December 1992 would have suffix &lt;tt&gt;.19921210&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;week&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is created per week. The week is defined as the day of year modulo 7. The file name suffix is the string .&lt;tt&gt;yyyyWww&lt;/tt&gt;, where &lt;tt&gt;yyyy&lt;/tt&gt; is the year, &lt;tt&gt;W&lt;/tt&gt; stands for itself and &lt;tt&gt;ww&lt;/tt&gt; the week number starting from 0. For example, The member created on 10 January 1992 would have suffix &lt;tt&gt;.1992W1&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;month&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is created per month. The file name suffix is the string .&lt;tt&gt;yyyymm&lt;/tt&gt;, where &lt;tt&gt;yyyy&lt;/tt&gt; is the year and &lt;tt&gt;mm&lt;/tt&gt; the month of the year starting from 1. For example, The member created on 10 January 1992 would have suffix &lt;tt&gt;.199201&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;year&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is generated per year. The file name suffix is the string .&lt;tt&gt;yyyy&lt;/tt&gt;, where &lt;tt&gt;yyyy&lt;/tt&gt; is the year. For example, The member created on 1 January 1992 would have suffix &lt;tt&gt;.1992&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;age&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;One file set member is generated every 24 hours of &lt;tt&gt;ntpd&lt;/tt&gt; operation. The filename suffix is the string &lt;tt&gt;.adddddddd&lt;/tt&gt;, where &lt;tt&gt;a&lt;/tt&gt; stands for itself and &lt;tt&gt;dddddddd&lt;/tt&gt; is the &lt;tt&gt;ntpd&lt;/tt&gt; running time in seconds at the start of the corresponding 24-hour period.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;link | nolink&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;It is convenient to be able to access the current file set members by file name, but without the suffix. This feature is enabled by &lt;tt&gt;link&lt;/tt&gt; and disabled by &lt;tt&gt;nolink&lt;/tt&gt;. If enabled, which is the default, a hard link from the current file set member to a file without suffix is created. When there is already a file with this name and the number of links to this file is one, it is renamed by appending a dot, the letter &lt;tt&gt;C&lt;/tt&gt;, and the pid of the &lt;tt&gt;ntpd&lt;/tt&gt; server process. When the number of links is greater than one, the file is unlinked. This allows the current file to be accessed by a constant name.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;enable | disable&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable or disable the recording function, with default &lt;tt&gt;enable&lt;/tt&gt;. These options are intended for remote configutation commands.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;statsdir _directory_path_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the directory path prefix for statistics file names.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;file-set-types&#34;&gt;File Set Types&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;clockstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record reference clock statistics. Each update received from a reference clock driver appends one line to the &lt;tt&gt;clockstats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;49213 525.624 127.127.4.1 93 226 00:08:29.606 D&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;49213&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;525.624&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;127.127.4.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;reference clock address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;log message&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;tt&gt;&lt;em&gt;message&lt;/em&gt;&lt;/tt&gt; field includes the last timecode received in decoded ASCII format, where meaningful. In some cases a good deal of additional information is displayed. See information specific to each reference clock for further details.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;cryptostats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record significant events in the Autokey protocol. This option requires the OpenSSL cryptographic software library. Each event appends one line to the &lt;tt&gt;cryptostats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;49213 525.624 128.4.1.1 &lt;em&gt;message&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;49213&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;525.624&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;128.4.1.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;source address (&lt;code&gt;0.0.0.0&lt;/code&gt; for system)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;log message&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;tt&gt;&lt;em&gt;message&lt;/em&gt;&lt;/tt&gt; field includes the message type and certain ancillary information. See the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;loopstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record clock discipline loop statistics. Each system clock update appends one line to the &lt;tt&gt;loopstats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;50935 75440.031 0.000006019 13.778 0.000351733 0.013380 6&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;50935&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;75440.031&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000006019&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;clock offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;13.778&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PPM&lt;/td&gt;
&lt;td&gt;frequency offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000351733&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;RMS jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.013380&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PPM&lt;/td&gt;
&lt;td&gt;RMS frequency jitter (aka wander)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;log&lt;sub&gt;2&lt;/sub&gt; s&lt;/td&gt;
&lt;td&gt;clock discipline loop time constant&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt&gt;&lt;tt&gt;peerstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record peer statistics. Each NTP packet or reference clock update received appends one line to the &lt;tt&gt;peerstats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;48773 10847.650 127.127.4.1 9714 -0.001605376 0.000000000 0.001424877 0.000958674&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;48773&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;10847.650&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;127.127.4.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;source address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;9714&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;hex&lt;/td&gt;
&lt;td&gt;status word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-0.001605376&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;clock offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000000000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;roundtrip delay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.001424877&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;dispersion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000958674&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;RMS jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The status field is encoded in hex format as described in Appendix B of the NTP specification RFC 1305.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;protostats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record significant peer, system and rptpcp events. Each significant event appends one line to the &lt;tt&gt;protostats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;49213 525.624 128.4.1.1 963a 8a &lt;em&gt;message&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;49213&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;525.624&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;128.4.1.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;source address (&lt;code&gt;0.0.0.0&lt;/code&gt; for system)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;963a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;status word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;8a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;event message code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;event message&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The event message code and &lt;tt&gt;&lt;em&gt;message&lt;/em&gt;&lt;/tt&gt; field are described on the &lt;a href=&#34;/archives/4.2.6-series/decode&#34;&gt;Event Messages and Status Words&lt;/a&gt; page.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;rawstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record timestamp statistics. Each NTP packet received appends one line to the &lt;tt&gt;rawstats&lt;/tt&gt; file set:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;50928 2132.543 128.4.1.1 128.4.1.20 3102453281.584327000 3102453281.58622800031 02453332.540806000 3102453332.541458000&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;50928&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2132.543&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;128.4.1.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;source address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;128.4.1.20&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;destination address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3102453281.584327000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP s&lt;/td&gt;
&lt;td&gt;origin timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3102453281.58622800031&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP s&lt;/td&gt;
&lt;td&gt;receive timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;02453332.540806000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP s&lt;/td&gt;
&lt;td&gt;transmit timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3102453332.541458000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP s&lt;/td&gt;
&lt;td&gt;destination timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt&gt;&lt;tt&gt;sysstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Record system statistics. Each hour one line is appended to the &lt;tt&gt;sysstats&lt;/tt&gt; file set in the following format:&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;50928 2132.543 3600 81965 0 9546 56 512 540 10 4 147 1&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;50928&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2132.543&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3600&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time since reset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;81965&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;packets received&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;packets for this host&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;9546&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;current versions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;56&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;old version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;512&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;access denied&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;540&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;bad length or format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;bad authentication&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;declined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;147&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;rate exceeded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;kiss-o&#39;-death packets sent&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt&gt;&lt;tt&gt;timingstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;(Only available when the daemon is compiled with process time debugging support (&amp;ndash;enable-debug-timing - costs performance). Record processing time statistics for various selected code paths.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;53876 36.920 10.0.3.5 1 0.000014592 input processing delay&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Units&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;53876&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MJD&lt;/td&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;36.920&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;time past midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;10.0.3.5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;server address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;event count&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0.000014592&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;total time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;code path description (see source)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP Bug Reporting Procedures</title>
      <link>/archives/4.2.6-series/bugs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/bugs/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/hornraba.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The rabbit toots to make sure you read this.&lt;/p&gt;
&lt;p&gt;Last update: 04:05 UTC Sunday, March 02, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;security-bug-reporting-procedures&#34;&gt;Security Bug Reporting Procedures&lt;/h4&gt;
&lt;p&gt;If you find or suspect a security related program bug in this distribution, please send a report to &lt;a href=&#34;mailto:security@ntp.org&#34;&gt;security@ntp.org&lt;/a&gt;. Please do not contact developers directly.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;non-security-bug-reporting-procedures&#34;&gt;Non-Security Bug Reporting Procedures&lt;/h4&gt;
&lt;p&gt;If you find or suspect a non-security related program bug in this distribution, please send a report to the NTP Public Service Project Bug Tracking System (Bugzilla) at &lt;a href=&#34;https://bugs.ntp.org/&#34;&gt;https://bugs.ntp.org/&lt;/a&gt;. Bugs reported this way are immediately forwarded to the developers. Please do not contact the developers directly.&lt;/p&gt;
&lt;p&gt;If you find or suspect an error in the program documentation pages, please send a report directly to the editor David Mills at &lt;a href=&#34;mailto:mills@udel.edu&#34;&gt;mills@udel.edu&lt;/a&gt;. The master documentation pages are not controlled by the bug tracking system. You are invited to contribute new or revised pages in similar style and format.&lt;/p&gt;
&lt;p&gt;If you wish to send a report via electronic mail, please remember that your report will be held until one of our volunteers enters it in Bugzilla. The email address for these reports is &lt;a href=&#34;mailto:bugs@ntp.org&#34;&gt;bugs@ntp.org&lt;/a&gt;. You will need to register at &lt;a href=&#34;https://bugs.ntp.org/&#34;&gt;https://bugs.ntp.org/&lt;/a&gt; so that you may participate directly in any e-mail discussion regarding your report.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP Debugging Techniques</title>
      <link>/archives/4.2.6-series/debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/debug/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We make house calls and bring our own bugs.&lt;/p&gt;
&lt;p&gt;Last update: 16-Jul-2009 19:36 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/debug/#initial-startup&#34;&gt;Initial Startup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/debug/#verifying-correct-operation&#34;&gt;Verifying Correct Operation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/debug/#large-frequency-errors&#34;&gt;Large Frequency Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/debug/#access-controls&#34;&gt;Access Controls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/debug/#large-delay-variations&#34;&gt;Large Delay Variations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/debug/#cryptographic-authentication&#34;&gt;Cryptographic Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/debug/#debugging-checklist&#34;&gt;Debugging Checklist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;initial-startup&#34;&gt;Initial Startup&lt;/h4&gt;
&lt;p&gt;This page discusses &lt;tt&gt;ntpd&lt;/tt&gt; program monitoring and debugging techniques using the &lt;a href=&#34;/archives/4.2.6-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt; - standard NTP query program&lt;/a&gt;, either on the local server or from a remote machine. In special circumstances the &lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt; - special NTP query program&lt;/a&gt;, can be useful, but its use is not covered here. The &lt;tt&gt;ntpq&lt;/tt&gt; program implements the management functions specified in the NTP specification &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/rfc/rfc1305/rfc1305c.ps&#34;&gt;RFC-1305, Appendix A&lt;/a&gt;. It is used to read and write the variables defined in the NTP Version 4 specification now navigating the standards process. In addition, the program can be used to send remote configuration commands to the server.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; daemon can operate in two modes, depending on the presence of the &lt;tt&gt;-d&lt;/tt&gt; command-line option. Without the option the daemon detaches from the controlling terminal and proceeds autonomously. With one or more &lt;tt&gt;-d&lt;/tt&gt; options the daemon does not detach and generates special trace output useful for debugging. In general, interpretation of this output requires reference to the sources. However, a single &lt;tt&gt;-d&lt;/tt&gt; does produce only mildly cryptic output and can be very useful in finding problems with configuration and network troubles.&lt;/p&gt;
&lt;p&gt;Some problems are immediately apparent when the daemon first starts running. The most common of these are the lack of a UDP port for NTP (123) in the Unix &lt;tt&gt;/etc/services&lt;/tt&gt; file (or equivalent in some systems). &lt;strong&gt;Note that NTP does not use TCP in any form. Also note that NTP requires port 123 for both source and destination ports.&lt;/strong&gt; These facts should be pointed out to firewall administrators.&lt;/p&gt;
&lt;p&gt;Other problems are apparent in the system log, which ordinarily shows the startup banner, some cryptic initialization data and the computed precision value. Event messages at startup and during regular operation are sent to the optional &lt;tt&gt;protostats&lt;/tt&gt; monitor file, as described on the &lt;a href=&#34;/archives/4.2.6-series/decode&#34;&gt;Event Messages and Status Words&lt;/a&gt; page. These and other error messages are sent to the system log, as described on the &lt;a href=&#34;/archives/4.2.6-series/msyslog&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; System Log Messages&lt;/a&gt; page. In real emergencies the daemon will sent a terminal error message to the system log and then cease operation.&lt;/p&gt;
&lt;p&gt;The next most common problem is incorrect DNS names. Check that each DNS name used in the configuration file exists and that the address responds to the Unix &lt;tt&gt;ping&lt;/tt&gt; command. The Unix &lt;tt&gt;traceroute&lt;/tt&gt; or Windows &lt;tt&gt;tracert&lt;/tt&gt; utility can be used to verify a partial or complete path exists. Most problems reported to the NTP newsgroup are not NTP problems, but problems with the network or firewall configuration.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;verifying-correct-operation&#34;&gt;Verifying Correct Operation&lt;/h4&gt;
&lt;p&gt;Unless using the &lt;tt&gt;iburst&lt;/tt&gt; option, the client normally takes a few minutes to synchronize to a server. If the client time at startup happens to be more than 1000 s distant from NTP time, the daemon exits with a message to the system log directing the operator to manually set the time within 1000 s and restart. If the time is less than 1000 s but more than 128 s distant, a step correction occurs and the daemon restarts automatically.&lt;/p&gt;
&lt;p&gt;When started for the first time and a frequency file is not present, the daemon enters a special mode in order to calibrate the frequency. This takes 900 s during which the time is not disciplined. When calibration is complete, the daemon creates the frequency file and enters normal mode to amortize whatever residual offset remains.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpq&lt;/tt&gt; commands &lt;tt&gt;pe&lt;/tt&gt;, &lt;tt&gt;as&lt;/tt&gt; and &lt;tt&gt;rv&lt;/tt&gt; are normally sufficient to verify correct operation and assess nominal performance. The &lt;a href=&#34;/archives/4.2.6-series/ntpq#pe&#34;&gt;&lt;tt&gt;pe&lt;/tt&gt;&lt;/a&gt; command displays a list showing the DNS name or IP address for each association along with selected status and statistics variables. The first character in each line is the tally code, which shows which associations are candidates to set the system clock and of these which one is the system peer. The encoding is shown in the &lt;tt&gt;select&lt;/tt&gt; field of the &lt;a href=&#34;/archives/4.2.6-series/decode#peer-status-word&#34;&gt;peer status word&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;/archives/4.2.6-series/ntpq#as&#34;&gt;&lt;tt&gt;as&lt;/tt&gt;&lt;/a&gt; command displays a list of associations and association identifiers. Note the &lt;tt&gt;condition&lt;/tt&gt; column, which reflects the tally code. The &lt;a href=&#34;/archives/4.2.6-series/ntpq#pe&#34;&gt;&lt;tt&gt;rv&lt;/tt&gt;&lt;/a&gt; command displays the &lt;a href=&#34;/archives/4.2.6-series/ntpq#system-variables&#34;&gt;system variables&lt;/a&gt; billboard, including the &lt;a href=&#34;/archives/4.2.6-series/decode#system-status-word&#34;&gt;system status word&lt;/a&gt;. The &lt;a href=&#34;/archives/4.2.6-series/ntpq#rv&#34;&gt;&lt;tt&gt;rv &lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt;&lt;/a&gt; command, where &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is the association ID, displays the &lt;a href=&#34;/archives/4.2.6-series/ntpq#peer-variables&#34;&gt;peer variables&lt;/a&gt; billboard, including the &lt;a href=&#34;/archives/4.2.6-series/decode#peer-status-word&#34;&gt;peer status word&lt;/a&gt;. Note that, except for explicit calendar dates, times are in milliseconds and frequencies are in parts-per-million (PPM).&lt;/p&gt;
&lt;p&gt;A detailed explanation of the system, peer and clock variables in the billboards is beyond the scope of this page; however, a comprehensive explanation for each one is in the NTPv4 protocol specification. The following observations will be useful in debugging and monitoring.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The server has successfully synchronized to its sources if the &lt;tt&gt;leap&lt;/tt&gt; peer variable has value other than 3 (11b) The client has successfully synchronized to the server when the &lt;tt&gt;leap&lt;/tt&gt; system variable has value other than 3.&lt;/li&gt;
&lt;li&gt;The &lt;tt&gt;reach&lt;/tt&gt; peer variable is an 8-bit shift register displayed in octal format. When a valid packet is received, the rightmost bit is lit. When a packet is sent, the register is shifted left one bit with 0 replacing the rightmost bit. If the &lt;tt&gt;reach&lt;/tt&gt; value is nonzero, the server is reachable; otherwise, it is unreachable. Note that, even if all servers become unreachable, the system continues to show valid time to dependent applications.&lt;/li&gt;
&lt;li&gt;A useful indicator of miscellaneous problems is the &lt;tt&gt;flash&lt;/tt&gt; peer variable, which shows the result of 13 sanity tests. It contains the &lt;a href=&#34;/archives/4.2.6-series/decode#flash-status-word&#34;&gt;flash status word&lt;/a&gt; bits, commonly called flashers, which displays the current errors for the association. These bits should all be zero for a valid server.&lt;/li&gt;
&lt;li&gt;The three peer variables &lt;tt&gt;filtdelay&lt;/tt&gt;, &lt;tt&gt;filtoffset&lt;/tt&gt; and &lt;tt&gt;filtdisp&lt;/tt&gt; show the delay, offset and jitter statistics for each of the last eight measurement rounds. These statistics and their trends are valuable performance indicators for the server, client and the network. For instance, large fluctuations in delay and jitter suggest network congestion. Missing clock filter stages suggest packet losses in the network.&lt;/li&gt;
&lt;li&gt;The synchronization distance, defined as one-half the delay plus the dispersion, represents the maximum error statistic. The jitter represents the expected error statistic. The maximum error and expected error calculated from the peer variables represents the quality metric for the server. The maximum error and expected error calculated from the system variables represents the quality metric for the client. If the root synchronization distance for any server exceeds 1.5 s, called the select threshold, the server is considered invalid.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;large-frequency-errors&#34;&gt;Large Frequency Errors&lt;/h4&gt;
&lt;p&gt;The frequency tolerance of computer clock oscillators varies widely, sometimes above 500 PPM. While the daemon can handle frequency errors up to 500 PPM, or 43 seconds per day, values much above 100 PPM reduce the headroom, especially at the lowest poll intervals. To determine the particular oscillator frequency, start &lt;tt&gt;ntpd&lt;/tt&gt; using the &lt;tt&gt;noselect&lt;/tt&gt; option with the &lt;tt&gt;server&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;p&gt;Record the time of day and offset displayed by the &lt;tt&gt;ntpq&lt;/tt&gt; &lt;a href=&#34;/archives/4.2.6-series/ntpq#pe&#34;&gt;&lt;tt&gt;pe&lt;/tt&gt;&lt;/a&gt; command. Wait for an hour or so and record the time of day and offset. Calculate the frequency as the offset difference divided by the time difference. If the frequency is much above 100 PPM, the &lt;a href=&#34;/archives/4.2.6-series/tickadj&#34;&gt;tickadj&lt;/a&gt; program might be useful to adjust the kernel clock frequency below that value. For systems that do not support this program, this might be one using a command in the system startup file.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;access-controls&#34;&gt;Access Controls&lt;/h4&gt;
&lt;p&gt;Provisions are included in &lt;tt&gt;ntpd&lt;/tt&gt; for access controls which deflect unwanted traffic from selected hosts or networks. The controls described on the &lt;a href=&#34;/archives/4.2.6-series/accopt&#34;&gt;Access Control Options&lt;/a&gt; include detailed packet filter operations based on source address and address mask. Normally, filtered packets are dropped without notice other than to increment tally counters. However, the server can be configured to send a &amp;ldquo;kiss-o&#39;-death&amp;rdquo; (KOD) packet to the client either when explicitly configured or when cryptographic authentication fails for some reason. The client association is permanently disabled, the access denied bit (TEST4) is set in the flash variable and a message is sent to the system log.&lt;/p&gt;
&lt;p&gt;The access control provisions include a limit on the packet rate from a host or network. If an incoming packet exceeds the limit, it is dropped and a KOD sent to the source. If this occurs after the client association has synchronized, the association is not disabled, but a message is sent to the system log. See the &lt;a href=&#34;/archives/4.2.6-series/accopt&#34;&gt;Access Control Options&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;large-delay-variations&#34;&gt;Large Delay Variations&lt;/h4&gt;
&lt;p&gt;In some reported scenarios an access line may show low to moderate network delays during some period of the day and moderate to high delays during other periods. Often the delay on one direction of transmission dominates, which can result in large time offset errors, sometimes in the range up to a few seconds. It is not usually convenient to run &lt;tt&gt;ntpd&lt;/tt&gt; throughout the day in such scenarios, since this could result in several time steps, especially if the condition persists for greater than the stepout threshold.&lt;/p&gt;
&lt;p&gt;Specific provisions have been built into &lt;tt&gt;ntpd&lt;/tt&gt; to cope with these problems. The scheme is called &amp;ldquo;huff-&amp;lsquo;n-puff and is described on the &lt;a href=&#34;/archives/4.2.6-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; page. An alternative approach in such scenarios is first to calibrate the local clock frequency error by running &lt;tt&gt;ntpd&lt;/tt&gt; in continuous mode during the quiet interval and let it write the frequency to the &lt;tt&gt;ntp.drift&lt;/tt&gt; file. Then, run &lt;tt&gt;ntpd -q&lt;/tt&gt; from a cron job each day at some time in the quiet interval. In systems with the nanokernel or microkernel performance enhancements, including Solaris, Tru64, Linux and FreeBSD, the kernel continuously disciplines the frequency so that the residual correction produced by &lt;tt&gt;ntpd&lt;/tt&gt; is usually less than a few milliseconds.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;cryptographic-authentication&#34;&gt;Cryptographic Authentication&lt;/h4&gt;
&lt;p&gt;Reliable source authentication requires the use of symmetric key or public key cryptography, as described on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. In symmetric key cryptography servers and clients share session keys contained in a secret key file In public key cryptography, which requires the OpenSSL software library, the server has a private key, never shared, and a public key with unrestricted distribution. The cryptographic media required are produced by the &lt;a href=&#34;/archives/4.2.6-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt;&lt;/a&gt; program.&lt;/p&gt;
&lt;p&gt;Problems with symmetric key authentication are usually due to mismatched keys or improper use of the &lt;tt&gt;trustedkey&lt;/tt&gt; command. A simple way to check for problems is to use the trace facility, which is enabled using the &lt;tt&gt;ntpd -d&lt;/tt&gt; command line. As each packet is received a trace line is displayed which shows the authentication status in the &lt;tt&gt;auth&lt;/tt&gt; field. A status of 1 indicates the packet was successful authenticated; otherwise it has failed.&lt;/p&gt;
&lt;p&gt;A common misconception is the implication of the &lt;tt&gt;auth&lt;/tt&gt; bit in the &lt;tt&gt;enable&lt;/tt&gt; and &lt;tt&gt;disable&lt;/tt&gt; commands. &lt;strong&gt;This bit does not affect authentication in any way other than to enable or disable mobilization of a new persistent association in broadcast/multicast client, manycast client or symmetric passive modes.&lt;/strong&gt; If enabled, which is the default, these associations require authentication; if not, an association is mobilized even if not authenticated. Users are cautioned that running with authentication disabled is very dangerous, since an intruder can easily strike up an association and inject false time values.&lt;/p&gt;
&lt;p&gt;Public key cryptography is supported in NTPv4 using the Autokey protocol, which is described in briefings on the NTP Project page linked from &lt;a href=&#34;http://www.ntp.org&#34;&gt;www.ntp.org&lt;/a&gt;. Development of this protocol is mature and the &lt;tt&gt;ntpd&lt;/tt&gt; implementation is basically complete. Autokey version 2, which is the latest and current version, includes provisions to hike certificate trails, operate as certificate authorities and verify identity using challenge/response identification schemes. Further details of the protocol are on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. Common problems with configuration and key generation are mismatched key files, broken links and missing or broken random seed file.&lt;/p&gt;
&lt;p&gt;As in the symmetric key cryptography case, the trace facility is a good way to verify correct operation. A statistics file &lt;tt&gt;cryptostats&lt;/tt&gt; records protocol transactions and error messages. The daemon requires a random seed file, public/private key file and a valid certificate file; otherwise it exits immediately with a message to the system log. As each file is loaded a trace message appears with its filestamp. There are a number of checks to insure that only consistent data are used and that the certificate is valid. When the protocol is in operation a number of checks are done to verify the server has the expected credentials and its filestamps and timestamps are consistent. Errors found are reported using NTP control and monitoring protocol traps with extended trap codes shown in the Authentication Options page.&lt;/p&gt;
&lt;p&gt;To assist debugging every NTP extension field is displayed in the trace along with the Autokey operation code. Every extension field carrying a verified signature is identified and displayed along with filestamp and timestamp where meaningful. In all except broadcast/multicast client mode, correct operation of the protocol is confirmed by the absence of extension fields and an &lt;tt&gt;auth&lt;/tt&gt; value of one. It is normal in broadcast/multicast client mode that the broadcast server use one extension field to show the host name, status word and association ID.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;debugging-checklist&#34;&gt;Debugging Checklist&lt;/h4&gt;
&lt;p&gt;If the &lt;tt&gt;ntpq&lt;/tt&gt; or &lt;tt&gt;ntpdc&lt;/tt&gt; programs do not show that messages are being received by the daemon or that received messages do not result in correct synchronization, verify the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Verify the &lt;tt&gt;/etc/services&lt;/tt&gt; file host machine is configured to accept UDP packets on the NTP port 123. NTP is specifically designed to use UDP and does not respond to TCP.&lt;/li&gt;
&lt;li&gt;Check the system log for &lt;tt&gt;ntpd&lt;/tt&gt; messages about configuration errors, name-lookup failures or initialization problems. Common system log messages are summarized on the &lt;a href=&#34;/archives/4.2.6-series/msyslog&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; System Log Messages&lt;/a&gt; page. Check to be sure that only one copy of &lt;tt&gt;ntpd&lt;/tt&gt; is running.&lt;/li&gt;
&lt;li&gt;Verify using &lt;tt&gt;ping&lt;/tt&gt; or other utility that packets actually do make the round trip between the client and server. Verify using &lt;tt&gt;nslookup&lt;/tt&gt; or other utility that the DNS server names do exist and resolve to valid Internet addresses.&lt;/li&gt;
&lt;li&gt;Check that the remote NTP server is up and running. The usual evidence that it is not is a &lt;tt&gt;Connection refused&lt;/tt&gt; message.&lt;/li&gt;
&lt;li&gt;Using the &lt;tt&gt;ntpdc&lt;/tt&gt; program, verify that the packets received and packets sent counters are incrementing. If the sent counter does not increment and the configuration file includes configured servers, something may be wrong in the host network or interface configuration. If this counter does increment, but the received counter does not increment, something may be wrong in the network or the server NTP daemon may not be running or the server itself may be down or not responding.&lt;/li&gt;
&lt;li&gt;If both the sent and received counters do increment, but the &lt;tt&gt;reach&lt;/tt&gt; values in the &lt;tt&gt;pe&lt;/tt&gt; billboard with &lt;tt&gt;ntpq&lt;/tt&gt; continues to show zero, received packets are probably being discarded for some reason. If this is the case, the cause should be evident from the &lt;tt&gt;flash&lt;/tt&gt; variable as discussed above and on the &lt;tt&gt;ntpq&lt;/tt&gt; page. It could be that the server has disabled access for the client address, in which case the &lt;tt&gt;refid&lt;/tt&gt; field in the &lt;tt&gt;ntpq pe&lt;/tt&gt; billboard will show a kiss code. See earlier on this page for a list of kiss codes and their meaning.&lt;/li&gt;
&lt;li&gt;If the &lt;tt&gt;reach&lt;/tt&gt; values in the &lt;tt&gt;pe&lt;/tt&gt; billboard show the servers are alive and responding, note the tattletale symbols at the left margin, which indicate the status of each server resulting from the various grooming and mitigation algorithms. The interpretation of these symbols is discussed on the &lt;tt&gt;ntpq&lt;/tt&gt; page. After a few minutes of operation, one or another of the reachable server candidates should show a * tattletale symbol. If this doesn&amp;rsquo;t happen, the intersection algorithm, which classifies the servers as truechimers or falsetickers, may be unable to find a majority of truechimers among the server population.&lt;/li&gt;
&lt;li&gt;If all else fails, see the FAQ and/or the discussion and briefings at the NTP Project page.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP Interleaved Modes</title>
      <link>/archives/4.2.6-series/xleave/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/xleave/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo4.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You need a little magic.&lt;/p&gt;
&lt;p&gt;Last update: 03-May-2009 3:37 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;In the protocol described in the NTP specification and implemented today the transmit timestamp is captured before the MD5 digest is computed and the packet is sent, while the receive timestamp is captured after the packet is received. For enhanced accuracy it is desirable to capture the timestamps as close to the wire as possible; i.e., with hardware assist or with a modified driver.&lt;/p&gt;
&lt;p&gt;The problem is, while the receive timestamp could in principle be piggybacked in the receive buffer, the transmit timestamp cannot ordinarily be transmitted in the same packet. A solution for this problem is the two-step or interleaved protocol described on this page and included in the current reference implementation. In this experimental variant the transmit timestamp for one packet is actually carried in the immediately following packet. The trick, however, is to implement the interleaved protocol without changing the NTP packet header format, without compromising backwards compatibility and without compromising the error recovery properties.&lt;/p&gt;
&lt;p&gt;Currently, the reference implementation uses only software timestamps (softstamps). The receive softstamp is captured at software interrupt time and before the buffer is queued for later processing. The reference implementation captures a softstamp before the message digest routine and another after the send-packet routine. In this design the latter timestamp can be considered most accurate, as it avoids the kernel latencies and queueing mechanisms. The difference, called the interleaved or output delay, varies from 16 ms for a dual-core, 2.8 GHz Pentium 4 running FreeBSD 6.1 to 1100 ms for a Sun Blade 1500 running Solaris 10.&lt;/p&gt;
&lt;p&gt;Performacne varies widely between machines and network interface cards on a 100-Mb switched Ethernet where the NTP packet is about 1000 bits or 10 ms. On two identical Pentium 4 machines in symmetric mode, the measured output delay is 16 ms and remaining one-way delay components 45-150 ms. Two LAN segments account for 20 ms, which leaves 25-130 ms for input delay. On two identical UltraSPARC machines running Solaris 10 in symmetric mode, the measured output delay is 160 ms and remaining one-way delay components 195 ms. Two LAN segments account for 20 ms, which leaves 175 ms for input delay.&lt;/p&gt;
&lt;p&gt;Performance with the Pentia show a residual jitter of about 20 ms, which is by far the best performance so far. However, much better performance could result if the input delay could be reduced or elminated with driver or hardware timestamps. Should that be done, performance should be in the same order as the PPS and kernel discipline, which is in the order of 2 ms.&lt;/p&gt;
&lt;p&gt;Interleaved modes can be used only in NTP symmetric and broadcast modes. It is activated by the &lt;tt&gt;xleave&lt;/tt&gt; option with the &lt;tt&gt;peer or&lt;/tt&gt; &lt;tt&gt;broadcast&lt;/tt&gt; configuration commands. The NTP protocol automatically reconfigures in normal or interleaved mode as required. Ordinary broadcast clients can use the same servers as interleaved broadcast clients at the same time. Further details are in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/onwire.html&#34;&gt;NTP Interleaved On-Wire Protocol&lt;/a&gt; and the briefing &lt;a href=&#34;http://www.eecis.udel.edu/~mills/database/brief/onwire/onwire.ppt&#34;&gt;Interleaved Synchronization Protocols for LANs and Space Data Links&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/pogo1a.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP PARSE clock data formats</title>
      <link>/archives/4.2.6-series/parsedata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/parsedata/</guid>
      <description>
        
        
        &lt;p&gt;The parse driver currently supports several clocks with different query mechanisms. In order for you to find a sample that might be similar to a clock you might want to integrate into parse I&amp;rsquo;ll sum up the major features of the clocks (this information is distributed in the &lt;code&gt;parse/clk_*.c&lt;/code&gt; and &lt;code&gt;ntpd/refclock_parse.c&lt;/code&gt; files).&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsedata/#meinberg-clocks&#34;&gt;Meinberg clocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsedata/#raw-dcf77-data-via-serial-line&#34;&gt;Raw DCF77 Data via serial line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsedata/#dcf77-raw-time-code&#34;&gt;DCF77 raw time code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsedata/#schmid-clock&#34;&gt;Schmid clock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsedata/#trimble-sv6-ascii-time-code-taip&#34;&gt;Trimble SV6 ASCII time code (TAIP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsedata/#elv-dcf7000&#34;&gt;ELV DCF7000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsedata/#hopf-6021-und-kompatible&#34;&gt;HOPF 6021 und Kompatible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsedata/#diem-computime-clock&#34;&gt;Diem Computime Clock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsedata/#wharton-400a-series-clock-with-a-4042-serial-interface&#34;&gt;WHARTON 400A Series Clock with a 404.2 Serial interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;meinberg-clocks&#34;&gt;Meinberg clocks&lt;/h4&gt;
&lt;pre&gt;Meinberg: start=&lt;STX&gt;, end=&lt;ETX&gt;, sync on start
      pattern=&#34;\2D:  .  .  ;T: ;U:  .  .  ;    \3&#34;
      pattern=&#34;\2  .  .  ;  ;   :  :  ;        \3&#34;
      pattern=&#34;\2  .  .  ;  ;   :  :  ;    :  ;        ;   .         .       &#34;
&lt;/pre&gt;
&lt;p&gt;Meinberg is a German manufacturer of time code receivers. Those clocks have a pretty common output format in the stock version. In order to support NTP Meinberg was so kind to produce some special versions of the firmware for the use with NTP. So, if you are going to use a Meinberg clock please ask whether there is a special Uni Erlangen version. You can reach &lt;a href=&#34;http://www.meinberg.de/&#34;&gt;Meinberg&lt;/a&gt; via the Web. Information can also be ordered via eMail from &lt;a href=&#34;mailto:%20info@meinberg.de&#34;&gt;info@meinberg.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;General characteristics:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Meinberg clocks primarily output pulse per second and a describing ASCII string. This string can be produced in two modes: either upon the reception of a question mark or every second. NTP uses the latter mechanism. DCF77 AM clocks have a limited accuracy of a few milliseconds. The DCF77 PZF5xx variants provide higher accuracy and have a pretty good relationship between RS232 time code and the PPS signal. Except for early versions of the old GPS166 receiver type, Meinberg GPS receivers have a very good timing relationship between the datagram and the pulse. The beginning of the start bit of the first character has basically the same accuracy as the PPS signal, plus a jitter of up to 1 bit time depending on the selected baud rate, i.e. 52 μs @ 19200. PPS support should always be used, if possible, in order to yield the highest possible accuracy.&lt;/p&gt;
&lt;p&gt;The preferred tty setting for Meinberg DCF77 receivers is 9600/7E2:&lt;/p&gt;
&lt;pre&gt;		CFLAG		(B9600|CS7|PARENB|CREAD|HUPCL)
		IFLAG		(IGNBRK|IGNPAR|ISTRIP)
		OFLAG		0
		LFLAG		0
        &lt;/pre&gt;
&lt;p&gt;The tty setting for Meinberg GPS16x/17x receivers is 19200/8N1:&lt;/p&gt;
&lt;pre&gt;		CFLAG		(B19200|CS8|PARENB|CREAD|HUPCL)
		IFLAG		(IGNBRK|IGNPAR|ISTRIP)
		OFLAG		0
		LFLAG		0
        &lt;/pre&gt;
&lt;p&gt;All clocks should be run at datagram once per second.&lt;/p&gt;
&lt;p&gt;Format of the Meinberg standard time string:&lt;/p&gt;
&lt;pre&gt;        **_&lt;STX&gt;_D:_dd.mm.yy_;T:_w_;U:_hh.mm.ss_;_uvxy__&lt;ETX&gt;_**
    pos:  0  000000001111111111222222222233  3
          1  234567890123456789012345678901  2

    _&lt;STX&gt;_         = start-of-text, ASCII code 0x02
    _dd.mm.yy_      = day of month, month, year of the century, separated by dots
    _w_             = day of week (1..7, Monday = 1)
    _hh:mm:ss_      = hour, minute, second, separated by dots
    _u_             = &#39;#&#39; for GPS receivers: time is **not** synchronized
                           &#39;#&#39; for older PZF5xx receivers: no correlation, not synchronized
                           &#39;#&#39; for other devices: never sync&#39;ed since powerup
                           &#39; &#39; if nothing of the above applies
    _v_             = &#39;*&#39; for GPS receivers: position has **not** been verified
                           &#39;*&#39; for other devices: freewheeling based on internal quartz
                           &#39; &#39; if nothing of the above applies
    _x_             = &#39;U&#39; if UTC time is transmitted
                           &#39;S&#39; if daylight saving time is active
                           &#39; &#39; if nothing of the above applies
    _y_             = &#39;!&#39; during the hour preceding start or end of daylight saving time
                           &#39;A&#39; during the hour preceding a leap second
                           &#39; &#39; if nothing of the above applies
    _&lt;ETX&gt;_         = end-of-text, ASCII code 0x03
&lt;/pre&gt;
&lt;p&gt;Format of the Uni Erlangen time string for PZF5xx receivers:&lt;/p&gt;
&lt;pre&gt;        **_&lt;STX&gt;__dd.mm.yy_; _w_; _hh:mm:ss_; _tuvxyza__&lt;ETX&gt;_**
    pos:  0  000000001111111111222222222233  3
          1  234567890123456789012345678901  2

    _&lt;STX&gt;_         = start-of-text, ASCII code 0x02
    _dd.mm.yy_      = day of month, month, year of the century, separated by dots
    _w_             = day of week (1..7, Monday = 1)
    _hh:mm:ss_      = hour, minute, second, separated by colons

    _t_             = &#39;U&#39; if UTC time is transmitted, else &#39; &#39;
    _u_             = &#39;#&#39; for older PZF5xx receivers: no correlation, not synchronized
                           &#39;#&#39; for PZF511 and newer: never sync&#39;ed since powerup
                           &#39; &#39; if nothing of the above applies
    _v_             = &#39;*&#39; if freewheeling based on internal quartz, else &#39; &#39;
    _x_             = &#39;S&#39; if daylight saving time is active, else &#39; &#39;
    _y_             = &#39;!&#39; during the hour preceding start or end of daylight saving time, else &#39; &#39;
    _z_             = &#39;A&#39; during the hour preceding a leap second, else &#39; &#39;
    _a_             = &#39;R&#39; alternate antenna (reminiscent of PZF5xx), usually &#39; &#39; for GPS receivers
    _&lt;ETX&gt;_         = end-of-text, ASCII code 0x03
&lt;/pre&gt;
&lt;p&gt;Format of the Uni Erlangen time string for GPS16x/GPS17x receivers:&lt;/p&gt;
&lt;pre&gt;        **_&lt;STX&gt;__dd.mm.yy_; _w_; _hh:mm:ss_; _+uu:uu_; _uvxyzab_; _ll.lllln_ _lll.lllle_ _hhhh_m_&lt;ETX&gt;_**
    pos:  0  0000000011111111112222222222333333333344444444445555555555666666  6
          1  2345678901234567890123456789012345678901234567890123456789012345  6

    _&lt;STX&gt;_         = start-of-text, ASCII code 0x02
    _dd.mm.yy_      = day of month, month, year of the century, separated by dots
    _w_             = day of week (1..7, Monday = 1)
    _hh:mm:ss_      = hour, minute, second, separated by colons
    _+uu:uu_        = offset to UTC in hours and minutes, preceded by + or -
    _u_             = &#39;#&#39; if time is **not** synchronized, else &#39; &#39;
    _v_             = &#39;*&#39; if position has **not** been verified, else &#39; &#39;
    _x_             = &#39;S&#39; if daylight saving time is active, else &#39; &#39;
    _y_             = &#39;!&#39; during the hour preceding start or end of daylight saving time, else &#39; &#39;
    _z_             = &#39;A&#39; during the hour preceding a leap second, else &#39; &#39;
    _a_             = &#39;R&#39; alternate antenna (reminiscent of PZF5xx), usually &#39; &#39; for GPS receivers
    _b_             = &#39;L&#39; during a leap second, i.e. if the seconds field is 60, else &#39; &#39;
    _ll.lllln_      = position latitude in degrees, &#39;n&#39; can actually be &#39;N&#39; or &#39;S&#39;, i.e. North or South
    _lll.lllle_     = position longitude in degrees, &#39;e&#39; can actually be &#39;E&#39; or &#39;W&#39;, i.e. East or West
    _hhhh_          = position altitude in meters, always followed by &#39;m&#39;
    _&lt;ETX&gt;_         = end-of-text, ASCII code 0x03
&lt;/pre&gt;
&lt;p&gt;Examples for Uni Erlangen strings from GPS receivers:&lt;/p&gt;
&lt;pre&gt;        \x02 09.07.93; 5; 08:48:26; +00:00;        ; 49.5736N  11.0280E  373m \x03
        \x02 08.11.06; 3; 14:39:39; +00:00;        ; 51.9828N   9.2258E  176m \x03
&lt;/pre&gt;
&lt;p&gt;The Uni Erlangen formats should be used preferably. Newer Meinberg GPS receivers can be configured to transmit that format, for older devices there may be a special firmware version available.&lt;/p&gt;
&lt;p&gt;For the Meinberg parse look into &lt;code&gt;clk_meinberg.c&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;raw-dcf77-data-via-serial-line&#34;&gt;Raw DCF77 Data via serial line&lt;/h4&gt;
&lt;p&gt;RAWDCF: end=TIMEOUT&amp;gt;1.5s, sync each char (any char),generate pseudo time codes, fixed format&lt;/p&gt;
&lt;p&gt;direct DCF77 code input&lt;/p&gt;
&lt;p&gt;In Europe it is relatively easy/cheap the receive the german time code transmitter DCF77. The simplest version to process its signal is to feed the 100/200ms pulse of the demodulated AM signal via a level converter to an RS232 port at 50Baud. parse/clk_rawdcf.c holds all necessary decoding logic for the time code which is transmitted each minute for one minute. A bit of the time code is sent once a second.&lt;/p&gt;
&lt;pre&gt;	The preferred tty setting is:
		CFLAG           (B50|CS8|CREAD|CLOCAL)
		IFLAG		0
		OFLAG		0
 		LFLAG		0
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;dcf77-raw-time-code&#34;&gt;DCF77 raw time code&lt;/h4&gt;
&lt;p&gt;From &amp;ldquo;Zur Zeit&amp;rdquo;, Physikalisch-Technische Bundesanstalt (PTB), Braunschweig und Berlin, März 1989&lt;/p&gt;
&lt;p&gt;Timecode transmission:&lt;/p&gt;
&lt;pre&gt;	AM:

	time marks are send every second except for the second before the
	next minute mark
	time marks consist of a reduction of transmitter power to 25%
	of the nominal level
	the falling edge is the time indication (on time)
	time marks of a 100ms duration constitute a logical 0
	time marks of a 200ms duration constitute a logical 1
&lt;/pre&gt;
&lt;p&gt;see the spec. (basically a (non-)inverted pseudo random phase shift) encoding:&lt;/p&gt;
&lt;pre&gt;	FM:

	Second	Contents
	0  - 10	AM: free, FM: 0
	11 - 14	free
	15		R     - alternate antenna
	16		A1    - expect zone change (1 hour before)
	17 - 18	Z1,Z2 - time zone
		 0  0 illegal
		 0  1 MEZ  (MET)
		 1  0 MESZ (MED, MET DST)
		 1  1 illegal
	19	A2    - expect leap insertion/deletion (1 hour before)
	20	S     - start of time code (1)
	21 - 24	M1    - BCD (lsb first) Minutes
	25 - 27	M10   - BCD (lsb first) 10 Minutes
	28	P1    - Minute Parity (even)
	29 - 32	H1    - BCD (lsb first) Hours
	33 - 34	H10   - BCD (lsb first) 10 Hours
	35	P2    - Hour Parity (even)
	36 - 39	D1    - BCD (lsb first) Days
	40 - 41	D10   - BCD (lsb first) 10 Days
	42 - 44	DW    - BCD (lsb first) day of week (1: Monday -&gt; 7: Sunday)
	45 - 49	MO1   - BCD (lsb first) Month
	50	MO10  - 10 Months
	51 - 53	Y1    - BCD (lsb first) Years
	54 - 57	Y10   - BCD (lsb first) 10 Years
	58 	P3    - Date Parity (even)
	59	      - usually missing (minute indication), except for leap insertion
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;schmid-clock&#34;&gt;Schmid clock&lt;/h4&gt;
&lt;p&gt;Schmid clock: needs poll, binary input, end=&#39;\xFC&#39;, sync start&lt;/p&gt;
&lt;p&gt;The Schmid clock is a DCF77 receiver that sends a binary time code at the reception of a flag byte. The contents if the flag byte determined the time code format. The binary time code is delimited by the byte 0xFC.&lt;/p&gt;
&lt;pre&gt;	TTY setup is:
		CFLAG		(B1200|CS8|CREAD|CLOCAL)
		IFLAG		0
		OFLAG		0
 		LFLAG		0

&lt;/pre&gt;
&lt;p&gt;The command to Schmid&amp;rsquo;s DCF77 clock is a single byte; each bit allows the user to select some part of the time string, as follows (the output for the lsb is sent first).&lt;/p&gt;
&lt;pre&gt;	Bit 0:	time in MEZ, 4 bytes *binary, not BCD*; hh.mm.ss.tenths
	Bit 1:	date 3 bytes *binary, not BCD: dd.mm.yy
	Bit 2:	week day, 1 byte (unused here)
	Bit 3:	time zone, 1 byte, 0=MET, 1=MEST. (unused here)
	Bit 4:	clock status, 1 byte,	0=time invalid,
					1=time from crystal backup,
					3=time from DCF77
	Bit 5:	transmitter status, 1 byte,
					bit 0: backup antenna
					bit 1: time zone change within 1h
					bit 3,2: TZ 01=MEST, 10=MET
					bit 4: leap second will be
						added within one hour
					bits 5-7: Zero
	Bit 6:	time in backup mode, units of 5 minutes (unused here)
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;trimble-sv6-ascii-time-code-taip&#34;&gt;Trimble SV6 ASCII time code (TAIP)&lt;/h4&gt;
&lt;p&gt;Trimble SV6: needs poll, ascii timecode, start=&#39;&amp;gt;&#39;, end=&#39;&amp;lt;&#39;, query=&#39;&amp;gt;QTM&amp;lt;&#39;, eol=&#39;&amp;lt;&#39;&lt;/p&gt;
&lt;p&gt;Trimble SV6 is a GPS receiver with PPS output. It needs to be polled. It also need a special tty mode setup (EOL=&#39;&amp;lt;&#39;).&lt;/p&gt;
&lt;pre&gt;	TTY setup is:
		CFLAG            (B4800|CS8|CREAD)
		IFLAG            (BRKINT|IGNPAR|ISTRIP|ICRNL|IXON)
		OFLAG            (OPOST|ONLCR)
		LFLAG            (ICANON|ECHOK)
&lt;/pre&gt;
&lt;p&gt;Special flags are:&lt;/p&gt;
&lt;pre&gt;		PARSE_F_PPSPPS	    - use CIOGETEV for PPS time stamping
		PARSE_F_PPSONSECOND - the time code is not related to
				      the PPS pulse (so use the time code
				      only for the second epoch)

	Timecode
	0000000000111111111122222222223333333	/ char
	0123456789012345678901234567890123456	\ posn
	&gt;RTMhhmmssdddDDMMYYYYoodnnvrrrrr;*xx&lt;	Actual
	----33445566600112222BB7__-_____--99-	Parse
	&gt;RTM                      1     ;*  &lt; 	Check
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;elv-dcf7000&#34;&gt;ELV DCF7000&lt;/h4&gt;
&lt;p&gt;ELV DCF7000: end=&#39;\r&#39;, pattern=&amp;quot; - - - - - - - \r&amp;quot;&lt;/p&gt;
&lt;p&gt;The ELV DCF7000 is a cheap DCF77 receiver sending each second a time code (though not very precise!) delimited by &amp;lsquo;`r&amp;rsquo;&lt;/p&gt;
&lt;pre&gt;	Timecode
	  YY-MM-DD-HH-MM-SS-FF\r

		FF&amp;0x1	- DST
		FF&amp;0x2	- DST switch warning
		FF&amp;0x4  - unsynchronised
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;hopf-6021-und-kompatible&#34;&gt;HOPF 6021 und Kompatible&lt;/h4&gt;
&lt;p&gt;HOPF Funkuhr 6021 mit serieller Schnittstelle Created by F.Schnekenbuehl &lt;a href=&#34;mailto:frank@comsys.dofn.de&#34;&gt;frank@comsys.dofn.de&lt;/a&gt; from clk_rcc8000.c Nortel DASA Network Systems GmbH, Department: ND250 A Joint venture of Daimler-Benz Aerospace and Nortel.&lt;/p&gt;
&lt;pre&gt; hopf Funkuhr 6021 
      used with 9600,8N1,
      UTC via serial line
      &#34;Sekundenvorlauf&#34; ON
      ETX zum Sekundenvorlauf ON
      dataformat 6021
      output time and date
      transmit with control characters
      transmit evry second
 &lt;/pre&gt;
&lt;p&gt;Type 6021 Serial Output format&lt;/p&gt;
&lt;pre&gt;      000000000011111111 / char
      012345678901234567 \ position
      sABHHMMSSDDMMYYnre  Actual
       C4110046231195     Parse
      s              enr  Check

  s = STX (0x02), e = ETX (0x03)
  n = NL  (0x0A), r = CR  (0x0D)

  A B - Status and weekday

  A - Status

      8 4 2 1
      x x x 0  - no announcement
      x x x 1  - Summertime - wintertime - summertime announcement
      x x 0 x  - Wintertime
      x x 1 x  - Summertime
      0 0 x x  - Time/Date invalid
      0 1 x x  - Internal clock used 
      1 0 x x  - Radio clock
      1 1 x x  - Radio clock highprecision

  B - 8 4 2 1
      0 x x x  - MESZ/MEZ
      1 x x x  - UTC
      x 0 0 1  - Monday
      x 0 1 0  - Tuesday
      x 0 1 1  - Wednesday
      x 1 0 0  - Thursday
      x 1 0 1  - Friday
      x 1 1 0  - Saturday
      x 1 1 1  - Sunday
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;diem-computime-clock&#34;&gt;Diem Computime Clock&lt;/h4&gt;
&lt;p&gt;The Computime receiver sends a datagram in the following format every minute&lt;/p&gt;
&lt;pre&gt;   
   Timestamp	T:YY:MM:MD:WD:HH:MM:SSCRLF 
   Pos          0123456789012345678901 2 3
		0000000000111111111122 2 2
   Parse        T:  :  :  :  :  :  :  \r\n

   T	Startcharacter &#34;T&#34; specifies start of the timestamp 
   YY	Year MM	Month 1-12 
   MD	Day of the month 
   WD	Day of week 
   HH	Hour 
   MM   Minute 
   SS   Second
   CR   Carriage return 
   LF   Linefeed
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;wharton-400a-series-clock-with-a-4042-serial-interface&#34;&gt;WHARTON 400A Series Clock with a 404.2 Serial interface&lt;/h4&gt;
&lt;p&gt;The WHARTON 400A Series clock is able to send date/time serial messages in 7 output formats. We use format 1 here because it is the shortest. We set up the clock to send a datagram every second. For use with this driver, the WHARTON 400A Series clock must be set-up as follows :&lt;/p&gt;
&lt;pre&gt;  					Programmable	Selected
  					Option No	Option
	BST or CET display		3		9 or 11
	No external controller		7		0
	Serial Output Format 1		9		1
	Baud rate 9600 bps		10		96
	Bit length 8 bits		11		8
	Parity even			12		E
&lt;/pre&gt;
&lt;p&gt;WHARTON 400A Series output format 1 is as follows :&lt;/p&gt;
&lt;pre&gt;   Timestamp	STXssmmhhDDMMYYSETX
   Pos		0  12345678901234
  		0  00000000011111

   STX	start transmission (ASCII 0x02)
   ETX	end transmission (ASCII 0x03)
   ss	Second expressed in reversed decimal (units then tens)
   mm	Minute expressed in reversed decimal
   hh	Hour expressed in reversed decimal
   DD	Day of month expressed in reversed decimal
   MM	Month expressed in reversed decimal (January is 1)
   YY	Year (without century) expressed in reversed decimal
   S	Status byte : 0x30 +
		bit 0	0 = MSF source		1 = DCF source
		bit 1	0 = Winter time		1 = Summer time
		bit 2	0 = not synchronised	1 = synchronised
		bit 3	0 = no early warning	1 = early warning
&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: NTP Version 4 Release Notes</title>
      <link>/archives/4.2.6-series/release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/release/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/hornraba.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The rabbit toots to make sure you read this.&lt;/p&gt;
&lt;p&gt;Last update: 16:10 UTC Sunday, March 02, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/release/#new-features&#34;&gt;New Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/release/#nasty-surprises&#34;&gt;Nasty Surprises&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This release of the NTP Version 4 (NTPv4) daemon for Unix, VMS and Windows incorporates new features and refinements to the NTP Version 3 (NTPv3) algorithms. However, it continues the tradition of retaining backwards compatibility with older versions, including NTPv3 and NTPv2, but not NTPv1. Support for NTPv1 has been discontinued because of certain security vulnerabilities. The NTPv4 version has been under development for 25 years and the paint still isn&amp;rsquo;t dry.&lt;/p&gt;
&lt;p&gt;The code compiles and runs properly in all test host configurations available to the developer corps, including Sun Microsystems, Digital/Compaq/Hewlett Packard, FreeBSD and Linux. Other volunteers have verified it works in IRIX and Windows NT and XP. We invite comments and corrections about the various architectures, operating systems and hardware complement that can&amp;rsquo;t be verified by the developer corps. Of particular interest are other Windows versions, VMS and various reference clock drivers.&lt;/p&gt;
&lt;p&gt;This release has been compiled and tested on many systems, including SunOS 4.1.3, Solaris 2.5.1-2.10, Alpha Tru64 4.0-5.1, Ultrix 4.4, Linux 2.4.2, FreeBSD 4.5-6.2 and HP-UX 10.02. It has been compiled and tested by others on Windows NT4, 2000 and XP, but not yet on other Windows versions or for VMS. There are several new features apparently incompatible with Linux systems, including some modes used with the Autokey protocol. The developer corps looks for help elsewhere to resolve these differences.&lt;/p&gt;
&lt;p&gt;This note summarizes the differences between this software release of NTPv4, called ntp-4.x.x, and the previous NTPv3 version, called xntp3-5.x.x.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;new-features&#34;&gt;New Features&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Support for the IPv6 addressing family is included in this distribution. If the Basic Socket Interface Extensions for IPv6 (RFC-2553) is detected, support for the IPv6 address family is generated in addition to the default support for the IPv4 address family.&lt;/li&gt;
&lt;li&gt;Most calculations are now done using 64-bit floating double format, rather than 64-bit fixed point format. The motivation for this is to reduce size, improve speed and avoid messy bounds checking.&lt;/li&gt;
&lt;li&gt;The clock discipline algorithm has been redesigned to improve accuracy, reduce the impact of network jitter and allow increased in poll intervals to 36 hours with only moderate sacrifice in accuracy.&lt;/li&gt;
&lt;li&gt;A new feature called &amp;ldquo;huffpuff&amp;rdquo; maximizes accuracy in cases of highly asymmetric network delays typical of ISDN and telephone modems.&lt;/li&gt;
&lt;li&gt;The clock selection algorithm has been redesigned to reduce &amp;ldquo;clockhopping&amp;rdquo; when the choice of servers changes frequently as the result of comparatively insignificant quality changes.&lt;/li&gt;
&lt;li&gt;This release includes support for the &lt;a href=&#34;https://www.eecis.udel.edu/~ntp/ntp_spool/software/nanokernel.tar.gz&#34;&gt;nanokernel&lt;/a&gt; precision time kernel modifications, which are now in stock FreeBSD and optional in Linux kernels. With this support the system clock can be disciplined to the order of one nanosecon. The older microtime kernel modifications in Digital/Compaq/HP Tru64, Digital Ultrix and Sun Microsystems SunOS and Solaris, continue to be supported. In either case the support eliminates sawtooth error, which can be in the hundreds of microseconds.&lt;/li&gt;
&lt;li&gt;This release includes support for Autokey public-key cryptography, which is the preferred scheme for authenticating servers to clients. Additional information about Autokey cryptography is on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page and links from there. See also the new &lt;tt&gt;cryptostats&lt;/tt&gt; monitoring statistics file in the &lt;a href=&#34;/archives/4.2.6-series/monopt&#34;&gt;Monitoring Options&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;The OpenSSL cryptographic library has replaced the library formerly available from RSA Laboratories. All cryptographic routines except a version of the MD5 message digest routine have been removed from the base distribution.&lt;/li&gt;
&lt;li&gt;As the result of the above, the &lt;tt&gt;authstuff&lt;/tt&gt; directory, intended as a development and testing aid for porting cryptographic routines to exotic architectures, has been removed. Testing and conformance validation tools are in the OpenSSL software distrbution.&lt;/li&gt;
&lt;li&gt;This release includes support for a discrete event simulator (DES), which allows the NTP algorithms to be tested in an embedded environment with systematic and pseudorandom network delay and oscillator wander distributions. This has been used to verify correct operation under conditions of extreme error and misconfiguration. See the &lt;a href=&#34;/archives/4.2.6-series/ntpdsim&#34;&gt;&lt;tt&gt;ntpdsim&lt;/tt&gt; - Network Time Protocol (NTP) simulator&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;NTPv4 includes three new server discovery schemes, which in most applications can avoid per-host configuration altogether. Two of these are based on IP multicast technology, while the remaining one is based on crafted DNS lookups. See the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic NTP Configuration Schemes&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;This release includes comprehensive packet rate management tools to help reduce the level of spurious network traffic and protect the busiest servers from overload. See the &lt;a href=&#34;/archives/4.2.6-series/rate&#34;&gt;Rate Management and the Kiss-o&#39;-Death Packet&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;This release includes support for the orphan mode, which replaces the local clock driver for most configurations. Orphan mode provides an automatic, subnet-wide synchronization feature with multiple sources. It can be used in isolated networks or in Internet subnets where the servers or Internet connection have failed. See the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic NTP Configuration Options&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;There are two new burst mode features available where special conditions apply. One of these is enabled by the &lt;tt&gt;iburst&lt;/tt&gt; keyword in the &lt;tt&gt;server&lt;/tt&gt; configuration command. It is intended for cases where it is important to set the clock quickly when an association is first mobilized. The other is enabled by the &lt;tt&gt;burst&lt;/tt&gt; keyword in the &lt;tt&gt;server&lt;/tt&gt; configuration command. It is intended for cases where the network attachment requires an initial calling or training procedure. See the &lt;a href=&#34;/archives/4.2.6-series/assoc&#34;&gt;Association Management&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;The reference clock driver interface is smaller, more rational and more accurate.&lt;/li&gt;
&lt;li&gt;Support for pulse-per-second (PPS) signals has been extended to all drivers as an intrinsic function. Most of the drivers in NTPv3 have been converted to the NTPv4 interface and continue to operate as before. New drivers have been added for several GPS receivers now on the market for a total of 44 drivers. Audio drivers for the Canadian standard time and frequency station CHU, the US standard time and frequency stations WWV/H and for IRIG signals have been updated and capabilities added to allow direct connection of these signals to an audio port. See the &lt;a href=&#34;/archives/4.2.6-series/audio&#34;&gt;Reference Clock Audio Drivers&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;In all except a very few cases, all timing intervals are randomized, so that the tendency for NTPv3 to self-synchronize and bunch messages, especially with a large number of configured associations, is minimized.&lt;/li&gt;
&lt;li&gt;In NTPv3 a large number of weeds and useless code had grown over the years since the original NTP code was implemented 25 years ago. Using a powerful weedwacker, much of the shrubbery has been removed, with effect a substantial reduction in size of almost 40 percent.&lt;/li&gt;
&lt;li&gt;The entire distribution has been converted to gnu &lt;tt&gt;automake&lt;/tt&gt;, which should greatly ease the task of porting to new and different programming environments, as well as reduce the incidence of bugs due to improper handling of idiosyncratic kernel functions. Version control is provided by Bitkeeper using an online repository at &lt;a href=&#34;http://www.ntp.org&#34;&gt;www.ntp.org&lt;/a&gt;. Trouble ticket reporting is provided using Bugzilla.&lt;/li&gt;
&lt;li&gt;Several new options have been added for the &lt;tt&gt;ntpd&lt;/tt&gt; command line. For the inveterate knob twiddlers several of the more important performance variables can be changed to fit actual or perceived special conditions. In particular, the &lt;tt&gt;tos&lt;/tt&gt; and &lt;tt&gt;tos&lt;/tt&gt; commands can be used to adjust thresholds, throw switches and change limits.&lt;/li&gt;
&lt;li&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; daemon can be operated in a one-time mode similar to &lt;tt&gt;ntpdate&lt;/tt&gt;, which program is headed for retirement. See the &lt;a href=&#34;/archives/4.2.6-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; - Network Time Protocol (NTP) daemon&lt;/a&gt; page for the new features.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;nasty-surprises&#34;&gt;Nasty Surprises&lt;/h4&gt;
&lt;p&gt;There are a few things different about this release that have changed since the latest NTP Version 3 release. Following are a few things to worry about:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Some configuration commands have been removed, others added and some changed in minor ways. See the Commands and Options collection on the &lt;a href=&#34;/archives/4.2.6-series/sitemap&#34;&gt;Site Map&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;When both IPv4 and IPv6 address families are in use, the host&amp;rsquo;s resolver library may not choose the intended address family if a server has an IPv4 and IPv6 address associated with the same DNS name. The solution is to use the IPv4 or IPv6 address directly in such cases or use another DNS name that resolves to the intended address family. Older versions of &lt;tt&gt;ntpdc&lt;/tt&gt; will show only the IPv4 associations with the &lt;tt&gt;peers&lt;/tt&gt; and some other commands. Older versions of &lt;tt&gt;ntpq&lt;/tt&gt; will show 0.0.0.0 for IPv6 associations with the &lt;tt&gt;peers&lt;/tt&gt; and some other commands.&lt;/li&gt;
&lt;li&gt;There is a minor change to the reference ID field of the NTP packet header when operating with IPv6 associations. In IPv4 associations this field contains the 32-bit IPv4 address of the server, in order to detect and avoid loops. In IPv6 associations this field contains the first 32-bits of a MD5 hash formed from the IPv6 address. All programs in the distribution have been modified to work with both address families.&lt;/li&gt;
&lt;li&gt;The &lt;tt&gt;tty_clk&lt;/tt&gt; and &lt;tt&gt;ppsclock&lt;/tt&gt; pulse-per-second (PPS) line discipline/streams modules are no longer supported. The PPS function is now handled by the &lt;a href=&#34;/archives/drivers/driver22&#34;&gt;PPS Clock Discipline&lt;/a&gt; driver, which uses the new PPSAPI application program interface adopted by the IETF. Note that the &lt;tt&gt;pps&lt;/tt&gt; configuration file command has been obsoleted by the driver. See the &lt;a href=&#34;/archives/4.2.6-series/pps&#34;&gt;Pulse-per-second (PPS) Signal Interfacing&lt;/a&gt; page for further information.&lt;/li&gt;
&lt;li&gt;Support for the NTPv1 symmetric mode has been discontinued, since it hasn&amp;rsquo;t worked for years. Support continues for the NTPv1 client mode, which is used by some SNTP clients.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntp-keygen - generate public and private keys</title>
      <link>/archives/4.2.6-series/keygen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/keygen/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice23.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alice holds the key.&lt;/p&gt;
&lt;p&gt;Last update: 13-Nov-2009 0:44&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen/#running-the-program&#34;&gt;Running the program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen/#trusted-hosts-and-secure-groups&#34;&gt;Trusted Hosts and Secure Groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen/#identity-schemes&#34;&gt;Identity Schemes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen/#random-seed-file&#34;&gt;Random Seed File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen/#cryptographic-data-files&#34;&gt;Cryptographic Data Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntp-keygen [ -deGHIMPT ] [ -c [ RSA-MD2 | RSA-MD5 | RSA-SHA | RSA-SHA1 | RSA-MDC2 | RSA-RIPEMD160 | DSA-SHA | DSA-SHA1 ] ] [-i &lt;em&gt;group&lt;/em&gt; ] [ -m &lt;em&gt;modulus&lt;/em&gt; ] [ -p &lt;em&gt;passwd2&lt;/em&gt; ] [ -q &lt;em&gt;passwd1&lt;/em&gt; ] [ -S [ RSA | DSA ] ] [ -s &lt;em&gt;host&lt;/em&gt; ] [ -V &lt;em&gt;nkeys&lt;/em&gt; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;This program generates cryptographic data files used by the NTPv4 authentication and identity schemes. It can generate message digest keys used in symmetric key cryptography and, if the OpenSSL software library has been installed, it can generate host keys, sign keys, certificates and identity keys used by the Autokey public key cryptography. The message digest keys file is generated in a format compatible with NTPv3. All other files are in PEM-encoded printable ASCII format so they can be embedded as MIME attachments in mail to other sites.&lt;/p&gt;
&lt;p&gt;When used to generate message digest keys, the program produces a file containing ten pseudo-random printable ASCII strings suitable for the MD5 message digest algorithm included in the distribution. If the OpenSSL library is installed, it produces an additional ten hex-encoded random bit strings suitable for the SHA1 and other message digest algorithms. Printable ASCII keys can have length from one to 20 characters, inclusive. Bit string keys have length 20 octets (40 hex characters). All keys are 160 bits in length.&lt;/p&gt;
&lt;p&gt;The file can be edited later with purpose-chosen passwords for the &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; programs. Each line of the file contains three fields, first an integer between 1 and 65534, inclusive, representing the key identifier used in the &lt;tt&gt;server&lt;/tt&gt; and &lt;tt&gt;peer&lt;/tt&gt; configuration commands. Next is the key type for the message digest algorithm, which in the absence of the OpenSSL library should be the string &lt;tt&gt;MD5&lt;/tt&gt; to designate the MD5 message digest algorithm. If the OpenSSL library is installed, the key type can be any message digest algorithm supported by that library. However, if compatibility with FIPS 140-2 is required, the key type must be either &lt;tt&gt;SHA&lt;/tt&gt; or &lt;tt&gt;SHA1&lt;/tt&gt;.Finally is the key itself as a printable ASCII string excluding the space and # characters. If not greater than 20 characters in length, the string is the key itself; otherwise, it is interpreted as a hex-encoded bit string. As is custom, # and the remaining characters on the line are ignored. Later, this file can be edited to include the passwords for the &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; utilities. If this is the only need, run &lt;tt&gt;ntp-keygen&lt;/tt&gt; with the &lt;tt&gt;-M&lt;/tt&gt; option and disregard the remainder of this page.&lt;/p&gt;
&lt;p&gt;The remaining generated files are compatible with other OpenSSL applications and other Public Key Infrastructure (PKI) resources. Certificates generated by this program should be compatible with extant industry practice, although some users might find the interpretation of X509v3 extension fields somewhat liberal. However, the identity keys are probably not compatible with anything other than Autokey.&lt;/p&gt;
&lt;p&gt;Most files used by this program are encrypted using a private password. The &lt;tt&gt;-p&lt;/tt&gt; option specifies the password for local files and the &lt;tt&gt;-q&lt;/tt&gt; option the password for files sent to remote sites. If no local password is specified, the host name returned by the Unix &lt;tt&gt;gethostname()&lt;/tt&gt; function, normally the DNS name of the host, is used. If no remote password is specified, the local password is used.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;pw&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; configuration command specifies the read password for previously encrypted files. This must match the local password used by this program. If not specified, the host name is used. Thus, if files are generated by this program without password, they can be read back by &lt;tt&gt;ntpd&lt;/tt&gt; without password, but only on the same host.&lt;/p&gt;
&lt;p&gt;All files and links are usually installed in the directory &lt;tt&gt;/usr/local/etc&lt;/tt&gt;, which is normally in a shared filesystem in NFS-mounted networks and cannot be changed by shared clients. The location of the keys directory can be changed by the &lt;tt&gt;keysdir&lt;/tt&gt; configuration command in such cases. Normally, encrypted files for each host are generated by that host and used only by that host, although exceptions exist as noted later on this page.&lt;/p&gt;
&lt;p&gt;This program directs commentary and error messages to the standard error stream &lt;tt&gt;stderr&lt;/tt&gt; and remote files to the standard output stream &lt;tt&gt;stdout&lt;/tt&gt; where they can be piped to other applications or redirected to a file. The names used for generated files and links all begin with the string &lt;tt&gt;ntpkey&lt;/tt&gt; and include the file type, generating host and filestamp, as described in the &lt;a href=&#34;/archives/4.2.6-series/keygen#cryptographic-data-files&#34;&gt;Cryptographic Data Files&lt;/a&gt; section below.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;running-the-program&#34;&gt;Running the Program&lt;/h4&gt;
&lt;p&gt;To test and gain experience with Autokey concepts, log in as root and change to the keys directory, usually &lt;tt&gt;/usr/local/etc&lt;/tt&gt;. When run for the first time, or if all files with names beginning &lt;tt&gt;ntpkey&lt;/tt&gt; have been removed, use the &lt;tt&gt;ntp-keygen&lt;/tt&gt; command without arguments to generate a default RSA host key and matching RSA-MD5 certificate with expiration date one year hence. If run again, the program uses the existing keys and parameters and generates only a new certificate with new expiration date one year hence; however, the certificate is not generated if the &lt;tt&gt;-e&lt;/tt&gt; or &lt;tt&gt;-q&lt;/tt&gt; options are present.&lt;/p&gt;
&lt;p&gt;Run the command on as many hosts as necessary. Designate one of them as the trusted host (TH) using &lt;tt&gt;ntp-keygen&lt;/tt&gt; with the &lt;tt&gt;-T&lt;/tt&gt; option and configure it to synchronize from reliable Internet servers. Then configure the other hosts to synchronize to the TH directly or indirectly. A certificate trail is created when Autokey asks the immediately ascendant host towards the TH to sign its certificate, which is then provided to the immediately descendant host on request. All group hosts should have acyclic certificate trails ending on the TH.&lt;/p&gt;
&lt;p&gt;The host key is used to encrypt the cookie when required and so must be RSA type. By default, the host key is also the sign key used to encrypt signatures. A different sign key can be assigned using the &lt;tt&gt;-S&lt;/tt&gt; option and this can be either RSA or DSA type. By default, the signature message digest type is MD5, but any combination of sign key type and sign digest type supported by the OpenSSL library can be specified using the &lt;tt&gt;-c&lt;/tt&gt; option. At the moment, legacy considerations require the NTP packet header digest type to be MD5.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;trusted-hosts-and-secure-groups&#34;&gt;Trusted Hosts and Secure Groups&lt;/h4&gt;
&lt;p&gt;As described on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page, an NTP secure group consists of one or more low-stratum THs as the root from which all other group hosts derive synchronization directly or indirectly. For authentication purposes all hosts in a group must have the same group name specified by the &lt;tt&gt;-i&lt;/tt&gt; option and matching the &lt;tt&gt;ident&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; configuration command. The group name is used in the subject and issuer fields of trusted, self-signed certificates and when constructing the file names for identity keys. All hosts must have different host names, either the default host name or as specified by the &lt;tt&gt;-s&lt;/tt&gt; option and matching the &lt;tt&gt;host&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; configuration command. Most installations need not specify the &lt;tt&gt;-i&lt;/tt&gt; option nor the &lt;tt&gt;host&lt;/tt&gt; option. Host names are used in the subject and issuer fields of self-signed, nontrusted certificates and when constructing the file names for host and sign keys and certificates. Host and group names are used only for authentication purposes and have nothing to do with DNS names.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;identity-schemes&#34;&gt;Identity Schemes&lt;/h4&gt;
&lt;p&gt;As described on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page, there are five identity schemes, three of which - IFF, GQ and MV - require identity keys specific to each scheme. There are two types of files for each scheme, an encrypted keys file and a nonencrypted parameters file, which usually contains a subset of the keys file. In general, NTP secondary servers operating as certificate signing authorities (CSA) use the keys file and clients use the parameters file. Both files are generated by the TA operating as a certificate authority (CA) on behalf of all servers and clients in the group.&lt;/p&gt;
&lt;p&gt;The parameters files are public; they can be stored in a public place and sent in the clear. The keys files are encrypted with the local password. To retrieve the keys file, a host can send a mail request to the TA including its local password. The TA encrypts the keys file with this password and returns it as an attachment. The attachment is then copied intact to the keys directory with name given in the first line of the file, but all in lower case and with the filestamp deleted. Alternatively, the parameters file can be retrieved from a secure web site.&lt;/p&gt;
&lt;p&gt;For example, the TA generates default host key, IFF keys and trusted certificate using the command&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp-keygen -p &lt;em&gt;local_passwd&lt;/em&gt; -T -I -i_group_name_&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Each group host generates default host keys and nontrusted certificate use the same command line but omitting the &lt;tt&gt;-i&lt;/tt&gt; option. Once these media have been generated, the TA can then generate the public parameters using the command&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntp-keygen -p local_passwd -e &amp;gt;&lt;em&gt;parameters_file&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;where the &lt;tt&gt;-e&lt;/tt&gt; option redirects the unencrypted parameters to the standard output stream for a mail application or stored locally for later distribution. In a similar fashion the &lt;tt&gt;-q&lt;/tt&gt; option redirects the encrypted server keys to the standard output stream.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-c [ RSA-MD2 | RSA-MD5 | RSA-SHA | RSA-SHA1 | RSA-MDC2 | RSA-RIPEMD160 | DSA-SHA | DSA-SHA1 ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Select certificate and message digest/signature encryption scheme. Note that RSA schemes must be used with a RSA sign key and DSA schemes must be used with a DSA sign key. The default without this option is &lt;tt&gt;RSA-MD5&lt;/tt&gt;. If compatibility with FIPS 140-2 is required, either the &lt;tt&gt;DSA-SHA&lt;/tt&gt; or &lt;tt&gt;DSA-SHA1&lt;/tt&gt; scheme must be used.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable debugging. This option displays the cryptographic data produced for eye-friendly billboards.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-e&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Extract the IFF or GQ public parameters from the &lt;tt&gt;IFFkey&lt;/tt&gt; or &lt;tt&gt;GQkey&lt;/tt&gt; keys file previously specified. Send the unencrypted data to the standard output stream &lt;tt&gt;stdout&lt;/tt&gt;. While the IFF parameters do not reveal the private group key,  the GQ parameters should be used with caution, as they include the group key. Use the &lt;tt&gt;-q&lt;/tt&gt; option with password instead. Note: a new certificate is not generated when this option is present. This allows multiple commands with this option but without disturbing existing media.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-G&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new encrypted GQ key file and link for the Guillou-Quisquater (GQ) identity scheme.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-H&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new encrypted RSA public/private host key file and link. Note that if the sign key is the same as the host key, generating a new host key invalidates all certificates signed with the old host key.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-i _group_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the group name to &lt;tt&gt;&lt;em&gt;group&lt;/em&gt;&lt;/tt&gt;. This is used in the identity file names. It must match the group name specified in the &lt;tt&gt;ident&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-I&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new encrypted IFF key fileand linkfor the Schnorr (IFF) identity scheme.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-m _modulus_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the modulus for generating files to &lt;em&gt;modulus&lt;/em&gt; bits. The modulus defaults to 512, but can be set from 256 (32 octets) to 2048 (256 octets).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-M&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new MD5 key file containing 16, 128-bit pseudo-random keys for symmetric cryptography..&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-P&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new private certificate used by the PC identity scheme. By default, the program generates public certificates. Note: the PC identity scheme is not recommended for new installations.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p _passwd_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the password for reading and writing encrypted files to &lt;tt&gt;&lt;em&gt;passwd&lt;/em&gt;&lt;/tt&gt;. By default, the password is the host name.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-q _passwd_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Extract the encrypted IFF or GQ server keys from the &lt;tt&gt;IFFkey&lt;/tt&gt; or &lt;tt&gt;GQkey&lt;/tt&gt; key file previously generated. The data are sent to the standard output stream &lt;tt&gt;stdout&lt;/tt&gt;. Set the password for writing the data, which is also the password to read the data file in another host. By default, the password is the host name. Note: a new certificate is not generated when this option is present. This allows multiple commands with this option but without disturbing existing media.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-S [ RSA | DSA ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a new sign key of the specified type. By default, the sign key is the host key and has the same type. If compatibly with FIPS 140-2 is required, the sign key type must be &lt;tt&gt;DSA&lt;/tt&gt;. Note that generating a new sign key invalidates all certificates signed with the old sign key.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s _host_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the host name to &lt;tt&gt;&lt;em&gt;host&lt;/em&gt;&lt;/tt&gt;. This is used in the host and sign key file names. It must match the host name specified in the &lt;tt&gt;host&lt;/tt&gt; option of the &lt;tt&gt;crypto&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-T&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate a trusted certificate. By default, the program generates nontrusted certificates.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-V _nkeys_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Generate server parameters &lt;tt&gt;MV&lt;/tt&gt; and &lt;tt&gt;&lt;em&gt;nkeys&lt;/em&gt;&lt;/tt&gt; client keys for the Mu-Varadharajan (MV) identity scheme. Note: support for this option should be considered a work in progress.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;random-seed-file&#34;&gt;Random Seed File&lt;/h4&gt;
&lt;p&gt;All cryptographically sound key generation schemes must have means to randomize the entropy seed used to initialize the internal pseudo-random number generator used by the OpenSSL library routines. If a site supports &lt;tt&gt;ssh&lt;/tt&gt;, it is very likely that means to do this are already available. The entropy seed used by the OpenSSL library is contained in a file, usually called &lt;tt&gt;.rnd&lt;/tt&gt;, which must be available when starting the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program or &lt;tt&gt;ntpd&lt;/tt&gt; daemon.&lt;/p&gt;
&lt;p&gt;The OpenSSL library looks for the file using the path specified by the &lt;tt&gt;RANDFILE&lt;/tt&gt; environment variable in the user home directory, whether root or some other user. If the &lt;tt&gt;RANDFILE&lt;/tt&gt; environment variable is not present, the library looks for the &lt;tt&gt;.rnd&lt;/tt&gt; file in the user home directory. Since both the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program and &lt;tt&gt;ntpd&lt;/tt&gt; daemon must run as root, the logical place to put this file is in &lt;tt&gt;/.rnd&lt;/tt&gt; or &lt;tt&gt;/root/.rnd&lt;/tt&gt;. If the file is not available or cannot be written, the program exits with a message to the system log.&lt;/p&gt;
&lt;p&gt;On systems that provide /dev/urandom, the randomness device is used instead and the file specified by the &lt;tt&gt;randfile&lt;/tt&gt; subcommand or the &lt;tt&gt;RANDFILE&lt;/tt&gt; environment variable is ignored.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;cryptographic-data-files&#34;&gt;Cryptographic Data Files&lt;/h4&gt;
&lt;p&gt;File and link names are in the form &lt;tt&gt;ntpkey__key___name_._fstamp_&lt;/tt&gt;, where &lt;tt&gt;_key_&lt;/tt&gt; is the key or parameter type, &lt;tt&gt;_name_&lt;/tt&gt; is the host or group name and &lt;tt&gt;_fstamp_&lt;/tt&gt; is the filestamp (NTP seconds) when the file was created). By convention, key fields in generated file names include both upper and lower case alphanumeric characters, while key fields in generated link names include only lower case characters. The filestamp is not used in generated link names.&lt;/p&gt;
&lt;p&gt;The key type is a string defining the cryptographic function. Key types include public/private keys &lt;tt&gt;host&lt;/tt&gt; and &lt;tt&gt;sign&lt;/tt&gt;, certificate &lt;tt&gt;cert&lt;/tt&gt; and several challenge/response key types. By convention, files used for challenges have a &lt;tt&gt;par&lt;/tt&gt; subtype, as in the IFF challenge &lt;tt&gt;IFFpar&lt;/tt&gt;, while files for responses have a &lt;tt&gt;key&lt;/tt&gt; subtype, as in the GQ response &lt;tt&gt;GQkey&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;All files begin with two nonencrypted lines. The first line contains the file name in the format &lt;tt&gt;ntpkey__key___host_._fstamp_&lt;/tt&gt;. The second line contains the datestamp in conventional Unix &lt;tt&gt;date&lt;/tt&gt; format. Lines beginning with &lt;tt&gt;#&lt;/tt&gt; are ignored.&lt;/p&gt;
&lt;p&gt;The remainder of the file contains cryptographic data encoded first using ASN.1 rules, then encrypted using the DES-CBC algorithm and given password and finally written in PEM-encoded printable ASCII text preceded and followed by MIME content identifier lines.&lt;/p&gt;
&lt;p&gt;The format of the symmetric keys file is somewhat different than the other files in the interest of backward compatibility. Since DES-CBC is deprecated in NTPv4, the only key format of interest is MD5 alphanumeric strings. Following the header the keys are entered one per line in the format&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;tt&gt;keyno type key&lt;/tt&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;where &lt;em&gt;&lt;tt&gt;keyno&lt;/tt&gt;&lt;/em&gt; is a positive integer in the range 1-65,535, &lt;em&gt;&lt;tt&gt;type&lt;/tt&gt;&lt;/em&gt; is the string &lt;tt&gt;MD5&lt;/tt&gt; defining the key format and &lt;em&gt;&lt;tt&gt;key&lt;/tt&gt;&lt;/em&gt; is the key itself, which is a printable ASCII string 16 characters or less in length. Each character is chosen from the 93 printable characters in the range 0x21 through 0x7f excluding space and the &amp;lsquo;#&amp;rsquo; character.&lt;/p&gt;
&lt;p&gt;Note that the keys used by the &lt;tt&gt;ntpq&lt;/tt&gt; and &lt;tt&gt;ntpdc&lt;/tt&gt; programs are checked against passwords requested by the programs and entered by hand, so it is generally appropriate to specify these keys in human readable ASCII format.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntp-keygen&lt;/tt&gt; program generates a MD5 symmetric keys file &lt;tt&gt;ntpkey_MD5key__hostname.filestamp_&lt;/tt&gt;. Since the file contains private shared keys, it should be visible only to root and distributed by secure means to other subnet hosts. The NTP daemon loads the file &lt;tt&gt;ntp.keys&lt;/tt&gt;, so &lt;tt&gt;ntp-keygen&lt;/tt&gt; installs a soft link from this name to the generated file. Subsequently, similar soft links must be installed by manual or automated means on the other subnet hosts. While this file is not used with the Autokey Version 2 protocol, it is needed to authenticate some remote configuration commands used by the &lt;a href=&#34;/archives/4.2.6-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; and &lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt;&lt;/a&gt; utilities.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;It can take quite a while to generate some cryptographic values, from one to several minutes with modern architectures such as UltraSPARC and up to tens of minutes to an hour with older architectures such as SPARC IPC.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpd - Network Time Protocol (NTP) daemon</title>
      <link>/archives/4.2.6-series/ntpd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/ntpd/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/wingdorothy.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;The Wizard of Oz&lt;/em&gt;, L. Frank Baum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You need help from the monkeys.&lt;/p&gt;
&lt;p&gt;Last update: 14-oct-09 22:23&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#setting-the-time-and-frequency&#34;&gt;Setting the Time and Frequency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#operating-modes&#34;&gt;Operating Modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#poll-interval-control&#34;&gt;Poll Interval Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#leap-second-processing&#34;&gt;Leap Second Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#additional-features&#34;&gt;Additional Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#the-configuration-file&#34;&gt;The Configuration File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd/#exit-codes&#34;&gt;Exit Codes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpd [ -46aAbdDgLmnNqx ] [ -c &lt;em&gt;conffile&lt;/em&gt; ] [ -f &lt;em&gt;driftfile&lt;/em&gt; ] [ -i &lt;em&gt;jaildir&lt;/em&gt; ] [ -I &lt;em&gt;iface&lt;/em&gt; ] [ -k &lt;em&gt;keyfile&lt;/em&gt; ] [ -l &lt;em&gt;logfile&lt;/em&gt; ] [ -p &lt;em&gt;pidfile&lt;/em&gt; ] [ -P &lt;em&gt;priority&lt;/em&gt; ] [ -r &lt;em&gt;broadcastdelay&lt;/em&gt; ] [ -s &lt;em&gt;statsdir&lt;/em&gt; ] [ -t &lt;em&gt;key&lt;/em&gt; ] [ -u &lt;em&gt;user&lt;/em&gt;[:&lt;em&gt;group&lt;/em&gt;] ] [ -U &lt;em&gt;interface_update_interval&lt;/em&gt; ] [ -v &lt;em&gt;variable&lt;/em&gt; ] [ -V &lt;em&gt;variable&lt;/em&gt; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; program is an operating system daemon that synchronizes the system clock to remote NTP time servers or local reference clocks. It is a complete implementation of the Network Time Protocol (NTP) version 4, but also retains compatibility with version 3, as defined by RFC-1305, and version 1 and 2, as defined by RFC-1059 and RFC-1119, respectively. The program can operate in any of several modes, as described on the &lt;a href=&#34;/archives/4.2.6-series/assoc&#34;&gt;Association Management&lt;/a&gt; page, and with both symmetric key and public key cryptography, as described on the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Authentication Options&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; program ordinarily requires a configuration file. However a client can discover remote servers and configure them automatically. This makes it possible to deploy a fleet of workstations without specifying configuration details specific to the local environment. Further details are on the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Once the NTP software distribution has been compiled and installed and the configuration file constructed, the next step is to verify correct operation and fix any bugs that may result. Usually, the command line that starts the daemon is included in the system startup file, so it is executed only at system boot time; however, the daemon can be stopped and restarted from root at any time. Once started, the daemon will begin sending and receiving messages, as specified in the configuration file.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;setting-the-time-and-frequency&#34;&gt;Setting the Time and Frequency&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; program operates by exchanging messages with one or more servers at designated intervals ranging from about one minute to about 17 minutes. When started, the program requires several exchanges while the algorithms accumulate and groom the data before setting the clock. The initial delay to set the clock can be reduced using options on the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Server Options&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Most compters today incorporate a time-of-year (TOY) chip to maintain the time during periods when the power is off. When the machine is booted, the chip is used to initialize the operating system time. In case there is no TOY chip or the TOY time is more than 1000 s from the server time, &lt;tt&gt;ntpd&lt;/tt&gt; assumes something must be terribly wrong and exits with a panic message to the system operator. With the &lt;tt&gt;-g&lt;/tt&gt; option the clock will be initially set to the server time regardless of the chip time. However, once the clock has been set, an error greater than 1000 s will cause &lt;tt&gt;ntpd&lt;/tt&gt; to exit anyway.&lt;/p&gt;
&lt;p&gt;Under ordinary conditions, &lt;tt&gt;ntpd&lt;/tt&gt; slews the clock so that the time is effectively continuous and never runs backwards. If due to extreme network congestion an error spike exceeds the &lt;em&gt;step threshold&lt;/em&gt;, by default 128 ms, the spike is discarded. However, if the error persists for more than the &lt;em&gt;stepout threshold&lt;/em&gt;, by default 900 s, the system clock is stepped to the correct value. In practice the need for a step has is extremely rare and almost always the result of a hardware failure. With the &lt;tt&gt;-x&lt;/tt&gt; option the step threshold is increased to 600 s. Other options are available using the &lt;tt&gt;tinker&lt;/tt&gt; command on the &lt;a href=&#34;/archives/4.2.6-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The issues should be carefully considered before using these options. The maximum slew rate possible is limited to 500 parts-per-million (PPM) by the Unix kernel. As a result, the clock can take 2000 s for each second the clock is outside the acceptable range. During this interval the clock will not be consistent with any other network clock and the system cannot be used for distributed applications that require correctly synchronized network time.&lt;/p&gt;
&lt;p&gt;The frequency file, usually called &lt;tt&gt;ntp.drift&lt;/tt&gt;, contains the latest estimate of clock frequency. If this file does not exist when &lt;tt&gt;ntpd&lt;/tt&gt; is started, it enters a special mode designed to measure the particular frequency directly. The measurement takes 15 minutes, after which the frequency is set and &lt;tt&gt;ntpd&lt;/tt&gt; resumes normal mode where the time and frequency are continuously adjusted. The frequency file is updated at intervals of an hour or more depending on the measured clock stability.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;operating-modes&#34;&gt;Operating Modes&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; program normally operates continuously while adjusting the time and frequency, but in some cases it may not be practical to run it continuously. With the &lt;tt&gt;-q&lt;/tt&gt; option &lt;tt&gt;ntpd&lt;/tt&gt; operates as in continous mode, but exits just after setting the clock for the first time with the configured servers. Most applications will probably want to specify the &lt;tt&gt;iburst&lt;/tt&gt; option with the &lt;tt&gt;server&lt;/tt&gt; command. With this option a volley of messages is exchanged to groom the data and set the clock in about 10 s. If nothing is heard after a few minutes, the daemon times out and exits.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;poll-interval-control&#34;&gt;Poll Interval Control&lt;/h4&gt;
&lt;p&gt;NTP uses an intricate heuristic algorithm to automatically control the poll interval for maximum accuracy consistent with minimum network overhead. The algorithm measures the incidental offset and jitter to determine the best poll interval. When &lt;tt&gt;ntpd&lt;/tt&gt; starts, the interval is the default minimum 64 s. Under normal conditions when the clock discipline has stabilized, the interval increases in steps to the default maximum 1024 s. In addition, should a server become unreachable after some time, the interval increases in steps to the maximum in order to reduce network overhead.&lt;/p&gt;
&lt;p&gt;The default poll interval range is suitable for most conditions, but can be changed using options on the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Server Options&lt;/a&gt; and &lt;a href=&#34;/archives/4.2.6-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; pages. However, when using maximum intervals much larger than the default, the residual clock frequency error must be small enough for the discipline loop to capture and correct. The capture range is 500 PPM with a 64-s interval decreasing by a factor of two for each interval doubling. At a 36-hr interval, for example, the capture range is only 0.24 PPM.&lt;/p&gt;
&lt;h4 id=&#34;the-huff-n-puff-filter&#34;&gt;The huff-n&#39;-puff Filter&lt;/h4&gt;
&lt;p&gt;In scenarios where a considerable amount of data are to be downloaded or uploaded over telephone modems, timekeeping quality can be seriously degraded. This occurs because the differential delays on the two directions of transmission can be quite large. In many cases the apparent time errors are so large as to exceed the step threshold and a step correction can occur during and after the data transfer.&lt;/p&gt;
&lt;p&gt;The huff-n&#39;-puff filter is designed to correct the apparent time offset in these cases. It depends on knowledge of the propagation delay when no other traffic is present, such as during other than work hours. The filter remembers the minimum delay over the most recent interval measured usually in hours. Under conditions of severe delay, the filter corrects the apparent offset using the sign of the offset and the difference between the apparent delay and minimum delay. The name of the filter reflects the negative (huff) and positive (puff) correction, which depends on the sign of the offset. The filter is activated by the &lt;tt&gt;tinker huffpuff&lt;/tt&gt; command, as described in the &lt;a href=&#34;/archives/4.2.6-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;leap-second-processing&#34;&gt;Leap Second Processing&lt;/h4&gt;
&lt;p&gt;As provided by international agreement, an extra second is sometimes inserted in Coordinated Universal Time (UTC) at the end of a selected month, usually June or December. The National Institutes of Standards and Technology (NIST) provides an historic leapseconds file at &lt;tt&gt;time.nist.gov&lt;/tt&gt; for retrieval via FTP. When this file, usually called &lt;tt&gt;ntp-leapseconds.list&lt;/tt&gt;, is copied and installed in a directory. The &lt;tt&gt;leapfile&lt;/tt&gt; configuration command specifies the path to this file. At startup, &lt;tt&gt;ntpd&lt;/tt&gt; reads it and initializes three leapsecond values: the NTP seconds at the next leap event, the offset of UTC relative to International Atomic Time (TAI) after the leap and the NTP seconds when the leapseconds file expires and should be retrieved again.&lt;/p&gt;
&lt;p&gt;If a host does not have the leapsecond values, they can be obtained over the net using the Autokey security protocol. Ordinarily, the leapseconds file is installed on the primary servers and the values flow from them via secondary servers to the clients. When multiple servers are involved, the values with the latest expiration time are used.&lt;/p&gt;
&lt;p&gt;If the latest leap is in the past, nothing further is done other than to install the TAI offset. If the leap is in the future less than 28 days, the leap warning bits are set. If in the future less than 23 hours, the kernel is armed to insert one second at the end of the current day. If the kernel is enabled, the leap is done automatically at that time; otherwise, the clock is effectively stopped for one second at the leap. Additional details are in the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/leap.html&#34;&gt;The NTP Timescale and Leap Seconds&lt;/a&gt; white paper.&lt;/p&gt;
&lt;p&gt;If none of the above provisions are available, dsependent servers and clients tally the leap warning bits of surviving servers and reference clocks. When a majority of the survivors show warning, a leap is programmed at the end of the current month. During the month and day of insertion, they operate as above. In this way the leap is propagated at all dependent servers and clients.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;additional-features&#34;&gt;Additional Features&lt;/h4&gt;
&lt;p&gt;A new experimental feature called interleaved modes can be used in NTP symmetric or broadcast modes. It is designed to improve accuracy by avoiding kernel latency and queueing delay, as described on the &lt;a href=&#34;/archives/4.2.6-series/xleave&#34;&gt;NTP Interleaved Modes&lt;/a&gt; page. It is activated by the &lt;tt&gt;xleave&lt;/tt&gt; option with the &lt;tt&gt;peer&lt;/tt&gt; or &lt;tt&gt;broadcast&lt;/tt&gt; configuration commands. The NTP protocol automatically reconfigures in normal or interleaved mode as required. Ordinary broadcast clients can use the same servers as interleaved clients at the same time. Further details are in the white paper &lt;a href=&#34;http://www.eecis.udel.edu/~mills/onwire.html&#34;&gt;NTP Interleaved On-Wire Protocol&lt;/a&gt; and the briefing &lt;a href=&#34;http://www.eecis.udel.edu/~mills/database/brief/onwire/onwire.ppt&#34;&gt;Interleaved Synchronization Protocols for LANs and Space Data Links&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;tt&gt;ntpd&lt;/tt&gt;, is configured with NetInfo support, it will attempt to read its configuration from the NetInfo service if the default &lt;tt&gt;ntp.conf&lt;/tt&gt; file cannot be read and no file is specified by the &lt;tt&gt;-c&lt;/tt&gt; option.&lt;/p&gt;
&lt;p&gt;In contexts where a host name is expected, a &lt;tt&gt;-4&lt;/tt&gt; qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a &lt;tt&gt;-6&lt;/tt&gt; qualifier forces DNS resolution to the IPv6 namespace.&lt;/p&gt;
&lt;p&gt;Various internal &lt;tt&gt;ntpd&lt;/tt&gt; variables can be displayed and configuration options altered while the &lt;tt&gt;ntpd&lt;/tt&gt; is running using the &lt;tt&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq&#34;&gt;ntpq&lt;/a&gt;&lt;/tt&gt; and &lt;tt&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;ntpdc&lt;/a&gt;&lt;/tt&gt; utility programs.&lt;/p&gt;
&lt;p&gt;When &lt;tt&gt;ntpd&lt;/tt&gt; starts it looks at the value of &lt;tt&gt;umask&lt;/tt&gt;, and if zero &lt;tt&gt;ntpd&lt;/tt&gt; will set the &lt;tt&gt;umask&lt;/tt&gt; to &lt;tt&gt;022&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Unless the &lt;tt&gt;-n&lt;/tt&gt;, &lt;tt&gt;-d&lt;/tt&gt; or &lt;tt&gt;-D&lt;/tt&gt; option is used, &lt;tt&gt;ntpd&lt;/tt&gt; changes the current working directory to the root directory, so any options or commands specifying paths need to use an absolute path or a path relative to the root.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of host names to the IPv4 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-6&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of host names to the IPv6 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-a&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Require cryptographic authentication for broadcast client, multicast client and symmetric passive associations. This is the same operation as the &lt;tt&gt;enable auth&lt;/tt&gt; command and is the default.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-A&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Do not require cryptographic authentication for broadcast client, multicast client and symmetric passive associations. This is the same operation as the &lt;tt&gt;disable auth&lt;/tt&gt; command and almost never a good idea.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-b&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable the client to synchronize to broadcast servers.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-c _conffile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the configuration file, default &lt;tt&gt;/etc/ntp.conf&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify debugging mode. This option may occur more than once, with each occurrence indicating greater detail of display.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-D _level_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify debugging level directly.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-f _driftfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the frequency file. This is the same operation as the &lt;tt&gt;driftfile &lt;em&gt;driftfile&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-g&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Normally, &lt;tt&gt;ntpd&lt;/tt&gt; exits with a message to the system log if the offset exceeds the panic threshold, which is 1000 s by default. This option allows the time to be set to any value without restriction; however, this can happen only once. If the threshold is exceeded after that, &lt;tt&gt;ntpd&lt;/tt&gt; will exit with a message to the system log. This option can be used with the &lt;tt&gt;-q&lt;/tt&gt; and &lt;tt&gt;-x&lt;/tt&gt; options. See the &lt;tt&gt;tinker&lt;/tt&gt; command for other options.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-i _jaildir_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Chroot the server to the directory &lt;em&gt;&lt;tt&gt;jaildir&lt;/tt&gt;&lt;/em&gt;. This option also implies that the server attempts to drop root privileges at startup (otherwise, chroot gives very little additional security), and it is only available if the OS supports to run the server without full root privileges. You may need to also specify a &lt;tt&gt;-u&lt;/tt&gt; option.&lt;/p&gt;
&lt;dt id=&#34;--interface&#34;&gt;&lt;tt&gt;-I [_address_ | _interface name_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Open the network address given, or all the addresses associated with the given interface name. This option may appear multiple times. This option also implies not opening other addresses, except wildcard and localhost. This option is deprecated. Please consider using the configuration file &lt;a href=&#34;/archives/4.2.6-series/miscopt#interface&#34;&gt;interface&lt;/a&gt; command, which is more versatile.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-k _keyfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the symmetric key file. This is the same operation as the &lt;tt&gt;keys &lt;em&gt;keyfile&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-l _logfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the log file. The default is the system log file. This is the same operation as the &lt;tt&gt;logfile &lt;em&gt;logfile&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt id=&#34;--novirtualips&#34;&gt;&lt;tt&gt;-L&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Do not listen to virtual interfaces, defined as those with names containing a colon. This option is deprecated. Please consider using the configuration file &lt;a href=&#34;/archives/4.2.6-series/miscopt#interface&#34;&gt;interface&lt;/a&gt; command, which is more versatile.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-M&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Raise scheduler precision to its maximum (1 msec) using timeBeginPeriod. (Windows only)&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-n&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Don&amp;rsquo;t fork.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-N&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;To the extent permitted by the operating system, run the &lt;tt&gt;ntpd&lt;/tt&gt; at the highest priority.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p _pidfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the name and path of the file used to record the &lt;tt&gt;ntpd&lt;/tt&gt; process ID. This is the same operation as the &lt;tt&gt;pidfile &lt;em&gt;pidfile&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-P _priority_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;To the extent permitted by the operating system, run the &lt;tt&gt;ntpd&lt;/tt&gt; at the specified priority.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-q&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Exit the &lt;tt&gt;ntpd&lt;/tt&gt; just after the first time the clock is set. This behavior mimics that of the &lt;tt&gt;ntpdate&lt;/tt&gt; program, which is to be retired. The &lt;tt&gt;-g&lt;/tt&gt; and &lt;tt&gt;-x&lt;/tt&gt; options can be used with this option. Note: The kernel time discipline is disabled with this option.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-r _broadcastdelay_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the default propagation delay from the broadcast/multicast server to this client. This is necessary only if the delay cannot be computed automatically by the protocol.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s _statsdir_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the directory path for files created by the statistics facility. This is the same operation as the &lt;tt&gt;statsdir &lt;em&gt;statsdir&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-t _key_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Add a key number to the trusted key list. This option can occur more than once. This is the same operation as the &lt;tt&gt;trustedkey &lt;em&gt;key&lt;/em&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-u _user[:group]_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a user, and optionally a group, to switch to. This option is only available if the OS supports running the server without full root privileges. Currently, this option is supported under NetBSD (configure with &lt;tt&gt;&amp;ndash;enable-clockctl&lt;/tt&gt;) and Linux (configure with &amp;ndash;&lt;tt&gt;enable-linuxcaps&lt;/tt&gt;).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-U _interface update interval_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Number of seconds to wait between interface list scans to pick up new and delete network interface. Set to 0 to disable dynamic interface list updating. The default is to scan every 5 minutes.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-v _variable_&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;tt&gt;-V _variable_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Add a system variable listed by default.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-x&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Normally, the time is slewed if the offset is less than the step threshold, which is 128 ms by default, and stepped if above the threshold. This option sets the threshold to 600 s, which is well within the accuracy window to set the clock manually. Note: Since the slew rate of typical Unix kernels is limited to 0.5 ms/s, each second of adjustment requires an amortization interval of 2000 s. Thus, an adjustment as much as 600 s will take almost 14 days to complete. This option can be used with the &lt;tt&gt;-g&lt;/tt&gt; and &lt;tt&gt;-q&lt;/tt&gt; options. See the &lt;tt&gt;tinker&lt;/tt&gt; command for other options. Note: The kernel time discipline is disabled with this option.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;--pccfreq _frequency_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Substitute processor cycle counter for QueryPerformanceCounter unconditionally using the given frequency (in Hz). &lt;tt&gt;&amp;ndash;pccfreq&lt;/tt&gt; can be used on systems which do not use the PCC to implement QueryPerformanceCounter and have a fixed PCC frequency. The frequency specified must be accurate within 0.5 percent. &lt;tt&gt;&amp;ndash;usepcc&lt;/tt&gt; is equivalent on many systems and should be tried first, as it does not require determining the frequency of the processor cycle counter. For x86-compatible processors, the PCC is also referred to as &lt;tt&gt;RDTSC&lt;/tt&gt;, which is the assembly-language instruction to retrieve the current value.  (Windows only)&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;--usepcc&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Substitute processor cycle counter for QueryPerformanceCounter if they appear equivalent. This option should be used only if the PCC frequency is fixed. Power-saving functionality on many laptops varies the PCC frequency. (Windows only)&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;the-configuration-file&#34;&gt;The Configuration File&lt;/h4&gt;
&lt;p&gt;Ordinarily, &lt;tt&gt;ntpd&lt;/tt&gt; reads the &lt;tt&gt;ntp.conf&lt;/tt&gt; configuration file at startup in order to determine the synchronization sources and operating modes. It is also possible to specify a working, although limited, configuration entirely on the command line, obviating the need for a configuration file. This may be particularly useful when the local host is to be configured as a broadcast client, with servers determined by listening to broadcasts at run time.&lt;/p&gt;
&lt;p&gt;Usually, the configuration file is installed as&lt;tt&gt;/etc/ntp.conf&lt;/tt&gt;, but could be installed elsewhere (see the &lt;tt&gt;-c &lt;em&gt;conffile&lt;/em&gt;&lt;/tt&gt; command line option). The file format is similar to other Unix configuration files - comments begin with a &lt;tt&gt;#&lt;/tt&gt; character and extend to the end of the line; blank lines are ignored.&lt;/p&gt;
&lt;p&gt;Configuration commands consist of an initial command keyword followed by a list of option keywords separated by whitespace. Commands may not be continued over multiple lines. Options may be host names, host addresses written in numeric, dotted-quad form, integers, floating point numbers (when specifying times in seconds) and text strings. Optional arguments are delimited by &lt;tt&gt;[ ]&lt;/tt&gt; in the options pages, while alternatives are separated by &lt;tt&gt;|&lt;/tt&gt;. The notation &lt;tt&gt;[ &amp;hellip; ]&lt;/tt&gt; means an optional, indefinite repetition of the last item before the &lt;tt&gt;[ &amp;hellip; ]&lt;/tt&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;configuration file&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/etc/ntp.conf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frequency file&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;driftfile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leapseconds file&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;leapfile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;process ID file&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;`-p&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pidfile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log file&lt;/td&gt;
&lt;td&gt;system log&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;logfile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;include file&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;&lt;code&gt;includefile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;statistics path&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/var/NTP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;statsdir&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;keys path&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/usr/local/etc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-k&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;keysdir&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;exit-codes&#34;&gt;Exit Codes&lt;/h4&gt;
&lt;p&gt;A non-zero exit code indicates an error. Any error messages are logged to the system log by default.&lt;/p&gt;
&lt;p&gt;The exit code is 0 only when &lt;tt&gt;ntpd&lt;/tt&gt; is terminated by a signal, or when the &lt;tt&gt;-q&lt;/tt&gt; option is used and &lt;tt&gt;ntpd&lt;/tt&gt; successfully sets the system clock.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpd System Log Messages</title>
      <link>/archives/4.2.6-series/msyslog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/msyslog/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/flatheads.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The log can be shrill at times.&lt;/p&gt;
&lt;p&gt;Last update:  02:22 UTC Monday, March 03, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/msyslog/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/msyslog/#protocol-module&#34;&gt;Protocol Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/msyslog/#clock-discipline-module&#34;&gt;Clock Discipline Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/msyslog/#cryptographic-module&#34;&gt;Cryptographic Module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;You have come here because you found a cryptic message in the system log. This page by no means lists all messages that might be found, since new ones come and old ones go. Generally, however, the most common ones will be found here. They are listed by program module and log severity code in bold: &lt;tt&gt;&lt;strong&gt;LOG_ERR&lt;/strong&gt;&lt;/tt&gt;, &lt;strong&gt;&lt;tt&gt;LOG_NOTICE&lt;/tt&gt;&lt;/strong&gt; and &lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Most of the time &lt;strong&gt;&lt;tt&gt;LOG_ERR&lt;/tt&gt;&lt;/strong&gt; messages are fatal, but often &lt;tt&gt;ntpd&lt;/tt&gt; limps onward in the hopes of discovering more errors. The &lt;tt&gt;&lt;strong&gt;LOG_NOTICE&lt;/strong&gt;&lt;/tt&gt; messages usually mean the time has changed or some other condition that probably should be noticed. The &lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt; messages usually say something about the system operations, but do not affect the time.&lt;/p&gt;
&lt;p&gt;In the following a &lt;code&gt;?&lt;/code&gt; character stands for text in the message. The meaning should be clear from context.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;protocol-module&#34;&gt;Protocol Module&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_ERR&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;buffer overflow ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Fatal error. An input packet is too long for processing.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_NOTICE&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;no reply; clock not set&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;In &lt;tt&gt;ntpdate&lt;/tt&gt; mode no servers have been found. The server(s) and/or network may be down. Standard debugging procedures apply.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;proto_config: illegal item ?, value ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Program error. Bugs can be reported &lt;a href=&#34;/archives/4.2.6-series/bugs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;receive: autokey requires two-way communication&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Configuration error on the &lt;tt&gt;broadcastclient&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;receive: server _server_ maximum rate exceeded&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A kiss-o&amp;rsquo;death packet has been received. The transmit rate is automatically reduced.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pps sync enabled&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The PPS signal has been detected and enabled.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;transmit: encryption key ? not found&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The encryption key is not defined or not trusted.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;precision = ? usec&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This reports the precision measured for this machine.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;using 10ms tick adjustments&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Gotcha for some machines with dirty rotten clock hardware.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;no servers reachable&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The system clock is running on internal batteries. The server(s) and/or network may be down.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clock-discipline-module&#34;&gt;Clock Discipline Module&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_ERR&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time correction of ? seconds exceeds sanity limit (?); set clock manually to the correct UTC time&lt;/tt&gt;.&lt;/dt&gt;
&lt;p&gt;Fatal error. Better do what it says, then restart the daemon. Be advised NTP and Unix know nothing about local time zones. The clock must be set to Coordinated Universal Time (UTC). Believe it; by international agreement abbreviations are in French and descriptions are in English.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;sigaction() fails to save SIGSYS trap: ? &lt;/tt&gt; 
&lt;dt&gt;&lt;tt&gt;sigaction() fails to restore SIGSYS trap: ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Program error. Bugs can be reported &lt;a href=&#34;/archives/4.2.6-series/bugs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_NOTICE&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;frequency error ? exceeds tolerance 500 PPM&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The hardware clock frequency error exceeds the rate the kernel can correct. This could be a hardware or a kernel problem.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time slew ? s&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The time error exceeds the step threshold and is being slewed to the correct time. You may have to wait a very long time.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time reset ? s&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The time error exceeds the step threshold and has been reset to the correct time. Computer scientists don&amp;rsquo;t like this, but they can set the &lt;tt&gt;ntpd -x&lt;/tt&gt; option and wait forever.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;kernel time sync disabled ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The kernel reports an error. See the codes in the &lt;tt&gt;timex.h&lt;/tt&gt; file.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pps sync disabled&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The PPS signal has died, probably due to a dead radio, broken wire or loose connector.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;kernel time sync status ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;For information only. See the codes in the &lt;tt&gt;timex.h&lt;/tt&gt; file.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;cryptographic-module&#34;&gt;Cryptographic Module&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_ERR&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_sign ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_cert ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_encrypt ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_gq ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_iff ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_key ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_mv ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;make_keys ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Usually fatal errors. These messages display error codes returned from the OpenSSL library. See the OpenSSL documentation for explanation.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: certificate ? is trusted, but not self signed.&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: certificate ? not for this host&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: certificate file ? not found or corrupt&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: host key file ? not found or corrupt&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: host key is not RSA key type&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: random seed file ? not found&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_setup: random seed file not specified&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Fatal errors. These messages show problems during the initialization procedure.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;&lt;strong&gt;LOG_INFO&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse: expired ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse: invalid issuer ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse: invalid signature ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;cert_parse: invalid subject ?&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;There is a problem with a certificate. Operation cannot proceed until the problem is fixed. If the certificate is local, it can be regenerated using the &lt;tt&gt;ntp-keygen&lt;/tt&gt; program. If it is held somewhere else, it must be fixed by the holder.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_?: defective key&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_?: invalid filestamp&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_?: missing challenge&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;crypto_?: scheme unavailable&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;There is a problem with the identity scheme. Operation cannot proceed until the problem is fixed. Usually errors are due to misconfiguration or an orphan association. If the latter, &lt;tt&gt;ntpd&lt;/tt&gt; will usually time out and recover by itself.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;crypto_cert: wrong PEM type ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The certificate does not have MIME type &lt;tt&gt;CERTIFICATE&lt;/tt&gt;. You are probably using the wrong type from OpenSSL or an external certificate authority.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;crypto_ident: no compatible identity scheme found&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Configuration error. The server and client identity schemes are incompatible.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;crypto_tai: kernel TAI update failed&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The kernel does not support this function. You may need a new kernel or patch.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;crypto_tai: leapseconds file ? error ?&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The leapseconds file is corrupt. Obtain the latest file from &lt;tt&gt;time.nist.gov&lt;/tt&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpdate - set the date and time via NTP</title>
      <link>/archives/4.2.6-series/ntpdate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/ntpdate/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/rabbit.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I told you it was eyeball and wristwatch.&lt;/p&gt;
&lt;p&gt;Last update: 18:44 UTC Thursday, July 28, 2005&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Disclaimer: The functionality of this program is now available in the &lt;tt&gt;ntpd&lt;/tt&gt; program. See the &lt;code&gt;-q&lt;/code&gt; command line option in the &lt;a href=&#34;/archives/4.2.6-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; - Network Time Protocol (NTP) daemon&lt;/a&gt; page. After a suitable period of mourning, the &lt;tt&gt;ntpdate&lt;/tt&gt; program will be retired from this distribution.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdate/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdate/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdate/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdate/#diagnostics&#34;&gt;Diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdate/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdate/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdate [ -46bBdqsuv ] [ -a &lt;em&gt;key&lt;/em&gt; ] [ -e &lt;em&gt;authdelay&lt;/em&gt; ] [ -k &lt;em&gt;keyfile&lt;/em&gt; ] [ -o &lt;em&gt;version&lt;/em&gt; ] [ -p &lt;em&gt;samples&lt;/em&gt; ] [ -t &lt;em&gt;timeout&lt;/em&gt; ] &lt;em&gt;server&lt;/em&gt; [ &amp;hellip; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdate&lt;/tt&gt; sets the local date and time by polling the Network Time Protocol (NTP) server(s) given as the &lt;em&gt;server&lt;/em&gt; arguments to determine the correct time. It must be run as root on the local host. A number of samples are obtained from each of the servers specified and a subset of the NTP clock filter and selection algorithms are applied to select the best of these. Note that the accuracy and reliability of &lt;tt&gt;ntpdate&lt;/tt&gt; depends on the number of servers, the number of polls each time it is run and the interval between runs.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntpdate&lt;/tt&gt; can be run manually as necessary to set the host clock, or it can be run from the host startup script to set the clock at boot time. This is useful in some cases to set the clock initially before starting the NTP daemon &lt;tt&gt;ntpd&lt;/tt&gt;. It is also possible to run &lt;tt&gt;ntpdate&lt;/tt&gt; from a &lt;tt&gt;cron&lt;/tt&gt; script. However, it is important to note that &lt;tt&gt;ntpdate&lt;/tt&gt; with contrived &lt;tt&gt;cron&lt;/tt&gt; scripts is no substitute for the NTP daemon, which uses sophisticated algorithms to maximize accuracy and reliability while minimizing resource use. Finally, since &lt;tt&gt;ntpdate&lt;/tt&gt; does not discipline the host clock frequency as does &lt;tt&gt;ntpd&lt;/tt&gt;, the accuracy using &lt;tt&gt;ntpdate&lt;/tt&gt; is limited.&lt;/p&gt;
&lt;p&gt;Time adjustments are made by &lt;tt&gt;ntpdate&lt;/tt&gt; in one of two ways. If &lt;tt&gt;ntpdate&lt;/tt&gt; determines the clock is in error more than 0.5 second it will simply step the time by calling the system &lt;tt&gt;settimeofday()&lt;/tt&gt; routine. If the error is less than 0.5 seconds, it will slew the time by calling the system &lt;tt&gt;adjtime()&lt;/tt&gt; routine. The latter technique is less disruptive and more accurate when the error is small, and works quite well when &lt;tt&gt;ntpdate&lt;/tt&gt; is run by &lt;tt&gt;cron&lt;/tt&gt; every hour or two.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntpdate&lt;/tt&gt; will decline to set the date if an NTP server daemon (e.g., &lt;tt&gt;ntpd&lt;/tt&gt;) is running on the same host. When running &lt;tt&gt;ntpdate&lt;/tt&gt; on a regular basis from &lt;tt&gt;cron&lt;/tt&gt; as an alternative to running a daemon, doing so once every hour or two will result in precise enough timekeeping to avoid stepping the clock.&lt;/p&gt;
&lt;p&gt;Note that in contexts where a host name is expected, a &lt;tt&gt;-4&lt;/tt&gt; qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a &lt;tt&gt;-6&lt;/tt&gt; qualifier forces DNS resolution to the IPv6 namespace.&lt;/p&gt;
&lt;p&gt;If NetInfo support is compiled into &lt;tt&gt;ntpdate&lt;/tt&gt;, then the &lt;tt&gt;server&lt;/tt&gt; argument is optional if &lt;tt&gt;ntpdate&lt;/tt&gt; can find a time server in the NetInfo configuration for &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv4 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-6&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv6 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-a _key_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable the authentication function and specify the key identifier to be used for authentication as the argument &lt;em&gt;key&lt;/em&gt;. The keys and key identifiers must match in both the client and server key files. The default is to disable the authentication function.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-B&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force the time to always be slewed using the adjtime() system call, even if the measured offset is greater than +-500 ms. The default is to step the time using settimeofday() if the offset is greater than +-500 ms. Note that, if the offset is much greater than +-500 ms in this case, that it can take a long time (hours) to slew the clock to the correct value. During this time, the host should not be used to synchronize clients.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-b&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force the time to be stepped using the settimeofday() system call, rather than slewed (default) using the adjtime() system call. This option should be used when called from a startup file at boot time.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable the debugging mode, in which &lt;tt&gt;ntpdate&lt;/tt&gt; will go through all the steps, but not adjust the local clock and using an unprivileged port. Information useful for general debugging will also be printed.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-e _authdelay_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the processing delay to perform an authentication function as the value &lt;em&gt;authdelay&lt;/em&gt;, in seconds and fraction (see &lt;tt&gt;ntpd&lt;/tt&gt; for details). This number is usually small enough to be negligible for most purposes, though specifying a value may improve timekeeping on very slow CPUs.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-k _keyfile_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the path for the authentication key file as the string &lt;em&gt;keyfile&lt;/em&gt;. The default is &lt;tt&gt;/etc/ntp.keys&lt;/tt&gt;. This file should be in the format described in &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-o _version_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the NTP version for outgoing packets as the integer &lt;em&gt;version&lt;/em&gt;, which can be 1 or 2. The default is 4. This allows &lt;tt&gt;ntpdate&lt;/tt&gt; to be used with older NTP versions.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p _samples_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the number of samples to be acquired from each server as the integer &lt;em&gt;samples&lt;/em&gt;, with values from 1 to 8 inclusive. The default is 4.&lt;/p&gt;
&lt;dt&gt;_&lt;tt&gt;-q&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;Query only - don&amp;rsquo;t set the clock.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Divert logging output from the standard output (default) to the system &lt;tt&gt;syslog&lt;/tt&gt; facility. This is designed primarily for convenience of &lt;tt&gt;cron&lt;/tt&gt; scripts.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-t _timeout_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the maximum time waiting for a server response as the value &lt;em&gt;timeout&lt;/em&gt;, in seconds and fraction. The value is rounded to a multiple of 0.2 seconds. The default is 1 second, a value suitable for polling across a LAN.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-u&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Direct &lt;tt&gt;ntpdate&lt;/tt&gt; to use an unprivileged port for outgoing packets. This is most useful when behind a firewall that blocks incoming traffic to privileged ports, and you want to synchronize with hosts beyond the firewall. Note that the &lt;tt&gt;-d&lt;/tt&gt; option always uses unprivileged ports.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-_v_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Be verbose. This option will cause &lt;tt&gt;ntpdate&lt;/tt&gt;&amp;rsquo;s version identification string to be logged.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;diagnostics&#34;&gt;Diagnostics&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdate&lt;/tt&gt;&amp;rsquo;s exit status is zero if it finds a server and updates the clock, and nonzero otherwise.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;/etc/ntp.keys&lt;/tt&gt; - encryption keys used by &lt;tt&gt;ntpdate&lt;/tt&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;The slew adjustment is actually 50% larger than the measured offset, since this (it is argued) will tend to keep a badly drifting clock more accurate. This is probably not a good idea and may cause a troubling hunt for some values of the kernel variables &lt;tt&gt;tick&lt;/tt&gt; and &lt;tt&gt;tickadj&lt;/tt&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpdc - special NTP query program</title>
      <link>/archives/4.2.6-series/ntpdc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/ntpdc/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice31.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This program is a big, deprecated puppy.&lt;/p&gt;
&lt;p&gt;Last update: 01:11 UTC Saturday, November 24, 2007&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc/#interactive-commands&#34;&gt;Interactive Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc/#control-message-commands&#34;&gt;Control Message Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc/#runtime-configuration-requests&#34;&gt;Runtime Configuration Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdc [ -46dilnps ] [ -c &lt;em&gt;command&lt;/em&gt; ] [ &lt;em&gt;host&lt;/em&gt; ] [ &amp;hellip; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdc&lt;/tt&gt; is used to query the &lt;tt&gt;ntpd&lt;/tt&gt; daemon about its current state and to request changes in that state. The program may be run either in interactive mode or controlled using command line arguments. Extensive state and statistics information is available through the &lt;tt&gt;ntpdc&lt;/tt&gt; interface. In addition, nearly all the configuration options which can be specified at startup using ntpd&amp;rsquo;s configuration file may also be specified at run time using &lt;tt&gt;ntpdc&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;If one or more request options are included on the command line when &lt;tt&gt;ntpdc&lt;/tt&gt; is executed, each of the requests will be sent to the NTP servers running on each of the hosts given as command line arguments, or on localhost by default. If no request options are given, &lt;tt&gt;ntpdc&lt;/tt&gt; will attempt to read commands from the standard input and execute these on the NTP server running on the first host given on the command line, again defaulting to localhost when no other host is specified. &lt;tt&gt;ntpdc&lt;/tt&gt; will prompt for commands if the standard input is a terminal device.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntpdc&lt;/tt&gt; uses NTP mode 7 packets to communicate with the NTP server, and hence can be used to query any compatible server on the network which permits it. Note that since NTP is a UDP protocol this communication will be somewhat unreliable, especially over large distances in terms of network topology. &lt;tt&gt;ntpdc&lt;/tt&gt; makes no attempt to retransmit requests, and will time requests out if the remote host is not heard from within a suitable timeout time.&lt;/p&gt;
&lt;p&gt;The operation of &lt;tt&gt;ntpdc&lt;/tt&gt; are specific to the particular implementation of the &lt;tt&gt;ntpd&lt;/tt&gt; daemon and can be expected to work only with this and maybe some previous versions of the daemon. Requests from a remote &lt;tt&gt;ntpdc&lt;/tt&gt; program which affect the state of the local server must be authenticated, which requires both the remote program and local server share a common key and key identifier.&lt;/p&gt;
&lt;p&gt;Note that in contexts where a host name is expected, a &lt;tt&gt;-4&lt;/tt&gt; qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a &lt;tt&gt;-6&lt;/tt&gt; qualifier forces DNS resolution to the IPv6 namespace.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;
&lt;p&gt;Specifying a command line option other than &lt;tt&gt;-i&lt;/tt&gt; or &lt;tt&gt;-n&lt;/tt&gt; will cause the specified query (queries) to be sent to the indicated host(s) immediately. Otherwise, &lt;tt&gt;ntpdc&lt;/tt&gt; will attempt to read interactive format commands from the standard input.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;tt&gt;-4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv4 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-6&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv6 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-c _command_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The following argument is interpreted as an interactive format command and is added to the list of commands to be executed on the specified host(s). Multiple -c options may be given.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Turn on debugging mode.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-i&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force &lt;tt&gt;ntpdc&lt;/tt&gt; to operate in interactive mode. Prompts will be written to the standard output and commands read from the standard input.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-l&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain a list of peers which are known to the server(s). This switch is equivalent to &lt;tt&gt;-c listpeers&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-n&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Output all host addresses in dotted-quad numeric format rather than converting to the canonical host names.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print a list of the peers known to the server as well as a summary of their state. This is equivalent to &lt;tt&gt;-c peers&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print a list of the peers known to the server as well as a summary of their state, but in a slightly different format than the -p switch. This is equivalent to &lt;tt&gt;-c dmpeers&lt;/tt&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;interactive-commands&#34;&gt;Interactive Commands&lt;/h4&gt;
&lt;p&gt;Interactive format commands consist of a keyword followed by zero to four arguments. Only enough characters of the full keyword to uniquely identify the command need be typed. The output of a command is normally sent to the standard output, but optionally the output of individual commands may be sent to a file by appending a &lt;code&gt;&amp;lt;&lt;/code&gt;, followed by a file name, to the command line.&lt;/p&gt;
&lt;p&gt;A number of interactive format commands are executed entirely within the &lt;tt&gt;ntpdc&lt;/tt&gt; program itself and do not result in NTP mode 7 requests being sent to a server. These are described following.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;? [ _command_keyword_ ]&lt;/tt&gt;  
&lt;tt&gt;help [ _command_keyword_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A &lt;tt&gt;?&lt;/tt&gt; by itself will print a list of all the command keywords known to this incarnation of &lt;tt&gt;ntpq&lt;/tt&gt;. A &lt;tt&gt;?&lt;/tt&gt; followed by a command keyword will print function and usage information about the command. This command is probably a better source of information about &lt;tt&gt;ntpq&lt;/tt&gt; than this manual page.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;delay _milliseconds_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a time interval to be added to timestamps included in requests which require authentication. This is used to enable (unreliable) server reconfiguration over long delay network paths or between machines whose clocks are unsynchronized. Actually the server does not now require timestamps in authenticated requests, so this command may be obsolete.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;host _hostname_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the host to which future queries will be sent. Hostname may be either a host name or a numeric address.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;hostnames [ yes | no ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;If &lt;tt&gt;yes&lt;/tt&gt; is specified, host names are printed in information displays. If &lt;tt&gt;no&lt;/tt&gt; is specified, numeric addresses are printed instead. The default is &lt;tt&gt;yes&lt;/tt&gt;, unless modified using the command line &lt;tt&gt;-n&lt;/tt&gt; switch.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;keyid _keyid_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command allows the specification of a key number to be used to authenticate configuration requests from ntpdc to the host(s). This must correspond to a key number which the host/server has been configured to use for this purpose (server options: &lt;tt&gt;trustedkey&lt;/tt&gt;, and &lt;tt&gt;requestkey&lt;/tt&gt;). If authentication is not enabled on the host(s) for ntpdc commands, the command &lt;tt&gt;&amp;ldquo;keyid 0&amp;rdquo;&lt;/tt&gt; should be given; otherwise the &lt;em&gt;keyid&lt;/em&gt; of the next subsequent &lt;tt&gt;addpeer/addserver/broadcast&lt;/tt&gt; command will be used.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;quit&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Exit &lt;tt&gt;ntpdc&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;passwd&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command prompts you to type in a password (which will not be echoed) which will be used to authenticate configuration requests. The password must correspond to the key configured for use by the NTP server for this purpose if such requests are to be successful.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;timeout _milliseconds_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a timeout period for responses to server queries. The default is about 8000 milliseconds. Note that since &lt;tt&gt;ntpdc&lt;/tt&gt; retries each query once after a timeout, the total waiting time for a timeout will be twice the timeout value set.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;control-message-commands&#34;&gt;Control Message Commands&lt;/h4&gt;
&lt;p&gt;Query commands result in NTP mode 7 packets containing requests for information being sent to the server. These are read-only commands in that they make no modification of the server configuration state.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;listpeers&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtains and prints a brief list of the peers for which the server is maintaining state. These should include all configured peer associations as well as those peers whose stratum is such that they are considered by the server to be possible future synchronization candidates.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;peers&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtains a list of peers for which the server is maintaining state, along with a summary of that state. Summary information includes the address of the remote peer, the local interface address (0.0.0.0 if a local address has yet to be determined), the stratum of the remote peer (a stratum of 16 indicates the remote peer is unsynchronized), the polling interval, in seconds, the reachability register, in octal, and the current estimated delay, offset and dispersion of the peer, all in seconds.&lt;/p&gt;
&lt;p&gt;The character in the left margin indicates the mode this peer entry is operating in. &lt;code&gt;+&lt;/code&gt; denotes symmetric active, &lt;code&gt;-&lt;/code&gt; indicates symmetric passive, &lt;code&gt;=&lt;/code&gt; means the remote server is being polled in client mode, &lt;code&gt;^&lt;/code&gt; indicates that the server is broadcasting to this address, &lt;code&gt;~&lt;/code&gt; denotes that the remote peer is sending broadcasts and &lt;code&gt;*&lt;/code&gt; marks the peer the server is currently synchronizing to.&lt;/p&gt;
&lt;p&gt;The contents of the host field may be one of four forms. It may be a host name, an IP address, a reference clock implementation name with its parameter or &lt;tt&gt;REFCLK(&lt;em&gt;implementation number&lt;/em&gt;, &lt;em&gt;parameter&lt;/em&gt;)&lt;/tt&gt;. On &lt;tt&gt;hostnames no&lt;/tt&gt; only IP-addresses will be displayed.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;dmpeers&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A slightly different peer summary list. Identical to the output of the &lt;tt&gt;peers&lt;/tt&gt; command, except for the character in the leftmost column. Characters only appear beside peers which were included in the final stage of the clock selection algorithm. A &lt;code&gt;.&lt;/code&gt; indicates that this peer was cast off in the falseticker detection, while &lt;code&gt;+&lt;/code&gt; indicates that the peer made it through. A &lt;code&gt;*&lt;/code&gt; denotes the peer the server is currently synchronizing with.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;showpeer _peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Shows a detailed display of the current peer variables for one or more peers. Most of these values are described in the NTP Version 2 specification.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pstats _peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Show per-peer statistic counters associated with the specified peer(s).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;clockinfo _clock_peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain and print information concerning a peer clock. The values obtained provide information on the setting of fudge factors and other clock performance information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;kerninfo&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain and print kernel phase-lock loop operating parameters. This information is available only if the kernel has been specially modified for a precision timekeeping function.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;loopinfo [ oneline | multiline ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print the values of selected loop filter variables. The loop filter is the part of NTP which deals with adjusting the local system clock. The &lt;tt&gt;offset&lt;/tt&gt; is the last offset given to the loop filter by the packet processing code. The &lt;tt&gt;frequency&lt;/tt&gt; is the frequency error of the local clock in parts-per-million (ppm). The &lt;tt&gt;time_const&lt;/tt&gt; controls the stiffness of the phase-lock loop and thus the speed at which it can adapt to oscillator drift. The &lt;tt&gt;watchdog timer&lt;/tt&gt; value is the number of seconds which have elapsed since the last sample offset was given to the loop filter. The &lt;tt&gt;oneline&lt;/tt&gt; and &lt;tt&gt;multiline&lt;/tt&gt; options specify the format in which this information is to be printed, with &lt;tt&gt;multiline&lt;/tt&gt; as the default.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;sysinfo&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print a variety of system state variables, i.e., state related to the local server. All except the last four lines are described in the NTP Version 3 specification, RFC-1305.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;system flags&lt;/tt&gt; show various system flags, some of which can be set and cleared by the &lt;tt&gt;enable&lt;/tt&gt; and &lt;tt&gt;disable&lt;/tt&gt; configuration commands, respectively. These are the &lt;tt&gt;auth&lt;/tt&gt;, &lt;tt&gt;bclient&lt;/tt&gt;, &lt;tt&gt;monitor&lt;/tt&gt;, &lt;tt&gt;pll&lt;/tt&gt;, &lt;tt&gt;pps&lt;/tt&gt; and &lt;tt&gt;stats&lt;/tt&gt; flags. See the &lt;tt&gt;ntpd&lt;/tt&gt; documentation for the meaning of these flags. There are two additional flags which are read only, the &lt;tt&gt;kernel_pll&lt;/tt&gt; and &lt;tt&gt;kernel_pps&lt;/tt&gt;. These flags indicate the synchronization status when the precision time kernel modifications are in use. The &lt;tt&gt;kernel_pll&lt;/tt&gt; indicates that the local clock is being disciplined by the kernel, while the kernel_pps indicates the kernel discipline is provided by the PPS signal.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;stability&lt;/tt&gt; is the residual frequency error remaining after the system frequency correction is applied and is intended for maintenance and debugging. In most architectures, this value will initially decrease from as high as 500 ppm to a nominal value in the range .01 to 0.1 ppm. If it remains high for some time after starting the daemon, something may be wrong with the local clock, or the value of the kernel variable &lt;tt&gt;tick&lt;/tt&gt; may be incorrect.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;broadcastdelay&lt;/tt&gt; shows the default broadcast delay, as set by the &lt;tt&gt;broadcastdelay&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;authdelay&lt;/tt&gt; shows the default authentication delay, as set by the &lt;tt&gt;authdelay&lt;/tt&gt; configuration command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;sysstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print statistics counters maintained in the protocol module.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;memstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print statistics counters related to memory allocation code.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;iostats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print statistics counters maintained in the input-output module.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;timerstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print statistics counters maintained in the timer/event queue support code.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;reslist&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain and print the server&amp;rsquo;s restriction list. This list is (usually) printed in sorted order and may help to understand how the restrictions are applied.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;ifstats&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;List interface statistics for interfaces used by ntpd for network communication.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;ifreload&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force rescan of current system interfaces. Outputs interface statistics for interfaces that could possibly change. Marks unchanged interfaces with &lt;strong&gt;.&lt;/strong&gt;, added interfaces with &lt;strong&gt;+&lt;/strong&gt; and deleted interfaces with &lt;strong&gt;-&lt;/strong&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;monlist [ _version_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain and print traffic counts collected and maintained by the monitor facility. The version number should not normally need to be specified.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;clkbug _clock_peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Obtain debugging information for a reference clock driver. This information is provided only by some clock drivers and is mostly undecodable without a copy of the driver source in hand.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;runtime-configuration-requests&#34;&gt;Runtime Configuration Requests&lt;/h4&gt;
&lt;p&gt;All requests which cause state changes in the server are authenticated by the server using a configured NTP key (the facility can also be disabled by the server by not configuring a key). The key number and the corresponding key must also be made known to &lt;tt&gt;ntpdc&lt;/tt&gt;. This can be done using the keyid and passwd commands, the latter of which will prompt at the terminal for a password to use as the encryption key. You will also be prompted automatically for both the key number and password the first time a command which would result in an authenticated request to the server is given. Authentication not only provides verification that the requester has permission to make such changes, but also gives an extra degree of protection again transmission errors.&lt;/p&gt;
&lt;p&gt;Authenticated requests always include a timestamp in the packet data, which is included in the computation of the authentication code. This timestamp is compared by the server to its receive time stamp. If they differ by more than a small amount the request is rejected. This is done for two reasons. First, it makes simple replay attacks on the server, by someone who might be able to overhear traffic on your LAN, much more difficult. Second, it makes it more difficult to request configuration changes to your server from topologically remote hosts. While the reconfiguration facility will work well with a server on the local host, and may work adequately between time-synchronized hosts on the same LAN, it will work very poorly for more distant hosts. As such, if reasonable passwords are chosen, care is taken in the distribution and protection of keys and appropriate source address restrictions are applied, the run time reconfiguration facility should provide an adequate level of security.&lt;/p&gt;
&lt;p&gt;The following commands all make authenticated requests.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;addpeer _peer_address_ [ _keyid_ ] [ _version_ ] [ &lt;tt&gt;minpoll# | prefer | iburst | burst | minpoll _N_ | &lt;tt&gt;maxpoll&lt;/tt&gt; _N_ [...]&lt;/tt&gt; ]&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;tt&gt;addpeer _peer_address_ [ &lt;tt&gt;prefer | iburst | burst | minpoll _N_ | &lt;tt&gt;maxpoll&lt;/tt&gt; _N_ | &lt;tt&gt;keyid&lt;/tt&gt; _N_ | &lt;tt&gt;version&lt;/tt&gt; _N_ [...]&lt;/tt&gt; ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Add a configured peer association at the given address and operating in symmetric active mode. Note that an existing association with the same peer may be deleted when this command is executed, or may simply be converted to conform to the new configuration, as appropriate. If the &lt;tt&gt;keyid&lt;/tt&gt; is nonzero, all outgoing packets to the remote server will have an authentication field attached encrypted with this key. If the value is 0 (or not given) no authentication will be done. If ntpdc&amp;rsquo;s key number has not yet been set (&lt;em&gt;e.g.,&lt;/em&gt; by the keyid command), it will be set to this value. The &lt;tt&gt;version#&lt;/tt&gt; can be 1 through 4 and defaults to 3. The remaining options are either a numeric value for &lt;tt&gt;minpoll&lt;/tt&gt; or literals &lt;tt&gt;prefer&lt;/tt&gt;, &lt;tt&gt;iburst&lt;/tt&gt;, &lt;tt&gt;burst&lt;/tt&gt;, &lt;tt&gt;minpoll&lt;/tt&gt; &lt;em&gt;N&lt;/em&gt;, &lt;tt&gt;keyid&lt;/tt&gt; &lt;em&gt;N&lt;/em&gt;, &lt;tt&gt;version&lt;/tt&gt; &lt;em&gt;N&lt;/em&gt;, or &lt;tt&gt;maxpoll&lt;/tt&gt; &lt;em&gt;N&lt;/em&gt; (where &lt;em&gt;N&lt;/em&gt; is a numeric value), and have the action as specified in the &lt;tt&gt;peer&lt;/tt&gt; configuration file command of ntpd. See the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Server Options&lt;/a&gt; page for further information. Each flag (or its absence) replaces the previous setting. The &lt;tt&gt;prefer&lt;/tt&gt; keyword indicates a preferred peer (and thus will be used primarily for clock synchronisation if possible). The preferred peer also determines the validity of the PPS signal - if the preferred peer is suitable for synchronisation so is the PPS signal. The &lt;tt&gt;dynamic&lt;/tt&gt; keyword allows association configuration even when no suitable network interface is found at configuration time. The dynamic interface update mechanism may complete the configuration when new interfaces appear (e.g. WLAN/PPP interfaces) at a later time and thus render the association operable.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;addserver _peer_address_ [ _keyid_ ] [ _version_ ] [ &lt;tt&gt;minpoll# | prefer | iburst | burst | minpoll _N_ | &lt;tt&gt;maxpoll&lt;/tt&gt; _N_ [...]&lt;/tt&gt; ]&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;tt&gt;addserver _peer_address_ [ &lt;tt&gt;prefer | iburst | burst | minpoll _N_ | &lt;tt&gt;maxpoll&lt;/tt&gt; _N_ | &lt;tt&gt;keyid&lt;/tt&gt; _N_ | &lt;tt&gt;version&lt;/tt&gt; _N_ [...]&lt;/tt&gt; ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Identical to the addpeer command, except that the operating mode is client.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;broadcast _peer_address_ [ _keyid_ ] [ _version_ ] [ _prefer_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Identical to the addpeer command, except that the operating mode is broadcast. In this case a valid non-zero key identifier and key are required. The &lt;tt&gt;peer_address&lt;/tt&gt; parameter can be the broadcast address of the local network or a multicast group address assigned to NTP. If a multicast address, a multicast-capable kernel is required.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;unconfig _peer_address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command causes the configured bit to be removed from the specified peer(s). In many cases this will cause the peer association to be deleted. When appropriate, however, the association may persist in an unconfigured mode if the remote peer is willing to continue on in this fashion.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;fudge _peer_address_ [ _time1_ ] [ _time2_ ] [ _stratum_ ] [ _refid_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command provides a way to set certain data for a reference clock. See the source listing for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;enable [ auth | bclient | calibrate | kernel | monitor | ntp | pps | stats]&lt;/tt&gt;  
&lt;tt&gt;disable [ auth | bclient | calibrate | kernel | monitor | ntp | pps | stats]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;These commands operate in the same way as the &lt;tt&gt;enable&lt;/tt&gt; and &lt;tt&gt;disable&lt;/tt&gt; configuration file commands of &lt;tt&gt;ntpd&lt;/tt&gt;. See the &lt;a href=&#34;/archives/4.2.6-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;restrict _address mask flag_ [ _flag_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command operates in the same way as the &lt;tt&gt;restrict&lt;/tt&gt; configuration file commands of &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;unrestrict _address mask flag_ [ _flag_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Unrestrict the matching entry from the restrict list.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;delrestrict _address mask [ ntpport ]_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Delete the matching entry from the restrict list.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;readkeys&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Causes the current set of authentication keys to be purged and a new set to be obtained by rereading the keys file (which must have been specified in the &lt;tt&gt;ntpd&lt;/tt&gt; configuration file). This allows encryption keys to be changed without restarting the server.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;trustedkey _keyid_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;tt&gt;untrustedkey _keyid_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;These commands operate in the same way as the &lt;tt&gt;trustedkey&lt;/tt&gt; and &lt;tt&gt;untrustedkey&lt;/tt&gt; configuration file commands of &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;authinfo&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Returns information concerning the authentication module, including known keys and counts of encryptions and decryptions which have been done.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;traps&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display the traps set in the server. See the source listing for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;addtrap [ _address_ ] [ _port_ ] [ _interface_ ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set a trap for asynchronous messages. See the source listing for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;clrtrap [ _address_ ] [ _port_ ] [ _interface_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Clear a trap for asynchronous messages. See the source listing for further information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;reset&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Clear the statistics counters in various modules of the server. See the source listing for further information.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdc&lt;/tt&gt; is a crude hack. Much of the information it shows is deadly boring and could only be loved by its implementer. The program was designed so that new (and temporary) features were easy to hack in, at great expense to the program&amp;rsquo;s ease of use. Despite this, the program is occasionally useful.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpdsim - Network Time Protocol (NTP) Simulator</title>
      <link>/archives/4.2.6-series/ntpdsim_new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/ntpdsim_new/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/oz2.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;The Wizard of Oz&lt;/em&gt;, L. Frank Baum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All in a row.&lt;/p&gt;
&lt;p&gt;Last update: 15:56 UTC Sunday, March 02, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdsim_new/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdsim_new/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdsim_new/#sample-configuration-file&#34;&gt;Sample Configuration File&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;The ntpdsim program is used to simulate and study the behavior of an NTP daemon that derives its time from a number of different simulated time sources (servers). Each simulated server can be configured to have a different time offset, frequency offset, propagation delay, processing delay, network jitter and oscillator wander.&lt;/p&gt;
&lt;p&gt;The ntpdsim program runs all the same selection, mitigation, and discipline algorithms as the actual ntpd daemon at the client. (It actually uses the same code). However, the input/output routines and servers are simulated. That is, instead of sending the client messages over the network to the actual servers, the client messages are intercepted by the ntpdsim program, which then generates the replies to those messages. The reply messages are carefully &amp;ldquo;inserted&amp;rdquo; into the input queue of the client at the right time according to the specified server properties (like propagation delay).&lt;/p&gt;
&lt;p&gt;Each simulated server runs according to a specified script that describes the server properties at a particular time. Each script consists of a series of consecutive acts. Each act runs for a particular duration and specifies the frequency offset, propagation delay, processing delay, network jitter and oscillator wander of the server for that duration. Once the duration of an act expires, the simulated server reconfigures itself according to the properties specified in the next act.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;configuration&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;The ntpdsim program is configured by providing a configuration file at startup. The crux of the simulator configuration is specified using a &lt;tt&gt;simulate&lt;/tt&gt; command, the syntax of which is given below. Note that all time quantities are in seconds and all frequency quantities are in parts per million (PPM):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;_simulate_command_&amp;gt; ::= &amp;lt;tt&amp;gt;simulate&amp;lt;/tt&amp;gt; { &amp;lt;_init_statement_list_&amp;gt; &amp;lt;_server_list_&amp;gt; }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;_init_statement_list_&amp;gt; ::= &amp;lt;init_statement_list&amp;gt; &amp;lt;init_statement&amp;gt; | &amp;lt;init_statement&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;_init_statement_&amp;gt; ::= &amp;lt;tt&amp;gt;beep_delay&amp;lt;/tt&amp;gt; = &amp;lt;number&amp;gt; | &amp;lt;tt&amp;gt;simulation_duration&amp;lt;/tt&amp;gt; = &amp;lt;number&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;_server_list_&amp;gt; ::= &amp;lt;_server_list_&amp;gt; &amp;lt;server&amp;gt; | &amp;lt;server&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;_server_list_&amp;gt; ::= &amp;lt;tt&amp;gt;server&amp;lt;/tt&amp;gt; = &amp;lt;address&amp;gt; { &amp;lt;tt&amp;gt;server_offset&amp;lt;/tt&amp;gt; = &amp;lt;number&amp;gt; &amp;lt;act_list&amp;gt; }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;_act_list_&amp;gt; ::= &amp;lt;_act_list_&amp;gt; &amp;lt;_act_&amp;gt; | &amp;lt;_act_&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;_act_&amp;gt; ::= &amp;lt;tt&amp;gt;duration&amp;lt;/tt&amp;gt; = &amp;lt;number&amp;gt; { &amp;lt;_act_stmt_list_&amp;gt; }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;_act_stmt_list_&amp;gt; ::= &amp;lt;_act_stmt_list_&amp;gt; &amp;lt;_act_stmt_&amp;gt; | &amp;lt;_act_stmt_&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;_act_stmt_&amp;gt; ::= &amp;lt;tt&amp;gt;freq_offset&amp;lt;/tt&amp;gt; = &amp;lt;number&amp;gt; | &amp;lt;tt&amp;gt;wander&amp;lt;/tt&amp;gt; = &amp;lt;number&amp;gt; | &amp;lt;tt&amp;gt;jitter&amp;lt;/tt&amp;gt; = &amp;lt;number&amp;gt; | &amp;lt;tt&amp;gt;prop_delay&amp;lt;/tt&amp;gt; = &amp;lt;number&amp;gt; | &amp;lt;tt&amp;gt;proc_delay&amp;lt;/tt&amp;gt; = &amp;lt;number&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In addition to the simulate command, other standard NTP configuration commands can be specified. These commands have the same meaning as in the ntpd configuration. Note that newlines are &lt;strong&gt;not&lt;/strong&gt; significant within the simulate command even though they are used to mark the end of a normal NTP configuration command.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;sample-configuration-file&#34;&gt;Sample Configuration File&lt;/h4&gt;
&lt;p&gt;A sample ntpdsim configuration file is given below. It specifies two simulated servers, each of which has two acts.&lt;/p&gt;
&lt;pre&gt;    # Client configuration 
    disable kernel
    server pogo
    driftfile ./ntp.drift
    statsdir ./ntpstats/
    filegen loopstats type day enable
    filegen peerstats type day enable

    # Simulation configuration
    simulate {
        simulation_duration = 86400
        beep_delay = 3600

        # Server 1
	server = louie.udel.edu {
	    server_offset = 0 
            duration = 50000 {
		freq_offset = 400
		wander = 1.0
		jitter = 0.001
		prop_delay = 0.001
		proc_delay = 0.001
	    }
            duration = 6400 {
		freq_offset = 200
		wander = 1.0
		jitter = 0.001
		prop_delay = 0.001
		proc_delay = 0.001
	    }
	}

        # Server 2
	server = baldwin.udel.edu {
	    server_offset = 0.02
	    duration = 10000 {
		freq_offset = 400
		wander = 1.0
		jitter = 0.001
		prop_delay = 0.5
		proc_delay = 0.001
	    }
	    duration = 60000 {
		freq_offset = 200
		wander = 1.0
		jitter = 0.05
		prop_delay = 0.005
		proc_delay = 0.001
	    }
	}
    }
  &lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;mailto:skamboj@udel.edu&#34;&gt;Sachin Kamboj&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpdsim - Network Time Protocol (NTP) simulator</title>
      <link>/archives/4.2.6-series/ntpdsim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/ntpdsim/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/oz2.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;The Wizard of Oz&lt;/em&gt;, L. Frank Baum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All in a row.&lt;/p&gt;
&lt;p&gt;Last update: 15:55 UTC Sunday, March 02, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdsim/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdsim/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdsim/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdsim/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpdsim [ -B &lt;em&gt;bdly&lt;/em&gt; ] [ -C &lt;em&gt;snse&lt;/em&gt; ] [ -O &lt;em&gt;clk_time&lt;/em&gt; ] [ -S &lt;em&gt;sim_time&lt;/em&gt; ] [ -T &lt;em&gt;ferr&lt;/em&gt; ] [ -W &lt;em&gt;fsne&lt;/em&gt; ] [ -Y&lt;/tt&gt; &lt;em&gt;&lt;tt&gt;ndly&lt;/tt&gt;&lt;/em&gt; &lt;tt&gt;] [ -X&lt;/tt&gt; &lt;em&gt;&lt;tt&gt;pdly&lt;/tt&gt;&lt;/em&gt; &lt;tt&gt;]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpdsim&lt;/tt&gt; program is an adaptation of the &lt;tt&gt;ntpd&lt;/tt&gt; operating system daemon. The program operates as a discrete time simulator using specified systematic and random driving sources. It includes all the mitigation and discipline algorithms of the actual daemon, but with the packet I/O and system clock algorithms driven by simulation. Most functions of the real &lt;tt&gt;ntpd&lt;/tt&gt; remain intact, including the monitoring, statistics recording, trace and host name resolution features. Further information on the simulator is on the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/ntpsim.html&#34;&gt;NTP Discrete Event Simulator&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The simulator is most useful to study NTP behavior in response to time and/or frequency transients under specific conditions of network jitter and oscillator wander. For this purpose the daemon can be driven by pseudorandom jitter and wander sample sequences characteristic of real networks and oscillators. The jitter generator produces samples from a Poisson distribution, while the wander generator produces samples from a Guassian distribution.&lt;/p&gt;
&lt;p&gt;The easiest way to use this program is to create a &lt;tt&gt;ntpstats&lt;/tt&gt; directory, configuration file &lt;tt&gt;ntp.conf&lt;/tt&gt; and frequency file &lt;tt&gt;ntp.drift&lt;/tt&gt; and test shell &lt;tt&gt;test.sh&lt;/tt&gt; in the base directory. The &lt;tt&gt;ntp.drift&lt;/tt&gt; file and &lt;tt&gt;ntpstats&lt;/tt&gt; directory can be empty to start. The &lt;tt&gt;test.sh&lt;/tt&gt; script can contain something like&lt;/p&gt;
&lt;pre&gt;rm ./ntpstats/*
ntpdsim -O 0.1 -C .001 -T 400 -W 1 -c ./ntp.conf,
&lt;/pre&gt;
&lt;p&gt;which starts the simulator with a time offset 100 ms, network jitter 1 ms, frequency offset 400 PPM and oscillator wander 1 PPM/s. These parameters represent typical conditions with modern workstations on a Ethernet LAN. The ntp.conf file should contain something like&lt;/p&gt;
&lt;pre&gt;disable kernel
server pogo
driftfile ./ntp.drift
statsdir ./ntpstats/
filegen loopstats type day enable
filegen peerstats type day enable
&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    The NTP development team is moving to the use of a syntax-directed configuration file design. When complete these options will be replaced by a &lt;a href=&#34;/archives/4.2.6-series/ntpdsim_new&#34;&gt;new one&lt;/a&gt;. Most of the &lt;tt&gt;ntpd&lt;/tt&gt; command line options apply also to &lt;tt&gt;ntpdsim&lt;/tt&gt;. In addition, the following command line options apply to &lt;tt&gt;ntpdsim.&lt;/tt&gt;&lt;/dt&gt;

&lt;/div&gt;

&lt;dt&gt;&lt;tt&gt;-B _bdly_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify beep delay (3600) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-C _snse_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify network jitter parameter (0) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-O _clk_time_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify initial time offset (0) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-S _sim_time_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify simulation duration (86400) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-T _ferr_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify initial frequency offset (0) PPM.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-W _fnse_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify oscillator wander parameter (0) PPM/s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-Y _ndly_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify network propagation delay (.001) s.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-Z _pdly_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify server processing delay (.001) s.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;/etc/ntp.conf&lt;/tt&gt; - the default name of the configuration file&lt;br&gt;
&lt;tt&gt;/etc/ntp.drift&lt;/tt&gt; - the default name of the drift file&lt;br&gt;
&lt;tt&gt;/etc/ntp.keys&lt;/tt&gt; - the default name of the key file&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntpq - standard NTP query program</title>
      <link>/archives/4.2.6-series/ntpq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/ntpq/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/bustardfly.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A typical NTP monitoring packet&lt;/p&gt;
&lt;p&gt;Last update: 04-Nov-2009 0:12 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq/#internal-commands&#34;&gt;Internal Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq/#control-message-commands&#34;&gt;Control Message Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq/#status-words-and-kiss-codes&#34;&gt;Status Words and Kiss Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq/#system-variables&#34;&gt;System Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq/#peer-variables&#34;&gt;Peer Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq/#clock-variables&#34;&gt;Clock Variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntpq [-46dinp] [-c &lt;em&gt;command&lt;/em&gt;] [&lt;em&gt;host&lt;/em&gt;] [&amp;hellip;]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;ntpq&lt;/tt&gt; utility program is used to monitor NTP daemon &lt;tt&gt;ntpd&lt;/tt&gt; operations and determine performance. It uses the standard NTP mode 6 control message formats defined in Appendix B of the NTPv3 specification RFC1305. The same formats are used in NTPv4, although some of the variable names have changed and new ones added. The description on this page is for the NTPv4 variables.&lt;/p&gt;
&lt;p&gt;The program can be run either in interactive mode or controlled using command line arguments. Requests to read and write arbitrary variables can be assembled, with raw and pretty-printed output options being available. The &lt;tt&gt;ntpq&lt;/tt&gt; can also obtain and print a list of peers in a common format by sending multiple queries to the server.&lt;/p&gt;
&lt;p&gt;If one or more request options is included on the command line when &lt;tt&gt;ntpq&lt;/tt&gt; is executed, each of the requests will be sent to the NTP servers running on each of the hosts given as command line arguments, or on localhost by default. If no request options are given, &lt;tt&gt;ntpq&lt;/tt&gt; will attempt to read commands from the standard input and execute these on the NTP server running on the first host given on the command line, again defaulting to localhost when no other host is specified. &lt;tt&gt;ntpq&lt;/tt&gt; will prompt for commands if the standard input is a terminal device.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ntpq&lt;/tt&gt; uses NTP mode 6 packets to communicate with the NTP server, and hence can be used to query any compatible server on the network which permits it. Note that since NTP is a UDP protocol this communication will be somewhat unreliable, especially over large distances in terms of network topology. &lt;tt&gt;ntpq&lt;/tt&gt; makes one attempt to retransmit requests, and will time requests out if the remote host is not heard from within a suitable timeout time.&lt;/p&gt;
&lt;p&gt;Note that in contexts where a host name is expected, a &lt;tt&gt;-4&lt;/tt&gt; qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a &lt;tt&gt;-6&lt;/tt&gt; qualifier forces DNS resolution to the IPv6 namespace.&lt;/p&gt;
&lt;p&gt;For examples and usage, see the &lt;a href=&#34;/archives/4.2.6-series/debug&#34;&gt;NTP Debugging Techniques&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Command line options are described following. Specifying a command line option other than &lt;tt&gt;-i&lt;/tt&gt; or &lt;tt&gt;-n&lt;/tt&gt; will cause the specified query (queries) to be sent to the indicated host(s) immediately. Otherwise, &lt;tt&gt;ntpq&lt;/tt&gt; will attempt to read interactive format commands from the standard input.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;tt&gt;-4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv4 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-6&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force DNS resolution of following host names on the command line to the IPv6 namespace.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The following argument is interpreted as an interactive format command and is added to the list of commands to be executed on the specified host(s). Multiple &lt;tt&gt;-c&lt;/tt&gt; options may be given.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Turn on debugging mode.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-i&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Force &lt;tt&gt;ntpq&lt;/tt&gt; to operate in interactive mode. Prompts will be written to the standard output and commands read from the standard input.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-n&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Output all host addresses in dotted-quad numeric format rather than converting to the canonical host names.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-p&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Print a list of the peers known to the server as well as a summary of their state. This is equivalent to the &lt;tt&gt;peers&lt;/tt&gt; interactive command.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;internal-commands&#34;&gt;Internal Commands&lt;/h4&gt;
&lt;p&gt;Interactive format commands consist of a keyword followed by zero to four arguments. Only enough characters of the full keyword to uniquely identify the command need be typed. The output of a command is normally sent to the standard output, but optionally the output of individual commands may be sent to a file by appending a &lt;tt&gt;&amp;gt;&lt;/tt&gt;, followed by a file name, to the command line. A number of interactive format commands are executed entirely within the &lt;tt&gt;ntpq&lt;/tt&gt; program itself and do not result in NTP mode-6 requests being sent to a server. These are described following.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;tt&gt;? [_command_keyword_]&lt;/tt&gt;  
&lt;tt&gt;help [_command_keyword_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;A &lt;tt&gt;?&lt;/tt&gt; by itself will print a list of all the command keywords known to &lt;tt&gt;ntpq&lt;/tt&gt;. A &lt;tt&gt;?&lt;/tt&gt; followed by a command keyword will print function and usage information about the command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;addvars _name_ [ = _value_] [...]&lt;/tt&gt;  
&lt;tt&gt;rmvars _name_ [...]&lt;/tt&gt;  
&lt;tt&gt;clearvars&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;The arguments to this command consist of a list of items of the form &lt;tt&gt;&lt;em&gt;name&lt;/em&gt; = &lt;em&gt;value&lt;/em&gt;&lt;/tt&gt;, where the &lt;tt&gt;= &lt;em&gt;value&lt;/em&gt;&lt;/tt&gt; is ignored, and can be omitted in read requests. &lt;tt&gt;ntpq&lt;/tt&gt; maintains an internal list in which data to be included in control messages can be assembled, and sent using the &lt;tt&gt;readlist&lt;/tt&gt; and &lt;tt&gt;writelist&lt;/tt&gt; commands described below. The &lt;tt&gt;addvars&lt;/tt&gt; command allows variables and optional values to be added to the list. If more than one variable is to be added, the list should be comma-separated and not contain white space. The &lt;tt&gt;rmvars&lt;/tt&gt; command can be used to remove individual variables from the list, while the &lt;tt&gt;clearlist&lt;/tt&gt; command removes all variables from the list.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;cooked&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display server messages in prettyprint format.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;debug more | less | off&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Turns internal query program debugging on and off.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;delay _milliseconds_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a time interval to be added to timestamps included in requests which require authentication. This is used to enable (unreliable) server reconfiguration over long delay network paths or between machines whose clocks are unsynchronized. Actually the server does not now require timestamps in authenticated requests, so this command may be obsolete.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;host _name_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the host to which future queries will be sent. The name may be either a DNS name or a numeric address.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;hostnames [yes | no]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;If &lt;tt&gt;yes&lt;/tt&gt; is specified, host names are printed in information displays. If &lt;tt&gt;no&lt;/tt&gt; is specified, numeric addresses are printed instead. The default is &lt;tt&gt;yes&lt;/tt&gt;, unless modified using the command line &lt;tt&gt;-n&lt;/tt&gt; switch.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;keyid _keyid_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command specifies the key number to be used to authenticate configuration requests. This must correspond to a key number the server has been configured to use for this purpose.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;ntpversion 1 | 2 | 3 | 4&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Sets the NTP version number which &lt;tt&gt;ntpq&lt;/tt&gt; claims in packets. Defaults to 2, Note that mode-6 control messages (and modes, for that matter) didn&amp;rsquo;t exist in NTP version 1.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;passwd&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command prompts for a password to authenticate configuration requests. The password must correspond to the key configured for NTP server for this purpose.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;quit&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Exit &lt;tt&gt;ntpq&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;raw&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display server messages as received and without reformatting.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;timeout _milliseconds_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify a timeout period for responses to server queries. The default is about 5000 milliseconds. Note that since &lt;tt&gt;ntpq&lt;/tt&gt; retries each query once after a timeout, the total waiting time for a timeout will be twice the timeout value set.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;control-message-commands&#34;&gt;Control Message Commands&lt;/h4&gt;
&lt;p&gt;Association IDs are used to identify system, peer and clock variables. System variables are assigned an association ID of zero and system name space, while each association is assigned a nonzero association ID and peer namespace. Most control commands send a single mode-6 message to the server and expect a single response message. The exceptions are the &lt;tt&gt;peers&lt;/tt&gt; command, which sends a series of messages, and the &lt;tt&gt;mreadlist&lt;/tt&gt; and &lt;tt&gt;mreadvar&lt;/tt&gt; commands, which iterate over a range of associations.&lt;/p&gt;
&lt;dt id=&#34;as&#34;&gt;&lt;tt&gt;associations&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display a list of mobilized associations in the form&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;ind assid status conf reach auth condition last_event cnt&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ind&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;index on this list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;assid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;association ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#peer-status-word&#34;&gt;peer status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;conf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;yes&lt;/code&gt;: persistent&lt;br&gt; &lt;code&gt;no&lt;/code&gt;: ephemeral&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reach&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;yes&lt;/code&gt;: reachable&lt;br&gt; &lt;code&gt;no&lt;/code&gt;: unreachable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;auth&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ok&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;bad&lt;/code&gt; and &lt;code&gt;none&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;condition&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;selection status (see the &lt;code&gt;select&lt;/code&gt; field of the peer status word)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;last_event&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;event report (see the &lt;code&gt;event&lt;/code&gt; field of the peer status word)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cnt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;event count (see the &lt;code&gt;count&lt;/code&gt; field of the peer status word)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt&gt;&lt;tt&gt;clockvar _assocID_ [_name_ [ = _value_ [...]] [...]&lt;/tt&gt;  
&lt;tt&gt;cv _assocID_ [_name_ [ = _value_ [...] ][...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display a list of &lt;a href=&#34;/archives/4.2.6-series/ntpq#clock-variables&#34;&gt;clock variables&lt;/a&gt; for those associations supporting a reference clock.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;:config [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Send the remainder of the command line, including whitespace, to the server as a run-time configuration command in the same format as the configuration file. This command is experimental until further notice and clarification. Authentication is of course required.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;config-from-file _filename_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Send each line of &lt;em&gt;filename&lt;/em&gt; to the server as run-time configuration commands in the same format as the configuration file. This command is experimental until further notice and clarification. Authentication is of course required.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;keyid&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the key ID to use for write requests.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;lassociations&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Perform the same function as the associations command, except display mobilized and unmobilized associations.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;mreadvar _assocID_ _assocID_ [ _variable_name_ [ = _value_[ ... ]&lt;/tt&gt;  
&lt;tt&gt;mrv _assocID_ _assocID_ [ _variable_name_ [ = _value_[ ... ]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Perform the same function as the &lt;tt&gt;readvar&lt;/tt&gt; command, except for a range of association IDs. This range is determined from the association list cached by the most recent &lt;tt&gt;associations&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;passociations&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Perform the same function as the &lt;tt&gt;associations command&lt;/tt&gt;, except that it uses previously stored data rather than making a new query.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;passwd&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify the password to use for write requests.&lt;/p&gt;
&lt;dt id=&#34;pe&#34;&gt;&lt;tt&gt;peers&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display a list of peers in the form&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;[tally]remote refid st t when pool reach delay offset jitter&lt;/tt&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[tally]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;single-character code indicating current value of the &lt;code&gt;select&lt;/code&gt; field of the &lt;a href=&#34;/archives/4.2.6-series/decode/#peer-status-word&#34;&gt;peer status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;host name (or IP number) of peer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;association ID or kiss code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;st&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;stratum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;u&lt;/code&gt;: unicast &lt;br&gt; &lt;code&gt;b&lt;/code&gt;: broadcast &lt;br&gt; &lt;code&gt;l&lt;/code&gt;: local&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;when&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;sec/min/hr since last received packet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;poll interval (log&lt;sub&gt;2&lt;/sub&gt; s)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reach&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reach shift register (octal)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;delay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;roundtrip delay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jitter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dt id=&#34;rv&#34;&gt;&lt;tt&gt;readvar _assocID_ _name_ [ = _value_ ] [,...]&lt;/tt&gt;  
&lt;tt&gt;rv _assocID_ [ _name_ ] [,...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display the specified variables. If &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is zero, the variables are from the &lt;a href=&#34;/archives/4.2.6-series/ntpq#system-variables&#34;&gt;system variables&lt;/a&gt; name space, otherwise they are from the &lt;a href=&#34;/archives/4.2.6-series/ntpq#peer-variables&#34;&gt;peer variables&lt;/a&gt; name space. The &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is required, as the same name can occur in both spaces. If no &lt;tt&gt;&lt;em&gt;name&lt;/em&gt;&lt;/tt&gt; is included, all operative variables in the name space are displayed. In this case only, if the &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is omitted, it is assumed zero. Multiple names are specified with comma separators and without whitespace. Note that time values are represented in milliseconds and frequency values in parts-per-million (PPM). Some NTP timestamps are represented in the format YYYYMMDDTTTT, where YYYY is the year, MM the month of year, DD the day of month and TTTT the time of day.&lt;/p&gt;
&lt;dt id=&#34;saveconfig&#34;&gt;&lt;tt&gt;saveconfig _filename_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Write the current configuration, including any runtime modifications given with &lt;tt&gt;:config&lt;/tt&gt; or &lt;tt&gt;config-from-file&lt;/tt&gt;, to the ntpd host&amp;rsquo;s file &lt;em&gt;filename&lt;/em&gt;. This command will be rejected by the server unless &lt;a href=&#34;/archives/4.2.6-series/miscopt#saveconfigdir&#34;&gt;saveconfigdir&lt;/a&gt; appears in the &lt;tt&gt;ntpd&lt;/tt&gt; configuration file. &lt;em&gt;filename&lt;/em&gt; can use strftime() format specifiers to substitute the current date and time, for example, &lt;tt&gt;saveconfig ntp-%Y%m%d-%H%M%S.conf&lt;/tt&gt;. The filename used is stored in system variable &lt;tt&gt;savedconfig&lt;/tt&gt;. Authentication is required.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;writevar _assocID_ _name_ = _value_ [,...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Write the specified variables. If the &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is zero, the variables are from the &lt;a href=&#34;/archives/4.2.6-series/ntpq#system-variables&#34;&gt;system variables&lt;/a&gt; name space, otherwise they are from the &lt;a href=&#34;/archives/4.2.6-series/ntpq#peer-variables&#34;&gt;peer variables&lt;/a&gt; name space. The &lt;tt&gt;&lt;em&gt;assocID&lt;/em&gt;&lt;/tt&gt; is required, as the same name can occur in both spaces.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;status-words-and-kiss-codes&#34;&gt;Status Words and Kiss Codes&lt;/h4&gt;
&lt;p&gt;The current state of the operating program is shown in a set of status words maintained by the system and each association separately. These words are displayed in the &lt;tt&gt;rv&lt;/tt&gt; and &lt;tt&gt;as&lt;/tt&gt; commands both in hexadecimal and decoded short tip strings. The codes, tips and short explanations are on the &lt;a href=&#34;/archives/4.2.6-series/decode&#34;&gt;Event Messages and Status Words&lt;/a&gt; page. The page also includes a list of system and peer messages, the code for the latest of which is included in the status word.&lt;/p&gt;
&lt;p&gt;Information resulting from protocol machine state transitions is displayed using an informal set of ASCII strings called &lt;a href=&#34;/archives/4.2.6-series/decode/#kiss-codes&#34;&gt;kiss codes&lt;/a&gt;. The original purpose was for kiss-o&#39;-death (KoD) packets sent by the server to advise the client of an unusual condition. They are now displayed, when appropriate, in the reference identifier field in various billboards.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;system-variables&#34;&gt;System Variables&lt;/h4&gt;
&lt;p&gt;The following system variables appear in the &lt;tt&gt;rv&lt;/tt&gt; billboard. Not all variables are displayed in some configurations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#system-status-word&#34;&gt;system status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP software version and build time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;processor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;hardware platform and version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;system&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;operating system and version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;leap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;leap warning indicator (0-3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stratum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;stratum (1-15)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;precision&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;precision (log&lt;sub&gt;2&lt;/sub&gt; s)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rootdelay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;total roundtrip delay to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rootdisp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;total dispersion to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;peer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;system peer association ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;time constant and poll exponent (log&lt;sub&gt;2&lt;/sub&gt; s) (3-17)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mintc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;minimum time constant (log&lt;sub&gt;2&lt;/sub&gt; s) (3-10)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clock&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;date and time of day&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference ID or &lt;a href=&#34;/archives/4.2.6-series/decode/#kiss-codes&#34;&gt;kiss code&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reftime&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;combined time offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sys_jitter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;combined system jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;frequency&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clock frequency offset (PPM)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clk_wander&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clock frequency wander (PPM)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clk_jitter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clock jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tai&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TAI-UTC offset (s)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;leapsec&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP seconds when the next leap second is/was inserted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expire&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP seconds when the NIST leapseconds file expires&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The jitter and wander statistics are exponentially-weighted RMS averages. The system jitter is defined in the NTPv4 specification; the clock jitter statistic is computed by the clock discipline module.&lt;/p&gt;
&lt;p&gt;When the NTPv4 daemon is compiled with the OpenSSL software library, additional system variables are displayed, including some or all of the following, depending on the particular Autokey dance:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Autokey host name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;group&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Autokey group name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;host flags (see Autokey specification)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;digest&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;OpenSSL message digest algorithm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;signature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;OpenSSL digest/signature scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP seconds at last signature update&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cert&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;certificate subject, issuer and certificate flags&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;until&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;NTP seconds when the certificate expires&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;peer-variables&#34;&gt;Peer Variables&lt;/h4&gt;
&lt;p&gt;The following system variables appear in the &lt;tt&gt;rv&lt;/tt&gt; billboard for each association. Not all variables are displayed in some configurations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;associd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;association ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#peer-status-word&#34;&gt;peer status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;srcadr&lt;/code&gt;&lt;br&gt;  &lt;code&gt;srcport&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;source (remote) IP address and port&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dstadr&lt;/code&gt;&lt;br&gt; &lt;code&gt;dstport&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;destination (local) IP address and port&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;leap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;leap indicator (0-3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stratum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;stratum (0-15)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;precision&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;precision (log&lt;sub&gt;2&lt;/sub&gt; s)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rootdelay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;total roundtrip delay to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rootdisp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;total root dispersion to the primary reference clock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference ID or &lt;a href=&#34;/archives/4.2.6-series/decode/#kiss-codes&#34;&gt;kiss code&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reftime&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reach&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reach register (octal)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unreach&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;unreach counter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hmode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;host mode (1-6)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pmode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;peer mode (1-5)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hpoll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;host poll exponent (log&lt;sub&gt;2&lt;/sub&gt; s) (3-17)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ppoll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;peer poll exponent (log&lt;sub&gt;2&lt;/sub&gt; s) (3-17)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;headway&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;headway (see &lt;a href=&#34;/archives/4.2.6-series/rate&#34;&gt;Rate Management and the Kiss-o&#39;-Death Packet)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#flash-status-word&#34;&gt;flash status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;filter offset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;delay&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;filter delay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dispersion&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;filter dispersion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jitter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;filter jitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bias&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;unicast/broadcast bias&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;xleave&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;interleave delay (see &lt;a href=&#34;/archives/4.2.6-series/xleave&#34;&gt;NTP Interleaved Modes&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The bias variable is calculated when the first broadcast packet is received after the calibration volley. It represents the offset of the broadcast subgraph relative to the unicast subgraph. The xleave variable appears only in the interleaved symmetric and interleaved modes. It represents the internal queuing, buffering and transmission delays for the preceding packet.&lt;/p&gt;
&lt;p&gt;When the NTPv4 daemon is compiled with the OpenSSL software library, additional peer variables are displayed, including the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;peer flags (see Autokey specification)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Autokey server name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;signature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;OpenSSL digest/signature scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;initsequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;initial key ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;initkey&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;initial key index&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Autokey signature timestamp&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h4 id=&#34;clock-variables&#34;&gt;Clock Variables&lt;/h4&gt;
&lt;p&gt;The following clock variables appear in the &lt;tt&gt;cv&lt;/tt&gt; billboard for each association with a reference clock. Not all variables are displayed in some configurations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;associd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;association ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;/archives/4.2.6-series/decode/#clock-status-word&#34;&gt;clock status word&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;device&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;device description&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;timecode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ASCII time code string (specific to device)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;poll messages sent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;noreply&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no reply&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;badformat&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;bad format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;baddata&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;bad date or time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fudgetime1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;fudge time 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fudgetime2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;fudge time 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stratum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;driver stratum&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;driver reference ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;driver flags&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntptime - read and set kernel time variables</title>
      <link>/archives/4.2.6-series/ntptime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/ntptime/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/pogo5.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The turtle has been swimming in the kernel.&lt;/p&gt;
&lt;p&gt;Last update: 16:40 UTC Wednesday, March 12, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntptime/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntptime/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntptime/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntptime [ -chr ] [ -e &lt;em&gt;est_error&lt;/em&gt; ] [ -f &lt;em&gt;frequency&lt;/em&gt; ] [ -m &lt;em&gt;max_error&lt;/em&gt; ] [ -o &lt;em&gt;offset&lt;/em&gt; ] [ -s &lt;em&gt;status&lt;/em&gt; ] [ -t &lt;em&gt;time_constant&lt;/em&gt;]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;This program is useful only with special kernels described in &lt;a href=&#34;/archives/4.2.6-series/kern&#34;&gt;A Kernel Model for Precision Timekeeping&lt;/a&gt;. It reads and displays time-related kernel variables using the &lt;tt&gt;ntp_gettime()&lt;/tt&gt; system call. A similar display can be obtained using the &lt;tt&gt;ntpdc&lt;/tt&gt; program and &lt;tt&gt;kerninfo&lt;/tt&gt; command.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;options&#34;&gt;Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-c&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display the execution time of &lt;tt&gt;ntptime&lt;/tt&gt; itself.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-e _est_error_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify estimated error, in microseconds.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-f _frequency_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify frequency offset, in parts per million.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-h&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display help information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-m _max_error_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify max possible errors, in microseconds.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-o _offset_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify clock offset, in microseconds.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-r&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Display Unix and NTP times in raw format.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s _status_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify clock status. Better know what you are doing.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-t _time_constant_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specify time constant, an integer in the range 0-10.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: ntptrace - trace a chain of NTP servers back to the primary source</title>
      <link>/archives/4.2.6-series/ntptrace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/ntptrace/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice13.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The rabbit knows the way back.&lt;/p&gt;
&lt;p&gt;Last update: 19:06 UTC Wednesday, January 16, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntptrace/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntptrace/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntptrace/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntptrace/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntptrace [ -n ] [ -m &lt;em&gt;maxhosts&lt;/em&gt; ] [ &lt;em&gt;server&lt;/em&gt; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;ntptrace&lt;/tt&gt; is a &lt;tt&gt;perl&lt;/tt&gt; script that uses the &lt;tt&gt;ntpq&lt;/tt&gt; utility program to follow the chain of NTP servers from a given host back to the primary time source. For &lt;tt&gt;ntptrace&lt;/tt&gt; to work properly, each of these servers must implement the NTP Control and Monitoring Protocol specified in RFC 1305 and enable NTP Mode 6 packets.&lt;/p&gt;
&lt;p&gt;If given no arguments, &lt;tt&gt;ntptrace&lt;/tt&gt; starts with &lt;tt&gt;localhost&lt;/tt&gt;. Here is an example of the output from &lt;tt&gt;ntptrace&lt;/tt&gt;:&lt;/p&gt;
&lt;pre&gt;% ntptrace
localhost: stratum 4, offset 0.0019529, synch distance 0.144135
server2ozo.com: stratum 2, offset 0.0124263, synch distance 0.115784
usndh.edu: stratum 1, offset 0.0019298, synch distance 0.011993, refid &#39;WWVB&#39;
&lt;/pre&gt;
&lt;p&gt;On each line, the fields are (left to right): the host name, the host stratum, the time offset between that host and the local host (as measured by &lt;tt&gt;ntptrace&lt;/tt&gt;; this is why it is not always zero for &amp;ldquo;&lt;tt&gt;localhost&lt;/tt&gt;&amp;quot;), the host synchronization distance, and (only for stratum-1 servers) the reference clock ID. All times are given in seconds. Note that the stratum is the server hop count to the primary source, while the synchronization distance is the estimated error relative to the primary source. These terms are precisely defined in RFC-1305.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;options&#34;&gt;Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-n&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Turns off the printing of host names; instead, host IP addresses are given. This may be useful if a nameserver is down.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;This program makes no attempt to improve accuracy by doing multiple samples.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: PPSAPI Interface for Precision Time Signals</title>
      <link>/archives/4.2.6-series/kernpps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/kernpps/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/tonea.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;NBS Special Publication 432, 1979&lt;/em&gt;&lt;/a&gt; (out of print)&lt;/p&gt;
&lt;p&gt;Last update: 15:40 UTC Sunday, March 02, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/kernpps/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/kernpps/#ppsapi-application-program-interface&#34;&gt;PPSAPI Application Program Interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;RFC-2783 describes the PPSAPI application programming interface for external precision time signals, such as the pulse-per-second (PPS) signal generated by some radio clocks and cesium oscillators. The PPSAPI provides a generic capability in the ubiquitous Unix kernel which can be used for a wide variety of measurement applications, including network time synchronization and related experiments. The hardware to do this requires only a serial port and a modem control lead, such as the data carrier detect (DCD) lead, which can be driven by an external source via a level converter/pulse generator such as described on the &lt;a href=&#34;/archives/4.2.6-series/pps&#34;&gt;Pulse-per-second (PPS) Signal Interfacing&lt;/a&gt; page. In some systems a parallel port can be used for the same purpose.&lt;/p&gt;
&lt;p&gt;The PPSAPI interface defined in RFC-2783 is the only PPS interface supported in NTP Version 4. The PPSAPI is supported in stock FreeBSD and, with the addition of the &lt;tt&gt;PPSkit&lt;/tt&gt; kernel module, in Linux.&lt;/p&gt;
&lt;p&gt;The special header file &lt;tt&gt;/usr/include/sys/timepps.h&lt;/tt&gt; implements the PPSAPI using whatever primitives are available in each archeticture and operating system. It obsoletes previous APIs based on the &lt;tt&gt;tty_clock&lt;/tt&gt; and &lt;tt&gt;ppsclock&lt;/tt&gt; line disciplines and streams modules, which are no longer supported.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;/archives/drivers/driver22&#34;&gt;PPS Clock Discipline&lt;/a&gt; driver (type 22) uses the PPSAPI in conjunction with a local radio clock or remote NTP server as a reference clock. The driver can also use the PPSAPI as an interface directly to the kernel PPS facility as described on the &lt;a href=&#34;/archives/4.2.6-series/kern&#34;&gt;Kernel Model for Precision Timekeeping&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;ppsapi-application-program-interface&#34;&gt;PPSAPI Application Program Interface&lt;/h4&gt;
&lt;p&gt;The PPSAPI interface provides the following functions:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_create&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Creates a PPS interface instance and returns a handle to it.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_destroy&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Destroys a PPS interface and returns the resources used.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_setparams&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Sets the parameters associated with a PPS interface instance, including offsets to be automatically added to captured timestamps.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_getparams&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Returns the parameters associated with a PPS interface instance.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_getcap&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Returns the capabilities of the current interface and kernel implementation.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_fetch&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Returns the current timestamps associated with a PPS interface instance in either nanoseconds and nanoseconds (Unix &lt;tt&gt;timespec&lt;/tt&gt;) or seconds and fraction (NTP) format.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;time_pps_kcbind&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;If kernel PPS processing is supported, this binds the support to the associated PPS interface instance.&lt;/p&gt;
&lt;p&gt;The entire PPS interface functionality is currently provided by inline code in the &lt;tt&gt;timepps.h&lt;/tt&gt; header file. While not all implementations support the full PPSAPI specification, they do support all the functions required for the PPS driver described next. The FreeBSD, Linux and Solaris implementations can be used with the stock kernels provided with those systems; however, the Tru64 and SunOS kernels require additional functions not provided in the stock kernels. Solaris users are cautioned that these functions operate improperly in Solaris versions prior to 2.8 with patch Generic_108528-02. Header files for other systems can be found via the web at &lt;a href=&#34;https://www.eecis.udel.edu/~ntp/ntp_spool/software/nanokernel.tar.gz&#34;&gt;nanokernel.tar.gz&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Pulse-Per-Second (PPS) Signal Interfacing</title>
      <link>/archives/4.2.6-series/pps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/pps/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/alice32.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alice is trying to find the PPS signal connector.&lt;/p&gt;
&lt;p&gt;Last update: 22:01 UTC Wednesday, January 02, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/pps/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/pps/#gadget-box&#34;&gt;Gadget Box&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/pps/#operating-system-support&#34;&gt;Operating System Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/pps/#pps-driver&#34;&gt;PPS Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/pps/#using-the-pulse-per-second-pps-signal&#34;&gt;Using the Pulse-per-Second (PPS) Signal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;Most radio clocks are connected using a serial port operating at speeds of 9600 bps. The accuracy using typical timecode formats, where the on-time epoch is indicated by a designated ASCII character like carriage-return &lt;tt&gt;‹cr›&lt;/tt&gt;, is normally limited to 100 microseconds. Using carefuly crafted averaging techniques, the NTP algorithms can whittle this down to a few tens of microseconds. However, some radios produce a PPS signal which can be used to improve the accuracy to few microseconds. This page describes the hardware and software necessar for NTP to use the PPS signal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/archives/pic/gadget.jpg&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;A Gadget Box built by Chuck Hanavin&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;gadget-box&#34;&gt;Gadget Box&lt;/h4&gt;
&lt;p&gt;The PPS signal can be connected in either of two ways: via the DCD data carrier detect pin of a serial port or via the ACK acknowledge pin of a parallel port, depending on the hardware and operating system. Note that NTP no longer supports connection via the RD data pin of a serial port.&lt;/p&gt;
&lt;p&gt;However, the PPS signal levels are usually incompatible with serial port levels. The gadget box consists of a handful of electronic components assembled in a small aluminum box. It includes level converters and a optional modem designed to decode the radio timecode signals transmitted by Canadian time and frequency station CHU. This can be used with the &lt;a href=&#34;/archives/drivers/driver7&#34;&gt;Radio CHU Audio Demodulator/Decoder&lt;/a&gt; driver. A complete set of schematics, PCB artwork and drill templates can be obrtained via the web at &lt;a href=&#34;https://www.eecis.udel.edu/~ntp/ntp_spool/hardware/gadget.tar.Z&#34;&gt;gadget.tar.Z&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;operating-system-support&#34;&gt;Operating System Support&lt;/h4&gt;
&lt;p&gt;Both the serial and parallel port connection require operating system support, which is available in only a few operating systems, including FreeBSD, Linux (with PPSkit patch) and Solaris. Support on an experimental basis is available for several other systems, including SunOS and HP/Compaq/Digital Tru64. The kernel interface described on the &lt;a href=&#34;/archives/4.2.6-series/kernpps&#34;&gt;PPSAPI Interface for Precision Time Signals&lt;/a&gt; page is the only interface currently supported. Older PPS interfaces based on the &lt;tt&gt;ppsclock&lt;/tt&gt; and &lt;tt&gt;tty_clk&lt;/tt&gt; streams modules are no longer supported.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;pps-driver&#34;&gt;PPS Driver&lt;/h4&gt;
&lt;p&gt;PPS support requires the PPS driver (described on the &lt;a href=&#34;/archives/drivers/driver22&#34;&gt;Type 22 PPS Clock Discipline&lt;/a&gt; page. The driver operates in conjunction with a prefer peer, as described in the &lt;a href=&#34;/archives/4.2.6-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page. The prefer peer is ordinarily the radio clock that provides the PPS signal, but in principle another radio clock or remote Internet server could be designated. A source is designated prefer using the &lt;tt&gt;prefer&lt;/tt&gt; keyword, as described on the &lt;a href=&#34;/archives/4.2.6-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page. Only one source can be designated preferred. PPS signals are processed by the PPS driver and other clock drivers which might be involved need not know or care about PPS capability. Note that the &lt;tt&gt;pps&lt;/tt&gt; configuration command has been obsoleted by this driver.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;using-the-pulse-per-second-pps-signal&#34;&gt;Using the Pulse-per-Second (PPS) Signal&lt;/h4&gt;
&lt;p&gt;The PPS signal can be used in two ways, one using the NTP grooming and mitigations algorithms and the other using PPS signal support in the kernel, as described in the &lt;a href=&#34;/archives/4.2.6-series/kern&#34;&gt;Kernel Model for Precision Timekeeping&lt;/a&gt; page. In either case, the PPS signal must be present and within nominal jitter and wander tolerances. In addition, the PPS driver and prefer peer must survive the sanity checks and intersection algorithms. Finally, the offset of the system clock relative to the prefer peer must be less than 128 ms, or well within the 0.5-s unambiguous range. The PPS peer remains active as long as these conditions are met.&lt;/p&gt;
&lt;p&gt;The presence of PPS kernel support is automatically detected during the NTP configuration process and supporting code automatically compiled. When kernel PPS support is enabled, the PPS driver can direct the signal directly to the kernel. Note that the PPS driver does not normally enable the PPS kernel, since performance is generally better with older systems. However, the kernel can be enabled by a driver fudge flag if necessary. This is advised for newer machines in the Pentium class.&lt;/p&gt;
&lt;p&gt;The kernel maintains a watchdog timer for the PPS signal; if the signal has not been heard or is out of tolerance for more than some interval, currently two minutes, the kernel discipline is disabled and operation continues as if it were not present.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Quick Start</title>
      <link>/archives/4.2.6-series/quick/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/quick/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/panda.gif&#34; alt=&#34;gif&#34;&gt;FAX test image for SATNET (1979).&lt;/p&gt;
&lt;p&gt;The baby panda was scanned at University College London and used as a FAX test image for a demonstration of the DARPA Atlantic SATNET Program and the first transatlantic Internet connection in 1978. The computing system used for that demonstration was called the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/database/papers/fuzz.ps&#34;&gt;Fuzzball&lt;/a&gt;. As it happened, this was also the first Internet multimedia presentation and the first to use a predecessor of NTP in regular operation. The image was widely copied and used for testing purpose throughout much of the 1980s.&lt;/p&gt;
&lt;p&gt;Last update: 25-nov-09 22:13 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;For the rank amateur the sheer volume of the documentation collection must be intimidating. However, it doesn&amp;rsquo;t take much to fly the &lt;tt&gt;ntpd&lt;/tt&gt; daemon with a simple configuration where a workstation needs to synchronize to some server elsewhere in the Internet. The first thing is to build the distribution for the particular workstation and install in the usual place. The &lt;a href=&#34;/archives/4.2.6-series/build&#34;&gt;Building and Installing the Distribution&lt;/a&gt; page describes how to do this.&lt;/p&gt;
&lt;p&gt;While it is possible that certain configurations do not need a configuration file, most do. The file, called by default &lt;tt&gt;/etc/ntp.conf&lt;/tt&gt;, need only contain one command specifying a remote server, for instance&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;server foo.bar.com&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Choosing an appropriate remote server is somewhat of a black art, but a suboptimal choice is seldom a problem. The simplest is to use the Server Pool Scheme on the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery&lt;/a&gt; page. There are about two dozen public time servers operated by the &lt;a href=&#34;http://tf.nist.gov/tf-cgi/servers.cgi&#34;&gt;National Institutes of Science and Technology (NIST)&lt;/a&gt;, &lt;a href=&#34;https://www.usno.navy.mil/USNO/time/ntp&#34;&gt;US Naval Observatory (USNO)&lt;/a&gt;, &lt;a href=&#34;https://nrc.canada.ca/en/certifications-evaluations-standards/canadas-official-time/network-time-protocol-ntp&#34;&gt;Canadian Metrology Centre (CMC)&lt;/a&gt; and many others available on the Internet. Lists of public primary and secondary NTP servers are maintained on the &lt;a href=&#34;http://support.ntp.org/Servers/WebHome&#34;&gt;Public NTP Time Servers&lt;/a&gt; page, which is updated frequently. The lists are sorted by country and, in the case of the US, by state. Usually, the best choice is the nearest in geographical terms, but the terms of engagement specified in each list entry should be carefully respected.&lt;/p&gt;
&lt;p&gt;During operation &lt;tt&gt;ntpd&lt;/tt&gt; measures and corrects for incidental clock frequency error and occasionally writes the current value to a file specified by the&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;driftfile /etc/ntp.drift&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;configuration command. If &lt;tt&gt;ntpd&lt;/tt&gt; is stopped and restarted, it initializes the frequency from this file and avoids the potentially lengthy interval to relearn the correction.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s all there is to it, unless some problem in network connectivity or local operating system configuration occurs. The most common problem is some firewall between the workstation and server. System administrators should understand NTP uses UDP port 123 as both the source and destination port and that NTP does not involve any operating system interaction other than to set the system clock. While almost all modern Unix systems have included NTP and UDP port 123 defined in the services file, this should be checked if &lt;tt&gt;ntpd&lt;/tt&gt; fails to come up at all.&lt;/p&gt;
&lt;p&gt;The best way to confirm NTP is working is using the &lt;a href=&#34;/archives/4.2.6-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt;&lt;/a&gt; utility, although the &lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt;&lt;/a&gt; utility may be useful in extreme cases. See the documentation pages for further information. Don&amp;rsquo;t forget to check for &lt;a href=&#34;/archives/4.2.6-series/msyslog&#34;&gt;system log messages&lt;/a&gt;. In the most extreme cases the &lt;tt&gt;-d&lt;/tt&gt; option on the &lt;tt&gt;ntpd&lt;/tt&gt; command line results in a blow-by-blow trace of the daemon operations. While the trace output can be cryptic, to say the least, it gives a general idea of what the program is doing and, in particular, details the arriving and departing packets and any errors found.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Rate Management and the Kiss-o&#39;-Death Packet</title>
      <link>/archives/4.2.6-series/rate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/rate/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/boom4.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/%7emills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our junior managers and the administrators.&lt;/p&gt;
&lt;p&gt;Last update: 	03-May-2009 3:34 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/rate/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/rate/#poll-rate-control&#34;&gt;Poll Rate Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/rate/#burst-control&#34;&gt;Burst Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/rate/#average-headway-time&#34;&gt;Average Headway Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/rate/#guard-time&#34;&gt;Guard Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/rate/#the-kiss-of-death-packet&#34;&gt;The Kiss of Death Packet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;This page describes the various rate management provisions in NTPv4. Details about the configuration commands and options are given on the &lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Configuration Options&lt;/a&gt; page. Details about the cryptographic authentication schemes are given on the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. Details about the automatic server discovery schemes are described on the &lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery Schemes&lt;/a&gt; page. Additional information is available in the papers, reports, memoranda and briefings on the &lt;a href=&#34;http://www.eecis.udel.edu/~mills/ntp.html&#34;&gt;NTP Project&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Some national time metrology laboratories, including NIST and USNO, use the &lt;tt&gt;ntpd&lt;/tt&gt; reference implementation in their very busy public time servers. They operate multiple servers behind load-balancing devices to support aggregate rates up to several thousand packets per second. The servers need to defend themselves against all manner of broken implementations that can clog the server and network infrastructure. On the other hand, friendly &lt;tt&gt;ntpd&lt;/tt&gt; clients need to avoid configurations that can result in unfriendly rates.&lt;/p&gt;
&lt;p&gt;There are several features in &lt;tt&gt;ntpd&lt;/tt&gt; designed to defend the servers, clients and network against accidental or intentional flood attack. On the other hand these features are also used to insure &lt;tt&gt;ntpd&lt;/tt&gt; is a good citizen, even if configured in unfriendly ways. The ground rules are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send at the lowest rate consistent with the expected accuracy expectations.&lt;/li&gt;
&lt;li&gt;Maintain strict minimum average headway and guard times, even if multiple burst options and/or the Autokey protocol are operating.&lt;/li&gt;
&lt;li&gt;When the first packet of a burst is sent to a server, do not send further packets until the first packet has been received from the server.&lt;/li&gt;
&lt;li&gt;Upon receiving a Kiss-o&#39;-Death packet (see below), immediately reduce the sending rate.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rate management involves four algorithms to manage resources: (1) poll rate control, (2) burst control, (3) average headway time and (4) guard time. These are described in following sections.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;poll-rate-control&#34;&gt;Poll Rate Control&lt;/h4&gt;
&lt;p&gt;Control of the poll interval is an intricate balance between expected acuracy and network load. The poll interval is constrained by the lower limit &lt;tt&gt;minpoll&lt;/tt&gt; and upper limit &lt;tt&gt;maxpoll&lt;/tt&gt; options of the &lt;tt&gt;server&lt;/tt&gt; command and represented by the poll exponent in log&lt;sub&gt;2&lt;/sub&gt; s units. The limits default to 6 (64 s) and 10 (1024 s), respectively, which are appropriate for the vast majority of cases. The default limits can be changed with these options to a minimum set by the &lt;tt&gt;average&lt;/tt&gt; option of the &lt;tt&gt;discard&lt;/tt&gt; command (see below) to a maximum of 17 (36 h). Unless the best possible accuracy is required, the well mannered NTP client automatically increases the poll interval to the maximum when possible, whether or not the server is reachable. The current poll interval for each association is displayed by the &lt;tt&gt;ntpq&lt;/tt&gt; program &lt;a href=&#34;/archives/4.2.6-series/ntpq#pe&#34;&gt;&lt;tt&gt;pe&lt;/tt&gt;&lt;/a&gt; command. The global poll interval/time constant is displayed as the poll system variable by the rv command. The minimum global poll interval/time constant is displayed as the minpoll system variable by the &lt;a href=&#34;/archives/4.2.6-series/ntpq#pe&#34;&gt;&lt;tt&gt;rv&lt;/tt&gt;&lt;/a&gt; command.&lt;/p&gt;
&lt;p&gt;As a rule of thumb, the expected errors increase by a factor of two as the poll interval increases by a factor of four. The &lt;tt&gt;ntpd&lt;/tt&gt; poll interval algorithm slowly increases the poll interval when jitter dominates the error budget, but quickly reduces the interval when wander dominates it. The algorithm uses a jiggle counter which operates over the range from &lt;font face=&#34;symbol&#34;&gt;-&lt;/font&gt;30 to +30 and is initialized at 0. If the measured offset is less than four times the measured average jitter, the counter is increased by the pollcurrent exponent; if not, it is decreased by twice the poll exponent. If the counter reaches +30, the poll exponent is incremented by 1; if the counter reaches &lt;font face=&#34;symbol&#34;&gt;-&lt;/font&gt;30, the exponent is decremented by 1. In either case the counter is set to 0.&lt;/p&gt;
&lt;p&gt;The poll interval is proportional to the time constant of the feedback loop which disciplines the system clock. The optimum time constant depends on the network time jitter and the clock oscillator frequency wander. Errors due to jitter decrease as the time constant increases, while errors due to wander decrease as the time constant decreases. The two error characteristics intersect at a point called the Allan intercept, which represents the ideal time constant. With a compromise Allan intercept of 2000 s, the optimim poll interval is about 64 s, which corresponds to a poll exponent of 6.&lt;/p&gt;
&lt;p&gt;There is normally no need to change the poll limits, as the poll interval is managed automatically as a function of prevailing jitter and wander. The most common exceptions are the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With fast, lightly loaded LANs and modern processors, the nominal Allan intercept is about 500 s. In these cases the expected errors can be further reduced using a poll exponent of 4 (16 s). In the case of the pulse-per-second (PPS) driver, this is the recommended value.&lt;/li&gt;
&lt;li&gt;With symmetric modes the most stable behavior results when both peers are configured in symmetric active mode with matching poll intervals of 6 (64 s).&lt;/li&gt;
&lt;li&gt;The poll interval should not be modified for reference clocks, with the single exception the ACTS telephone modem driver. In this case the recommended minimum and maximum intervals are 12 (1.1 h) and 17 (36 h), respectively.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;burst-control&#34;&gt;Burst Control&lt;/h4&gt;
&lt;p&gt;Occasionally it is necessary to send packets at intervals less than the poll interval. For instance, with the &lt;tt&gt;burst&lt;/tt&gt; and &lt;tt&gt;iburst&lt;/tt&gt; options of the &lt;tt&gt;server&lt;/tt&gt; command, the poll algorithm sends a burst of several packets at 2-s intervals. The &lt;tt&gt;ntpd&lt;/tt&gt; poll algorithm avoids sending needless packets if the server is not responding. The client begins a burst with a single packet. When the first packet is received from the server, the client continues with the remaining packets in the burst. If the first packet is not received within 64 s, it will be sent again for two additional retries before beginning backoff. The result is to minimize network load if the server is not responding.&lt;/p&gt;
&lt;p&gt;For the &lt;tt&gt;iburst&lt;/tt&gt; option the number of packets in the burst is six, which is the number normally needed to synchronize the clock; for the &lt;tt&gt;burst&lt;/tt&gt; option, the number of packets in the burst is determined by the difference between the poll interval and the minimum poll interval set by the &lt;tt&gt;minpoll&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.6-series/confopt#server&#34;&gt;&lt;tt&gt;server&lt;/tt&gt;&lt;/a&gt; command. For instance, with a poll exponent of 6 (64 s), only a single packet is sent for every poll, while the full number of eight packets is sent at poll intervals of 9 (512 s) or more.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;average-headway-time&#34;&gt;Average Headway Time&lt;/h4&gt;
&lt;p&gt;There are two features in &lt;tt&gt;ntpd&lt;/tt&gt; to manage the interval between one packet and the next. These features make use of a set of counters: a client output counter for each association and a server input counter for each distinct client address. Each counter increments by a value called the headway when a packet is processed and decrements by one each second. The default minimum average headway in &lt;tt&gt;ntpd&lt;/tt&gt; is 8 s, but this can be changed using the &lt;tt&gt;average&lt;/tt&gt; option of the &lt;tt&gt;discard&lt;/tt&gt; command, but not less than 3 (8 s).&lt;/p&gt;
&lt;p&gt;If the &lt;tt&gt;iburst&lt;/tt&gt; or &lt;tt&gt;burst&lt;/tt&gt; options are present, the poll algorithm sends a burst of packets instead of a single packet at each poll opportunity. The NTPv4 specification requires that bursts contain no more than eight packets; so, starting from an output counter value of zero, the maximum counter value or output ceiling can be no more than eight times the minimum poll interval set by the &lt;tt&gt;minpoll&lt;/tt&gt; option of the &lt;a href=&#34;/archives/4.2.6-series/confopt#server&#34;&gt;&lt;tt&gt;server&lt;/tt&gt;&lt;/a&gt; command. However, if the burst starts with a counter value other than zero, there is a potential to exceed the ceiling. The poll algorithm avoids this by computing an additional headway time so that the next packet sent will not exceed the ceiling. Additional headway time can result from Autokey protocol operations. Designs such as this are often called leaky buckets. The current headway is displayed as the headway peer variable by the &lt;tt&gt;ntpq&lt;/tt&gt; &lt;a href=&#34;/archives/4.2.6-series/ntpq#pe&#34;&gt;&lt;tt&gt;rv&lt;/tt&gt;&lt;/a&gt; command.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;ntpd&lt;/tt&gt; input packet routine uses a special list of entries, one for each distinct client address found. Each entry includes an IP address, input counter and interval since the last packet arrival. The entries are ordered by interval from the smallest to the largest. As each packet arrives, the IP source address is compared to the IP address in each entry in turn. If a match is found the entry is removed and inserted first on the list. If the IP source address does not match any entry, a new entry is created and inserted first, possibly discarding the last entry on the list if it is full. Observers will note this is the same algorithm used for page replacement in virtual memory systems.&lt;/p&gt;
&lt;p&gt;In the virtual memory algorithm the entry of interest is the last, whereas here the entry of interest is the first. The input counter is decreased by the interval since it was last referenced, but not below zero. If the value of the counter plus the headway is greater than the input ceiling set by the &lt;tt&gt;average&lt;/tt&gt; option, the packet is discarded. Otherwise, the counter is increased by the headway and the packet is processed. The result is, if the client maintains a maximum average headway not less than the input ceiling and transmits no more than eight packets in a burst, the input counter will not exceed the ceiling.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;guard-time&#34;&gt;Guard Time&lt;/h4&gt;
&lt;p&gt;A review of past client abuse incidence shows the most frequent scenario is a broken client that attempts to send a number of packets at rates of one per second or more. On one occasion due to a defective client design, over 750,000 clients fell into this mode. There have been occasions where this abuse has persisted for days at a time. These scenarios are the most damaging, as they can threaten not only the victim server but the network infrastructure as well.&lt;/p&gt;
&lt;p&gt;In the &lt;tt&gt;ntpd&lt;/tt&gt; design the minimum headway between the last packet received and the current packet is called the guard time. If the headway is less than the guard time, the packet is discarded. The guard time defaults to 2 s, but this can be changed using the &lt;tt&gt;minimum&lt;/tt&gt; option of the &lt;tt&gt;discard&lt;/tt&gt; command.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;the-kiss-of-death-packet&#34;&gt;The Kiss-of-Death Packet&lt;/h4&gt;
&lt;p&gt;Ordinarily, packets denied service are simply dropped with no further action except incrementing statistics counters. Sometimes a more proactive response is needed to cause the client to slow down. A special packet format has been created for this purpose called the kiss-o&#39;-death (KoD) packet. KoD packets have leap indicator 3, stratum 0 and the reference identifier set to a four-byte ASCII code. At present, only one code &lt;tt&gt;RATE&lt;/tt&gt; is sent by the server if the &lt;tt&gt;limited&lt;/tt&gt; and &lt;tt&gt;kod&lt;/tt&gt; flags are set in the &lt;a href=&#34;/archives/4.2.6-series/accopt#restrict&#34;&gt;&lt;tt&gt;restrict&lt;/tt&gt;&lt;/a&gt; command and the rate limit is exceeded.&lt;/p&gt;
&lt;p&gt;A client receiving a KoD packet is expected to slow down; however, no explicit mechanism is specified in the protocol to do this. In the current reference implementation, the server sets the packet poll to the greater of (a) minimum average headway and (b) client packet poll. The client sets the peer poll field to the maximum of (a) minimum average headway and (b) server packet poll. For KoD packets (only), the minimum peer poll is clamped not less than the peer poll and the headway temporarily increased.&lt;/p&gt;
&lt;p&gt;At present there is only one KoD packet with code &lt;tt&gt;RATE.&lt;/tt&gt; In order to make sure the client notices the KoD, the receive and transmit timestamps are set to the transmit timestamp of the client packet and all other fields left as in the client packet. Thus, even if the client ignores the KoD, it cannot do any useful time computations. KoDs themselves are rate limited in the same way as arriving packets in order to deflect a flood attack.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Reference Clock Audio Drivers</title>
      <link>/archives/4.2.6-series/audio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/audio/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/radio2.jpg&#34; alt=&#34;jpg&#34;&gt;ICOM R-72 shortwave receiver and Sure audio mixer&lt;/p&gt;
&lt;p&gt;Last update: 00:48 UTC Saturday, November 24, 2007&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/audio/#sound-card-drivers&#34;&gt;Sound Card Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/audio/#shortwave-radio-drivers&#34;&gt;Shortwave Radio Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/audio/#autotune-modes&#34;&gt;Autotune Modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/audio/#setup-and-debugging-aids&#34;&gt;Setup and Debugging Aids&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;sound-card-drivers&#34;&gt;Sound Card Drivers&lt;/h4&gt;
&lt;p&gt;There are some applications in which the computer time can be disciplined to an audio signal, rather than a serial timecode and communications port or special purpose bus peripheral. This is useful in such cases where the audio signal is sent over a telephone circuit, for example, or received directly from a shortwave receiver. In such cases the audio signal can be connected via an ordinary sound card or baseboard audio codec. The suite of NTP reference clock drivers currently includes three drivers suitable for these applications. They include a driver for the Inter Range Instrumentation Group (IRIG) signals produced by many radio clocks and timing devices, another for the Canadian time/frequency radio station CHU and a third for the NIST time/frequency radio stations WWV and WWVH. The radio drivers are designed to work with ordinary inexpensive shortwave radios and may be one of the least expensive ways to build a good primary time server.&lt;/p&gt;
&lt;p&gt;All three drivers make ample use of sophisticated digital signal processing algorithms designed to efficiently extract timing signals from noise and interference. The radio station drivers in particular implement optimum linear demodulation and decoding techniques, including maximum-likelihood and soft-decision methods. The documentation page for each driver contains an in-depth discussion on the algorithms and performance expectations. In some cases the algorithms are further analyzed, modeled and evaluated in a technical report.&lt;/p&gt;
&lt;p&gt;Currently, the audio drivers work with Sun operating systems and audio codecs, including SunOS 4.1.3 and Solaris from 2.6 and probably all others in between. They also work with FreeBSD from 4.1 with compatible sound card. In fact, the interface is quite generic and support for other systems, in particular the various Unix generics, should not be difficult. Volunteers are solicited.&lt;/p&gt;
&lt;p&gt;The audio drivers include a number of common features designed to groom input signals, suppress spikes and normalize signal levels. An automatic gain control (AGC) feature provides protection against overdriven or underdriven input signals. It is designed to maintain adequate demodulator signal amplitude while avoiding occasional noise spikes. In order to assure reliable operation, the signal level must be in the range where the audio gain control is effective. In general, this means the input signal level must be such as to cause the AGC to set the gain somewhere in the middle of the range from 0 to 255, as indicated in the timecode displayed by the &lt;tt&gt;ntpq&lt;/tt&gt; program.&lt;/p&gt;
&lt;p&gt;The IRIG and WWV drivers operate by disciplining a logical clock based on the codec sample clock to the audio signal as received. This is done by stuffing or slipping samples as required to maintain exact frequency to the order of 0.1 PPM. In order for the driver to reliably lock on the audio signal, the sample clock frequency tolerance must be less than 250 PPM (.025 percent) for the IRIG driver and half that for the WWV driver. The largest error observed so far is about 60 PPM, but it is possible some sound cards or codecs may exceed that value. In any case, the configuration file command &lt;tt&gt;tinker codec&lt;/tt&gt; command can be used to change the systematic offset in units of 125 PPM.&lt;/p&gt;
&lt;p&gt;The drivers include provisions to select the input port and to monitor the input signal. The &lt;tt&gt;fudge flag 2&lt;/tt&gt; command selects the microphone port if set to zero or the line-in port if set to one. It does not seem useful to specify the compact disc player port. The &lt;tt&gt;fudge flag 3&lt;/tt&gt; command enables the input signal monitor using the previously selected output port and output gain. Both of these flags can be set in the configuration file or remotely using the &lt;tt&gt;ntpdc&lt;/tt&gt; utility program.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;shortwave-radio-drivers&#34;&gt;Shortwave Radio Drivers&lt;/h4&gt;
&lt;p&gt;The WWV/H and CHU audio drivers require an external shortwave radio with the radio output - speaker or headphone jack - connected to either the microphone or line-in port on the computer. There is some degree of art in setting up the radio and antenna and getting the setup to work. While the drivers are highly sophisticated and efficient in extracting timing signals from noise and interference, it always helps to have as clear a signal as possible.&lt;/p&gt;
&lt;p&gt;The most important factor affecting the radio signal is the antenna. It need not be long - even 15 feet is enough if it is located outside of a metal frame building, preferably on the roof, and away from metallic objects. An ordinary CB whip mounted on a PVC pipe and wooden X-frame on the roof should work well with most portable radios, as they are optimized for small antennas.&lt;/p&gt;
&lt;p&gt;The radio need not be located near the computer; in fact, it generally works better if the radio is outside the near field of computers and other electromagnetic noisemakers. It can be in the elevator penthouse connected by house wiring, which can also be used to power the radio. A couple of center-tapped audio transformers will minimize noise pickup and provide phantom power to the radio with return via the building ground.&lt;/p&gt;
&lt;p&gt;The WWV/H and CHU transmitters operate on several frequencies simultaneously, so that in most parts of North America at least one frequency supports propagation to the receiver location at any given hour. While both drivers support the ICOM CI-V radio interface and can tune the radio automatically, computer-tunable radios are expensive and probably not cost effective compared to a GPS receiver. So, the radio frequency must usually be fixed and chosen by compromise.&lt;/p&gt;
&lt;p&gt;Shortwave (3-30 MHz) radio propagation phenomena are well known to shortwave enthusiasts. The phenomena generally obey the following rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The optimum frequency is higher in daytime than nighttime, stays high longer on summer days and low longer on winter nights.&lt;/li&gt;
&lt;li&gt;Transitions between daytime and nighttime conditions generally occur somewhat after sunrise and sunset at the midpoint of the path from transmitter to receiver.&lt;/li&gt;
&lt;li&gt;Ambient noise (static) on the lower frequencies follows the thunderstorm season, so is higher on summer afternoons and evenings.&lt;/li&gt;
&lt;li&gt;The lower frequency bands are best for shorter distances, while the higher bands are best for longer distances.&lt;/li&gt;
&lt;li&gt;The optimum frequencies are higher at the peak of the 11-year sunspot cycle and lower at the trough. The current sunspot cycle began at the minimum in late 2006 and should reach its peak in 2012.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The best way to choose a frequency is to listen at various times over the day and determine the highest (daytime) and lowest (nighttime) frequencies that work well. Choose the frequency that works for the most number of hours in the day, usually the highest frequency. For instance, on the east coast the best compromise CHU frequency is 7335 kHz and the best WWV frequency is 15 MHz.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;autotune-modes&#34;&gt;Autotune Modes&lt;/h4&gt;
&lt;p&gt;The shortwave drivers include support for an optional autotune function compatible with ICOM receivers and transceivers. The &lt;tt&gt;mode&lt;/tt&gt; keyword of the &lt;tt&gt;server&lt;/tt&gt; configuration command specifies the ICOM ID select code in decimal. A missing or zero argument disables the CI-V interface. Since all ICOM select codes are less than 128, the high order bit of the code is used by the driver to specify the baud rate. If this bit is not set, the rate is 9600 bps for the newer radios; if set, the rate is 1200 bps for the older radios. Following are the ID select codes for the known radios.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Radio&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;Decimal&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;706&lt;/td&gt;
&lt;td&gt;0x4e&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;706MKIIG&lt;/td&gt;
&lt;td&gt;0x58&lt;/td&gt;
&lt;td&gt;88&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;725&lt;/td&gt;
&lt;td&gt;0x28&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;726&lt;/td&gt;
&lt;td&gt;0x30&lt;/td&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;735&lt;/td&gt;
&lt;td&gt;0x04&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;746&lt;/td&gt;
&lt;td&gt;0x66&lt;/td&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;751&lt;/td&gt;
&lt;td&gt;0x1c&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;756PROII&lt;/td&gt;
&lt;td&gt;0x64&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;761&lt;/td&gt;
&lt;td&gt;0x1e&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;765&lt;/td&gt;
&lt;td&gt;0x2c&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;775&lt;/td&gt;
&lt;td&gt;0x46&lt;/td&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;781&lt;/td&gt;
&lt;td&gt;0x26&lt;/td&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;970&lt;/td&gt;
&lt;td&gt;0x2e&lt;/td&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7000&lt;/td&gt;
&lt;td&gt;0x70&lt;/td&gt;
&lt;td&gt;113&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R71&lt;/td&gt;
&lt;td&gt;0x1A&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R72&lt;/td&gt;
&lt;td&gt;0x32&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R75&lt;/td&gt;
&lt;td&gt;0x5a&lt;/td&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R7000&lt;/td&gt;
&lt;td&gt;0x08&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R7100&lt;/td&gt;
&lt;td&gt;0x34&lt;/td&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R8500&lt;/td&gt;
&lt;td&gt;0x4a&lt;/td&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R9000&lt;/td&gt;
&lt;td&gt;0x2a&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;setup-and-debugging-aids&#34;&gt;Setup and Debugging Aids&lt;/h4&gt;
&lt;p&gt;The audio drivers include extensive setup and debugging support to help hook up the audio signals and monitor the driver operations. The documentation page for each driver describes the various messages that can be produced either in real time or written to the &lt;tt&gt;clockstats&lt;/tt&gt; file for later analysis. Of particular help in verifying signal connections and compatibility is a provision to monitor the signal via headphones or speaker.&lt;/p&gt;
&lt;p&gt;Connecting radios and IRIG devices to the computer and verifying correct configuration is somewhat of a black art. The signals have to be connected to the correct ports and the signal level maintained within tolerances. Some radios have recorder outputs which produce a microphone-level signal not affected by the volume control. These signals can be connected to the microphone port on the computer. If the radio does not have a recorder output, connect the headphone or speaker output to the line-in port and adjust the volume control so the driver indicates comfortably above the minimum specified and the AGC level somewhere in the middle of the range 0-255. IRIG signals are usually much larger than radio outputs, usually in the range to several volts and may even overload the line-in port. In such cases the signal is designed to drive a cable terminated with a 50-ohm resistor, which results in a level the line-in port can handle..&lt;/p&gt;
&lt;p&gt;It is very easy to underdriven or overdrive the audio codec, in which case the drivers will not synchronize to the signal. The drivers use &lt;tt&gt;fudge flag2&lt;/tt&gt; to enable audio monitoring of the input signal. This is useful during setup to confirm the signal is actually reaching the audio codec and generally free of noise and interference. Note that the monitor volume must be set before the driver is started.&lt;/p&gt;
&lt;p&gt;The drivers write a synthesized timecode to the &lt;tt&gt;clockstats&lt;/tt&gt; file each time the clock is set or verified and at other times if verbose monitoring is enabled. The format includes several fixed-length fields defining the UTC time to the millisecond, together with additional variable-length fields specific to each driver. The data include the intervals since the clock was last set or verified, the audio gain and various state variables and counters specific to each driver.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Reference Clock Drivers</title>
      <link>/archives/4.2.6-series/refclock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/refclock/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/stack1a.jpg&#34; alt=&#34;gif&#34;&gt; Master Time Facility at the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/lab.html&#34;&gt;UDel Internet Research Laboratory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Last update:  20:45 UTC Thursday, January 03, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/refclock/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/refclock/#driver-calibration&#34;&gt;Driver Calibration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/refclock/#comprehensive-list-of-clock-drivers&#34;&gt;Comprehensive List of Clock Drivers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;Drivers for most radio and modem reference clocks is included by default in the NTP distribution. Individual drivers can be activated using &lt;tt&gt;server&lt;/tt&gt; commands as described in the &lt;a href=&#34;/archives/4.2.6-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; program manual page&lt;/a&gt;. Drivers have addresses in the form 127.127.&lt;em&gt;t.u&lt;/em&gt;, where &lt;em&gt;t&lt;/em&gt; is the driver type and &lt;em&gt;u&lt;/em&gt; is a unit number in the range 0-3 to distinguish multiple instances of the same driver. Most drivers require a serial or parallel port or special bus peripheral, but some can work directly from an audio codec or sound card when availble. The particular device is specified by adding a soft link from the name used by the driver to the device name.&lt;/p&gt;
&lt;p&gt;All radio clock drivers require that the radio be set for Coordinated Universal Time (UTC) only. Timezone and standard/daylight adjustments are performed by the kernel. There are difference in the various Unix and Windows port interfaces detected at configuration time, so it is important that the NTP daemon and utilities be compiled on the target system or clone.&lt;/p&gt;
&lt;p&gt;When a pulse-per-second (PPS) signal is available, the &lt;a href=&#34;/archives/drivers/driver22&#34;&gt;PPS Clock Discipline&lt;/a&gt; driver can be used. It normally works in conjunction with the reference clock that produces the signal, but can work with another driver or remote server. When PPS kernel features are present, the driver can redirect the PPS signal to the kernel.&lt;/p&gt;
&lt;p&gt;In general, performance can be improved, especially when more than one driver is supported, to use the prefer peer function described in the &lt;a href=&#34;/archives/4.2.6-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page. The prefer peer is ordinarily designated the remote peer or local clock driver which provides the best quality time. All other things equal, only the prefer peer is used to discipline the system clock and jitter-producing &amp;ldquo;clockhopping&amp;rdquo; between sources is avoided. This is especially valuable when the PPS clock discipline driver is available.&lt;/p&gt;
&lt;p&gt;There are audio drivers for each of the NIST time stations WWV and WWVH, Canadian time station CHU and generic IRIG signals. Currently, support for FreeBSD, Solaris and SunOS is in the distribution. It is left to the volunteer corps to confirm this works in other systems. Further information on hookup, debugging and monitoring is given in the &lt;a href=&#34;/archives/4.2.6-series/audio&#34;&gt;Audio Drivers&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;/archives/drivers/driver1&#34;&gt;Undisciplined Local Clock&lt;/a&gt; driver can simulate a reference clock when no external synchronization sources are available. If a server with this driver is connected directly or indirectly to the public Internet, there is some danger that it can destabilize other clients. It is not recommended that the local clock driver be used in this way, as the orphan mode descibed on the &lt;a href=&#34;/archives/4.2.6-series/assoc&#34;&gt;Association Management&lt;/a&gt; page provides a generic backup capability.&lt;/p&gt;
&lt;p&gt;The local clock driver can also be used when an external synchronization source such as the IEEE 1588 Precision Time Protocol or NIST Lockclock directly synchronizes the computer time. Further information is on the &lt;a href=&#34;/archives/4.2.6-series/extern&#34;&gt;External Clock Discipline and the Local Clock Driver&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;driver-calibration&#34;&gt;Driver Calibration&lt;/h4&gt;
&lt;p&gt;Some drivers depending on longwave or shortwave radio services need to know the radio propagation time from the transmitter to the receiver. This must be calculated for each specific receiver location and requires the geographic coordinates of both the transmitter and receiver. The transmitter coordinates for various radio services are given in the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/ntp/qth.html&#34;&gt;Time and Frequency Standard Station Information&lt;/a&gt; page. Receiver coordinates can be obtained locally or from Google Earth. The actual calculations are beyond the scope of this document.&lt;/p&gt;
&lt;p&gt;Depending on interface type, port speed, etc., a reference clock can have a small residual offset relative to another. To reduce the effects of jitter when switching from one driver to the another, it is useful to calibrate the drivers to a common ensemble offset. The &lt;tt&gt;enable calibrate&lt;/tt&gt; configuration command described on the &lt;a href=&#34;/archives/4.2.6-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; page activates a special feature which automatically calculates a correction factor for each driver relative to an association designated the prefer peer.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;comprehensive-list-of-clock-drivers&#34;&gt;Comprehensive List of Clock Drivers&lt;/h4&gt;
&lt;p&gt;Following is a list showing the type and title of each driver currently implemented. The compile-time identifier for each is shown in parentheses. Click on a selected type for specific description and configuration documentation, including the clock address, reference ID, driver ID, device name and serial line speed. For those drivers without specific documentation, please contact the author listed in the &lt;a href=&#34;/archives/4.2.6-series/copyright&#34;&gt;Copyright Notice&lt;/a&gt; page.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver1&#34;&gt;Type 1&lt;/a&gt; Undisciplined Local Clock (&lt;tt&gt;LOCAL&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver2&#34;&gt;Type 2&lt;/a&gt; Trak 8820 GPS Receiver (&lt;tt&gt;GPS_TRAK&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver3&#34;&gt;Type 3&lt;/a&gt; PSTI/Traconex 1020 WWV/WWVH Receiver (&lt;tt&gt;WWV_PST&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver4&#34;&gt;Type 4&lt;/a&gt; Spectracom WWVB/GPS Receivers (&lt;tt&gt;WWVB_SPEC&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver5&#34;&gt;Type 5&lt;/a&gt; TrueTime GPS/GOES/OMEGA Receivers (&lt;tt&gt;TRUETIME&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver6&#34;&gt;Type 6&lt;/a&gt; IRIG Audio Decoder (&lt;tt&gt;IRIG_AUDIO&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver7&#34;&gt;Type 7&lt;/a&gt; Radio CHU Audio Demodulator/Decoder (&lt;tt&gt;CHU&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver8&#34;&gt;Type 8&lt;/a&gt; Generic Reference Driver (&lt;tt&gt;PARSE&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver9&#34;&gt;Type 9&lt;/a&gt; Magnavox MX4200 GPS Receiver (&lt;tt&gt;GPS_MX4200&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver10&#34;&gt;Type 10&lt;/a&gt; Austron 2200A/2201A GPS Receivers (&lt;tt&gt;GPS_AS2201&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver11&#34;&gt;Type 11&lt;/a&gt; Arbiter 1088A/B GPS Receiver (&lt;tt&gt;GPS_ARBITER&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver12&#34;&gt;Type 12&lt;/a&gt; KSI/Odetics TPRO/S IRIG Interface (&lt;tt&gt;IRIG_TPRO&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Type 13 Leitch CSD 5300 Master Clock Controller (&lt;tt&gt;ATOM_LEITCH&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Type 14 EES M201 MSF Receiver (&lt;tt&gt;MSF_EES&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Type 15 reserved&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver16&#34;&gt;Type 16&lt;/a&gt; Bancomm GPS/IRIG Receiver (&lt;tt&gt;GPS_BANCOMM&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Type 17 Datum Precision Time System (&lt;tt&gt;GPS_DATUM&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver18&#34;&gt;Type 18&lt;/a&gt; NIST/USNO/PTB Modem Time Services (&lt;tt&gt;ACTS_MODEM&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver19&#34;&gt;Type 19&lt;/a&gt; Heath WWV/WWVH Receiver (&lt;tt&gt;WWV_HEATH&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver20&#34;&gt;Type 20&lt;/a&gt; Generic NMEA GPS Receiver (&lt;tt&gt;NMEA&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Type 21 TrueTime GPS-VME Interface (&lt;tt&gt;GPS_VME&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver22&#34;&gt;Type 22&lt;/a&gt; PPS Clock Discipline (&lt;tt&gt;PPS&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Type 23 reserved&lt;/li&gt;
&lt;li&gt;Type 24 reserved&lt;/li&gt;
&lt;li&gt;Type 25 reserved&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver26&#34;&gt;Type 26&lt;/a&gt; Hewlett Packard 58503A GPS Receiver (&lt;tt&gt;GPS_HP&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver27&#34;&gt;Type 27&lt;/a&gt; Arcron MSF Receiver (&lt;tt&gt;MSF_ARCRON&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver28&#34;&gt;Type 28&lt;/a&gt; Shared Memory Driver (&lt;tt&gt;SHM&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver29&#34;&gt;Type 29&lt;/a&gt; Trimble Navigation Palisade GPS (&lt;tt&gt;GPS_PALISADE&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver30&#34;&gt;Type 30&lt;/a&gt; Motorola UT Oncore GPS &lt;tt&gt;GPS_ONCORE&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver31&#34;&gt;Type 31&lt;/a&gt; Rockwell Jupiter GPS (&lt;tt&gt;GPS_JUPITER&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver32&#34;&gt;Type 32&lt;/a&gt; Chrono-log K-series WWVB receiver (&lt;tt&gt;CHRONOLOG&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver33&#34;&gt;Type 33&lt;/a&gt; Dumb Clock (&lt;tt&gt;DUMBCLOCK&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver34&#34;&gt;Type 34&lt;/a&gt; Ultralink WWVB Receivers (&lt;tt&gt;ULINK&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver35&#34;&gt;Type 35&lt;/a&gt; Conrad Parallel Port Radio Clock (&lt;tt&gt;PCF&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver36&#34;&gt;Type 36&lt;/a&gt; Radio WWV/H Audio Demodulator/Decoder (&lt;tt&gt;WWV&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver37&#34;&gt;Type 37&lt;/a&gt; Forum Graphic GPS Dating station (&lt;tt&gt;FG&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver38&#34;&gt;Type 38&lt;/a&gt; hopf GPS/DCF77 6021/komp for Serial Line (&lt;tt&gt;HOPF_S&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver39&#34;&gt;Type 39&lt;/a&gt; hopf GPS/DCF77 6039 for PCI-Bus (&lt;tt&gt;HOPF_P&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver40&#34;&gt;Type 40&lt;/a&gt; JJY Receivers (&lt;tt&gt;JJY&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Type 41 TrueTime 560 IRIG-B Decoder&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver42&#34;&gt;Type 42&lt;/a&gt; Zyfer GPStarplus Receiver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver43&#34;&gt;Type 43&lt;/a&gt; RIPE NCC interface for Trimble Palisade&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver44&#34;&gt;Type 44&lt;/a&gt; NeoClock4X - DCF77 / TDF serial line&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Reference Clock Options</title>
      <link>/archives/4.2.6-series/clockopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/clockopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/stack1a.jpg&#34; alt=&#34;gif&#34;&gt;Master Time Facility at the &lt;a href=&#34;http://www.eecis.udel.edu/%7emills/lab.html&#34;&gt;UDel Internet Research Laboratory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Last update: 04-Oct-2009 19:42 UTC&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/clockopt/#reference-clock-support&#34;&gt;Reference Clock Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/clockopt/#reference-clock-commands&#34;&gt;Reference Clock Commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;reference-clock-support&#34;&gt;Reference Clock Support&lt;/h4&gt;
&lt;p&gt;The NTP Version 4 daemon supports some three dozen different radio, satellite and modem reference clocks plus a special pseudo-clock used for backup or when no other clock source is available. Detailed descriptions of individual device drivers and options can be found in the &lt;a href=&#34;/archives/4.2.6-series/refclock&#34;&gt;Reference Clock Drivers&lt;/a&gt; page. Additional information can be found in the pages linked there, including the &lt;a href=&#34;/archives/4.2.6-series/rdebug&#34;&gt;Debugging Hints for Reference Clock Drivers&lt;/a&gt; and &lt;a href=&#34;/archives/4.2.6-series/howto&#34;&gt;How To Write a Reference Clock Driver&lt;/a&gt; pages. In addition, support for a PPS signal is available as described in &lt;a href=&#34;/archives/4.2.6-series/pps&#34;&gt;Pulse-per-second (PPS) Signal Interfacing&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;A reference clock will generally (though not always) be a radio timecode receiver which is synchronized to a source of standard time such as the services offered by the NRC in Canada and NIST and USNO in the US. The interface between the computer and the timecode receiver is device dependent, but is usually a serial port. A device driver specific to each reference clock must be selected and compiled in the distribution; however, most common radio, satellite and modem clocks are included by default. Note that an attempt to configure a reference clock when the driver has not been compiled or the hardware port has not been appropriately configured results in a scalding remark to the system log file, but is otherwise non hazardous.&lt;/p&gt;
&lt;p&gt;For the purposes of configuration, &lt;tt&gt;ntpd&lt;/tt&gt; treats reference clocks in a manner analogous to normal NTP peers as much as possible. Reference clocks are identified by a syntactically correct but invalid IP address, in order to distinguish them from normal NTP peers. Reference clock addresses are of the form &lt;tt&gt;127.127.&lt;em&gt;t.u&lt;/em&gt;&lt;/tt&gt;, where &lt;em&gt;&lt;tt&gt;t&lt;/tt&gt;&lt;/em&gt; is an integer denoting the clock type and &lt;em&gt;&lt;tt&gt;u&lt;/tt&gt;&lt;/em&gt; indicates the unit number in the range 0-3. While it may seem overkill, it is in fact sometimes useful to configure multiple reference clocks of the same type, in which case the unit numbers must be unique.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;server&lt;/tt&gt; command is used to configure a reference clock, where the &lt;em&gt;&lt;tt&gt;address&lt;/tt&gt;&lt;/em&gt; argument in that command is the clock address. The &lt;tt&gt;key&lt;/tt&gt;, &lt;tt&gt;version&lt;/tt&gt; and &lt;tt&gt;ttl&lt;/tt&gt; options are not used for reference clock support. The &lt;tt&gt;mode&lt;/tt&gt; option is added for reference clock support, as described below. The &lt;tt&gt;prefer&lt;/tt&gt; option can be useful to persuade the server to cherish a reference clock with somewhat more enthusiasm than other reference clocks or peers. Further information on this option can be found in the &lt;a href=&#34;/archives/4.2.6-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page. The &lt;tt&gt;minpoll&lt;/tt&gt; and &lt;tt&gt;maxpoll&lt;/tt&gt; options have meaning only for selected clock drivers. See the individual clock driver document pages for additional information.&lt;/p&gt;
&lt;p&gt;The &lt;tt&gt;fudge&lt;/tt&gt; command is used to provide additional information for individual clock drivers and normally follows immediately after the &lt;tt&gt;server&lt;/tt&gt; command. The &lt;em&gt;&lt;tt&gt;address&lt;/tt&gt;&lt;/em&gt; argument specifies the clock address. The &lt;tt&gt;refid&lt;/tt&gt; and &lt;tt&gt;stratum&lt;/tt&gt; options control can be used to override the defaults for the device. There are two optional device-dependent time offsets and four flags that can be included in the &lt;tt&gt;fudge&lt;/tt&gt; command as well.&lt;/p&gt;
&lt;p&gt;The stratum number of a reference clock is by default zero. Since the &lt;tt&gt;ntpd&lt;/tt&gt; daemon adds one to the stratum of each peer, a primary server ordinarily displays an external stratum of one. In order to provide engineered backups, it is often useful to specify the reference clock stratum as greater than zero. The &lt;tt&gt;stratum&lt;/tt&gt; option is used for this purpose. Also, in cases involving both a reference clock and a pulse-per-second (PPS) discipline signal, it is useful to specify the reference clock identifier as other than the default, depending on the driver. The &lt;tt&gt;refid&lt;/tt&gt; option is used for this purpose. Except where noted, these options apply to all clock drivers.&lt;/p&gt;
&lt;h4 id=&#34;reference-clock-commands&#34;&gt;Reference Clock Commands&lt;/h4&gt;
&lt;dt id=&#34;server&#34;&gt;&lt;tt&gt;server 127.127._t.u_ [prefer] [mode _int_] [minpoll _int_] [maxpoll _int_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command can be used to configure reference clocks in special ways. The options are interpreted as follows:&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;prefer&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Marks the reference clock as preferred. All other things being equal, this host will be chosen for synchronization among a set of correctly operating hosts. See the &lt;a href=&#34;/archives/4.2.6-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page for further information.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;mode &lt;em&gt;int&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies a mode number which is interpreted in a device-specific fashion. For instance, it selects a dialing protocol in the ACTS driver and a device subtype in the &lt;tt&gt;parse&lt;/tt&gt; drivers.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;minpoll &lt;em&gt;int&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;maxpoll &lt;em&gt;int&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    These options specify the minimum and maximum polling interval for reference clock messages in seconds, interpreted as dual logarithms (2 ^ x). For most directly connected reference clocks, both &lt;tt&gt;minpoll&lt;/tt&gt; and &lt;tt&gt;maxpoll&lt;/tt&gt; default to 6 (2^16 = 64 s). For modem reference clocks, &lt;tt&gt;minpoll&lt;/tt&gt; defaults to 10 (2^10 = 1024 s = 17.1 m) and &lt;tt&gt;maxpoll&lt;/tt&gt; defaults to 14 (2^14 = 16384 s = 4.5 h). The allowable range is 4 (16 s) to 17 (36.4 h) inclusive.&lt;/p&gt;
&lt;dt id=&#34;fudge&#34;&gt;&lt;tt&gt;fudge 127.127._t.u_ [time1 _sec_] [time2 _sec_] [stratum _int_] [refid _string_] [flag1 0|1] [flag2 0|1] [flag3 0|1] [flag4 0|1]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command can be used to configure reference clocks in special ways. It must immediately follow the &lt;tt&gt;server&lt;/tt&gt; command which configures the driver. Note that the same capability is possible at run time using the &lt;tt&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;ntpdc&lt;/a&gt;&lt;/tt&gt; program. The options are interpreted as follows:&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;time1 &lt;em&gt;sec&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies a constant to be added to the time offset produced by the driver, a fixed-point decimal number in seconds. This is used as a calibration constant to adjust the nominal time offset of a particular clock to agree with an external standard, such as a precision PPS signal. It also provides a way to correct a systematic error or bias due to serial port or operating system latencies, different cable lengths or receiver internal delay. The specified offset is in addition to the propagation delay provided by other means, such as internal DIPswitches. Where a calibration for an individual system and driver is available, an approximate correction is noted in the driver documentation pages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; in order to facilitate calibration when more than one radio clock or PPS signal is supported, a special calibration feature is available. It takes the form of an argument to the &lt;tt&gt;enable&lt;/tt&gt; command described in the &lt;a href=&#34;/archives/4.2.6-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt; page and operates as described in the &lt;a href=&#34;/archives/4.2.6-series/refclock&#34;&gt;Reference Clock Drivers&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;time2 &lt;em&gt;secs&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies a fixed-point decimal number in seconds, which is interpreted in a driver-dependent way. See the descriptions of specific drivers in the &lt;a href=&#34;/archives/4.2.6-series/refclock&#34;&gt;reference clock drivers&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;stratum &lt;em&gt;int&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies the stratum number assigned to the driver, an integer between 0 and 15. This number overrides the default stratum number ordinarily assigned by the driver itself, usually zero.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;refid &lt;em&gt;string&lt;/em&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    Specifies an ASCII string of from one to four characters which defines the reference identifier used by the driver. This string overrides the default identifier ordinarily assigned by the driver itself.&lt;/p&gt;
&lt;p&gt;    &lt;tt&gt;flag1 flag2 flag3 flag4&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;    These four flags are used for customizing the clock driver. The interpretation of these values, and whether they are used at all, is a function of the particular clock driver. However, by convention &lt;tt&gt;flag4&lt;/tt&gt; is used to enable recording monitoring data to the &lt;tt&gt;clockstats&lt;/tt&gt; file configured with the &lt;tt&gt;filegen&lt;/tt&gt; command. Further information on the &lt;tt&gt;filegen&lt;/tt&gt; command can be found in the &lt;a href=&#34;/archives/4.2.6-series/monopt&#34;&gt;Monitoring Options&lt;/a&gt; page.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Search Results</title>
      <link>/archives/4.2.6-series/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/search/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Archives: Server Options</title>
      <link>/archives/4.2.6-series/confopt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/confopt/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/boom3a.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Pogo&lt;/em&gt;, Walt Kelly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chicken is getting configuration advice.&lt;/p&gt;
&lt;p&gt;Last update: 	25-Nov-2009 4:46&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt/#configuration-commands&#34;&gt;Configuration Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt/#command-options&#34;&gt;Command Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt/#auxiliary-commands&#34;&gt;Auxiliary Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Following is a description of the configuration commands in NTPv4. There are two classes of commands, configuration commands that configure an association with a remote server, peer or reference clock, and auxilliary commands that specify environmental variables that control various related operations.&lt;/p&gt;
&lt;p&gt;The various modes described on the &lt;a href=&#34;/archives/4.2.6-series/assoc&#34;&gt;Association Management&lt;/a&gt; page are determined by the command keyword and the DNS name or IP address. Addresses are classed by type as (s) a remote server or peer (IPv4 class A, B and C), (b) the IP broadcast address of a local interface, (m) a multicast address (IPv4 class D), or (r) a reference clock address (127.127.x.x). For type m addresses the IANA has assigned the multicast group address IPv4 224.0.1.1 and IPv6 ff05::101 (site local) exclusively to NTP, but other nonconflicting addresses can be used.&lt;/p&gt;
&lt;p&gt;If the Basic Socket Interface Extensions for IPv6 (RFC-2553) is detected, support for the IPv6 address family is generated in addition to the default IPv4 address family. IPv6 addresses can be identified by the presence of colons &lt;code&gt;:&lt;/code&gt; in the address field. IPv6 addresses can be used almost everywhere where IPv4 addresses can be used, with the exception of reference clock addresses, which are always IPv4. Note that in contexts where a host name is expected, a &lt;code&gt;4&lt;/code&gt; qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a &lt;code&gt;-6&lt;/code&gt; qualifier forces DNS resolution to the IPv6 namespace.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;configuration-commands&#34;&gt;Configuration Commands&lt;/h4&gt;
&lt;p&gt;These commands specify the time server name or address to be used and the mode in which to operate. The address can be either a DNS name or a IPv4 or IPv6 address in standard notation. In general, multiple commands of each type can be used for different server and peer addresses or multicast groups.&lt;/p&gt;
&lt;dt id=&#34;server&#34;&gt;&lt;tt&gt;server _address_ [options ...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;For type s and r addresses (only), this command mobilizes a persistent client mode association with the specified remote server or local reference clock. If the &lt;tt&gt;preempt&lt;/tt&gt; flag is specified, a preemptable client mode association is mobilized instead.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;peer _address_ [options ...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;For type s addresses (only), this command mobilizes a persistent symmetric-active mode association with the specified remote peer.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;broadcast _address_ [options ...]&lt;/tt&gt;&lt;/dt&gt; 
&lt;p&gt;For type b and m addressees (only), this command mobilizes a persistent broadcast or multicast server mode association. Note that type b messages go only to the interface specified, but type m messages go to all interfaces.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;manycastclient _address_ [options ...]&lt;/tt&gt;&lt;/dt&gt; 
&lt;p&gt;For type m addresses (only), this command mobilizes a manycast client mode association for the multicast group address specified. In this mode the address must match the address specified on the &lt;tt&gt;manycastserver&lt;/tt&gt; command of one or more designated manycast servers.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;pool _address_ [options ...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;For type s messages (only) this command mobilizes a client mode association for servers implementing the pool automatic server discovery scheme described on the &lt;a href=&#34;/archives/4.2.6-series/assoc&#34;&gt;Association Management&lt;/a&gt; page. The address is a DNS name in the form &lt;tt&gt;&lt;em&gt;area&lt;/em&gt;.pool.ntp.org&lt;/tt&gt;, where &lt;tt&gt;&lt;em&gt;area&lt;/em&gt;&lt;/tt&gt; is a qualifier designating the server geographic area such as &lt;tt&gt;us&lt;/tt&gt; or &lt;tt&gt;europe&lt;/tt&gt;.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;unpeer [_address_ | _associd_]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This command removes a previously configured association. An address or association ID can be used to identify the association. Either an IP address or DNS name can be used. This command is most useful when supplied via &lt;tt&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq&#34;&gt;ntpq&lt;/a&gt;&lt;/tt&gt; runtime configuration commands &lt;tt&gt;:config&lt;/tt&gt; and &lt;tt&gt;config-from-file&lt;/tt&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-options&#34;&gt;Command Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;autokey&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Send and receive packets authenticated by the Autokey scheme described in the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. This option is mutually exclusive with the &lt;tt&gt;key&lt;/tt&gt; option.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;burst&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;When the server is reachable, send a burst of eight packets instead of the usual one. The packet spacing is normally 2 s; however, the spacing between the first and second packets can be changed with the &lt;tt&gt;calldelay&lt;/tt&gt; command to allow additional time for a modem or ISDN call to complete. This option is valid only with the &lt;tt&gt;server&lt;/tt&gt; command and type s addressesa. It is a recommended option when the &lt;tt&gt;maxpoll&lt;/tt&gt; option is greater than 10 (1024 s).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;iburst&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;When the server is unreachable, send a burst of eight packets instead of the usual one. The packet spacing is normally 2 s; however, the spacing between the first and second packets can be changed with the &lt;tt&gt;calldelay&lt;/tt&gt; command to allow additional time for a modem or ISDN call to complete. This option is valid only with the &lt;tt&gt;server&lt;/tt&gt; command and type s addresses. It is a recommended option with this command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;key&lt;/tt&gt; _&lt;tt&gt;key&lt;/tt&gt;_&lt;/dt&gt;
&lt;p&gt;Send and receive packets authenticated by the symmetric key scheme described in the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. The &lt;em&gt;&lt;tt&gt;key&lt;/tt&gt;&lt;/em&gt; specifies the key identifier with values from 1 to 65534, inclusive. This option is mutually exclusive with the &lt;tt&gt;autokey&lt;/tt&gt; option.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;minpoll _minpoll  
_&lt;/tt&gt;&lt;tt&gt;maxpoll _maxpoll_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;These options specify the minimum and maximum poll intervals for NTP messages, in seconds as a power of two. The maximum poll interval defaults to 10 (1024 s), but can be increased by the &lt;tt&gt;maxpoll&lt;/tt&gt; option to an upper limit of 17 (36 h). The minimum poll interval defaults to 6 (64 s), but can be decreased by the &lt;tt&gt;minpoll&lt;/tt&gt; option to a lower limit of 3 (8 s).&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;mode _option_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Pass the &lt;tt&gt;&lt;em&gt;option&lt;/em&gt;&lt;/tt&gt; to a reference clock driver, where &lt;tt&gt;&lt;em&gt;option&lt;/em&gt;&lt;/tt&gt; is an integer in the range from 0 to 255, inclusive. This option is valid only with type r addresses.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;noselect&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Marks the server or peer to be ignored by the selection algorithm but visible to the monitoring program. This option is ignored with the &lt;tt&gt;broadcast&lt;/tt&gt; command.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;preempt&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the association as preemptable rather than the default persistent. This option is ignored with the &lt;tt&gt;broadcast&lt;/tt&gt; command and is most useful with the &lt;tt&gt;manycastclient&lt;/tt&gt; and &lt;tt&gt;pool&lt;/tt&gt; commands.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;prefer&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Mark the server as preferred. All other things being equal, this host will be chosen for synchronization among a set of correctly operating hosts. See the &lt;a href=&#34;/archives/4.2.6-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt; page for further information. This option is valid only with the &lt;tt&gt;server&lt;/tt&gt; and &lt;tt&gt;peer&lt;/tt&gt; commands.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;true&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Mark the association to assume truechimer status; that is, always survive the selection and clustering algorithms. This option can be used with any association, but is most useful for reference clocks with large jitter on the serial port and precision pulse-per-second (PPS) signals. Caution: this option defeats the algorithms designed to cast out falsetickers and can allow these sources to set the system clock. This option is valid only with the &lt;tt&gt;server&lt;/tt&gt; and &lt;tt&gt;peer&lt;/tt&gt; commands.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;ttl _ttl_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;This option specifies the time-to-live &lt;em&gt;&lt;tt&gt;ttl&lt;/tt&gt;&lt;/em&gt; for the &lt;tt&gt;broadcast&lt;/tt&gt; command and the maximum &lt;em&gt;&lt;tt&gt;ttl&lt;/tt&gt;&lt;/em&gt; for the expanding ring search used by the &lt;tt&gt;manycastclient&lt;/tt&gt; command. Selection of the proper value, which defaults to 127, is something of a black art and should be coordinated with the network administrator. This option is invalid with type r addresses.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;version _version_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Specifies the version number to be used f or outgoing NTP packets. Versions 1-4 are the choices, with version 4 the default.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;xleave&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Operate in interleaved mode (symmetric and broadcast modes only). (see &lt;a href=&#34;/archives/4.2.6-series/xleave&#34;&gt;NTP Interleaved Modes&lt;/a&gt;)&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;auxiliary-commands&#34;&gt;Auxiliary Commands&lt;/h4&gt;
&lt;dt id=&#34;broadcastclient&#34;&gt;&lt;tt&gt;broadcastclient&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable reception of broadcast server messages to any local interface (type b address). Ordinarily, upon receiving a broadcast message for the first time, the broadcast client measures the nominal server propagation delay using a brief client/server exchange, after which it continues in listen-only mode. If a nonzero value is specified in the &lt;tt&gt;broadcastdelay&lt;/tt&gt; command, the value becomes the delay and the volley is not executed. Note: the &lt;tt&gt;novolley&lt;/tt&gt; option has been deprecated for future enhancements. Note that, in order to avoid accidental or malicious disruption in this mode, both the server and client should operate using symmetric key or public key authentication as described in the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page. Note that the &lt;tt&gt;novolley&lt;/tt&gt; keyword is incompatible with public key authentication.&lt;/p&gt;
&lt;dt id=&#34;manycastserver&#34;&gt;&lt;tt&gt;manycastserver _address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable reception of manycast client messages (type m)to the multicast group address(es) (type m) specified. At least one address is required. Note that, in order to avoid accidental or malicious disruption, both the server and client should operate using symmetric key or public key authentication as described in the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page.&lt;/p&gt;
&lt;dt id=&#34;multicastclient&#34;&gt;&lt;tt&gt;multicastclient _address_ [...]&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Enable reception of multicast server messages to the multicast group address(es) (type m) specified. Upon receiving a message for the first time, the multicast client measures the nominal server propagation delay using a brief client/server exchange with the server, then enters the broadcast client mode, in which it synchronizes to succeeding multicast messages. Note that, in order to avoid accidental or malicious disruption in this mode, both the server and client should operate using symmetric key or public key authentication as described in the &lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt; page.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;The syntax checking is not picky; some combinations of ridiculous and even hilarious options and modes may not be detected.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: Site Map</title>
      <link>/archives/4.2.6-series/sitemap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/sitemap/</guid>
      <description>
        
        
        &lt;h4 id=&#34;build-and-install&#34;&gt;Build and Install&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/build&#34;&gt;Building and Installing the Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/quick&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/release&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/config&#34;&gt;Build Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/debug&#34;&gt;NTP Debugging Techniques&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/rdebug&#34;&gt;Debugging Reference Clock Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/decode&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; Event Messages and Status Words&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/msyslog&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; System Log Messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/bugs&#34;&gt;NTP Bug Reporting Procedures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;program-manual-pages&#34;&gt;Program Manual Pages&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpd&#34;&gt;&lt;tt&gt;ntpd&lt;/tt&gt; - Network Time Protocol (NTP) daemon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpq&#34;&gt;&lt;tt&gt;ntpq&lt;/tt&gt; - standard NTP query program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdc&#34;&gt;&lt;tt&gt;ntpdc&lt;/tt&gt; - special NTP query program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdate&#34;&gt;&lt;tt&gt;ntpdate&lt;/tt&gt; - set the date and time via NTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt&gt;&lt;a href=&#34;/archives/4.2.6-series/sntp&#34;&gt;sntp&lt;/tt&gt; - Simple Network Time Protocol (SNTP) client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntptrace&#34;&gt;&lt;tt&gt;ntptrace&lt;/tt&gt; - trace a chain of NTP servers back to the primary source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/tickadj&#34;&gt;&lt;tt&gt;tickadj&lt;/tt&gt; - set time-related kernel variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntptime&#34;&gt;&lt;tt&gt;ntptime&lt;/tt&gt; - read and set kernel time variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/keygen&#34;&gt;&lt;tt&gt;ntp-keygen&lt;/tt&gt; - generate public and private keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntpdsim&#34;&gt;&lt;tt&gt;ntpdsim&lt;/tt&gt; - Network Time Protocol (NTP) simulator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;configuration-commands-and-options&#34;&gt;Configuration Commands and Options&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/comdex&#34;&gt;Command Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/confopt&#34;&gt;Server Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/accopt&#34;&gt;Access Control Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/authopt&#34;&gt;Authentication Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/monopt&#34;&gt;Monitoring Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/clockopt&#34;&gt;Reference Clock Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/miscopt&#34;&gt;Miscellaneous Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/ntp_conf&#34;&gt;Configuration File Definition (Advanced)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;client-and-server-configuration&#34;&gt;Client and Server Configuration&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/assoc&#34;&gt;Association Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/rate&#34;&gt;Rate Management and the Kiss-o&#39;-Death Packet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/manyopt&#34;&gt;Automatic Server Discovery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;reference-clock-support&#34;&gt;Reference Clock Support&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/refclock&#34;&gt;Reference Clock Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/extern&#34;&gt;External Clock Discipline and the Local Clock Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/howto&#34;&gt;How to Write a Reference Clock Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/parsenew&#34;&gt;How to build new PARSE clocks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;reference-clock-audio-drivers&#34;&gt;Reference Clock Audio Drivers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/audio&#34;&gt;Reference Clock Audio Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver7&#34;&gt;Radio CHU Audio Demodulator/Decoder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver36&#34;&gt;Radio WWV/H Audio Demodulator/Decoder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/drivers/driver6&#34;&gt;IRIG Audio Decoder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;miscellaneous&#34;&gt;Miscellaneous&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/copyright&#34;&gt;Copyright Notice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/prefer&#34;&gt;Mitigation Rules and the &lt;tt&gt;prefer&lt;/tt&gt; Keyword&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/kern&#34;&gt;Kernel Model for Precision Timekeeping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/kernpps&#34;&gt;PPSAPI Interface for Precision Time Signals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/pps&#34;&gt;Pulse-per-second (PPS) Signal Interfacing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/gadget&#34;&gt;Gadget Box PPS Level Converter and CHU Modem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;external-links&#34;&gt;External Links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/book.html&#34;&gt;Computer Network Time Synchronization - The Network Time Protocol (book)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ntp.org/index.html&#34;&gt;NTP Public Services Project (home page)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/ntp.html&#34;&gt;NTP Research Project (home page)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/exec.html&#34;&gt;Executive Summary: Computer Network Time Synchronization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/leap.html&#34;&gt;The NTP Timescale and Leap Seconds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/time.html&#34;&gt;NTP Timestamp Calculations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/y2k.html&#34;&gt;The NTP Era and Era Numbering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/stamp.html&#34;&gt;Timestamp Capture Principles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/autocfg.html&#34;&gt;Autonomous Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/autokey.html&#34;&gt;Autonomous Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/proto.html&#34;&gt;Autokey Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/ident.html&#34;&gt;Autokey Identity Schemes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: sntp - Simple Network Time Protocol (SNTP) Client</title>
      <link>/archives/4.2.6-series/sntp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/sntp/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;/archives/pic/dogsnake.gif&#34; alt=&#34;gif&#34;&gt;&lt;a href=&#34;http://www.eecis.udel.edu/~mills/pictures.html&#34;&gt;from &lt;em&gt;Alice&amp;rsquo;s Adventures in Wonderland&lt;/em&gt;, Lewis Carroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;S is for snakeoil.&lt;/p&gt;
&lt;p&gt;Last update: 16:31 UTC Wednesday, March 12, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/sntp/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/sntp/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/sntp/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/sntp/#return-value&#34;&gt;Return Value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/sntp/#author&#34;&gt;Author&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;sntp [{-h &amp;ndash;help -?}][{ -v -V -W }][{-r -a}][-P prompt][-e minerr][-E maxerr][-c count][-d delay][address(es)]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;This program is a Simple Network Time Protocol (SNTP) client that can be used to query a Network Time Protocol (NTP) server and display the time offset of the system clock relative to the server clock. Run as root it can correct the system clock to this offset as well. It can be run as an interactive command or from a script by a &lt;tt&gt;cron&lt;/tt&gt; job. The program implements the SNTP protocol defined in RFC-4330, which is a subset of the NTP protocol defined in RFC-1305, but does not provide the sanity checks, access controls, security functions and mitigation algorithms as in the full NTP implementation.&lt;/p&gt;
&lt;p&gt;By default, &lt;tt&gt;sntp&lt;/tt&gt; writes the local date and time (i.e., not UTC) to the standard output in the format&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;1996 Oct 15 20:17:25.123 + 4.567 +/- 0.089 secs&lt;/tt&gt;,&lt;/p&gt;
&lt;p&gt;where the &lt;tt&gt;+ 4.567 +/- 0.089 secs&lt;/tt&gt; indicates the time offset and error bound of the system clock relative to the server clock.&lt;/p&gt;
&lt;p&gt;If a NTP server &lt;em&gt;address&lt;/em&gt; is explicitly specified, the program sends a single message to the server and waits up to &lt;em&gt;delay&lt;/em&gt; seconds for a unicast server message. Otherwise, it sends no message and waits up to &lt;em&gt;delay&lt;/em&gt; seconds for a broadcast server message.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;options&#34;&gt;Options&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;sntp&lt;/tt&gt; recognizes the following options:&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-h, --help&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;displays usage information.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-v&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;writes diagnostic messages and a limited amount of tracing to standard error. The &lt;tt&gt;-v&lt;/tt&gt;, &lt;tt&gt;-V&lt;/tt&gt; and &lt;tt&gt;-W&lt;/tt&gt; give increasing levels of detail.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-r&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;steps the system clock to the correct time by the Unix &lt;tt&gt;settimeofday&lt;/tt&gt; system call. Requires root privilege.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-a&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;slews the system clock to the correct time by the Unix &lt;tt&gt;adjtime&lt;/tt&gt; system call. Requires root privilege.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-e _minerr_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;sets the minimum offset to &lt;em&gt;minerr&lt;/em&gt; seconds. Measured offsets less than this are ignored. Acceptable values are from 0.001 to 1 with default 0.1 if unicast mode and 0.5 for broadcast mode.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-E _maxerr_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;sets the maximum offset to &lt;em&gt;maxerr&lt;/em&gt; seconds. Measured offsets greater than this are ignored. Acceptable values are from 1 to 60 with default 5.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;P _prompt_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;sets the maximum automatic offset to &lt;em&gt;maxerr&lt;/em&gt; seconds. Acceptable values are from 1 to 3600 or &lt;tt&gt;no&lt;/tt&gt;, with default 30. If the program is being run interactively, measured offsets greater than this will prompt the user for confirmation. Specifying &lt;tt&gt;no&lt;/tt&gt; will disable this and the correction will be made regardless.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-c _count_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;sets the maximum number of NTP packets required to &lt;em&gt;count&lt;/em&gt;. Acceptable values are from 1 to 25 in unicast mode and 5 to 25 in broadcast mode. The default is 5 in either mode.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-d _delay_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;sets the maximum waiting time in broadcast mode to &lt;em&gt;delay&lt;/em&gt; seconds. Acceptable values are from 1 to 3600, with default 15 in unicast mode and 300 in broadcast mode.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;return-value&#34;&gt;Return Value&lt;/h4&gt;
&lt;p&gt;The program returns an exit status of zero for success and non-zero otherwise.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;author&#34;&gt;Author&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;sntp&lt;/tt&gt; was developed by N.M. Maclaren of the University of Cambridge Computing Service.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Archives: tickadj - set time-related kernel variables</title>
      <link>/archives/4.2.6-series/tickadj/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/4.2.6-series/tickadj/</guid>
      <description>
        
        
        &lt;p&gt;Last update: Wednesday, January 16, 2008&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/tickadj/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/tickadj/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/tickadj/#command-line-options&#34;&gt;Command Line Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/tickadj/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/archives/4.2.6-series/tickadj/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;tickadj [ &lt;em&gt;tick&lt;/em&gt; ]&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;tickadj [ -Aqs ] [ -a &lt;em&gt;tickadj&lt;/em&gt; ] [ -t &lt;em&gt;tick&lt;/em&gt; ]&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;The &lt;tt&gt;tickadj&lt;/tt&gt; program reads, and optionally modifies, several timekeeping-related variables in older kernels that do not have support for precision ttimekeeping, including HP-UX, SunOS, Ultrix, SGI and probably others. Those machines provide means to patch the kernel &lt;tt&gt;/dev/kmem&lt;/tt&gt;. Newer machines with kernel time support, including Solaris, Tru64, FreeBSD and Linux, should NOT use the program, even if it appears to work, as it will destabilize the kernel time support. Use the &lt;a href=&#34;/archives/4.2.6-series/ntptime&#34;&gt;&lt;tt&gt;ntptime&lt;/tt&gt;&lt;/a&gt; program instead.&lt;/p&gt;
&lt;p&gt;The particular variables that can be changed with &lt;tt&gt;tickadj&lt;/tt&gt; include &lt;tt&gt;tick&lt;/tt&gt;, which is the number of microseconds added to the system time for a clock interrupt, &lt;tt&gt;tickadj&lt;/tt&gt;, which sets the slew rate and resolution used by the &lt;tt&gt;adjtime&lt;/tt&gt; system call, and &lt;tt&gt;dosynctodr&lt;/tt&gt;, which indicates to the kernels on some machines whether they should internally adjust the system clock to keep it in line with time-of-day clock or not.&lt;/p&gt;
&lt;p&gt;On Linux, only the &lt;tt&gt;tick&lt;/tt&gt; variable is supported and the only allowed argument is the tick value.&lt;/p&gt;
&lt;p&gt;By default, with no arguments, &lt;tt&gt;tickadj&lt;/tt&gt; reads the variables of interest in the kernel and displays them. At the same time, it determines an &amp;ldquo;optimal&amp;rdquo; value for the value of the &lt;tt&gt;tickadj&lt;/tt&gt; variable if the intent is to run the &lt;tt&gt;ntpd&lt;/tt&gt; Network Time Protocol (NTP) daemon, and prints this as well. Since the operation of &lt;tt&gt;tickadj&lt;/tt&gt; when reading the kernel mimics the operation of similar parts of the &lt;tt&gt;ntpd&lt;/tt&gt; program fairly closely, this can be useful when debugging problems with &lt;tt&gt;ntpd&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Note that &lt;tt&gt;tickadj&lt;/tt&gt; should be run with some caution when being used for the first time on different types of machines. The operations which &lt;tt&gt;tickadj&lt;/tt&gt; tries to perform are not guaranteed to work on all Unix machines and may in rare cases cause the kernel to crash.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;command-line-options&#34;&gt;Command Line Options&lt;/h4&gt;
&lt;dt&gt;&lt;tt&gt;-a _tickadj_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the kernel variable &lt;tt&gt;tickadj&lt;/tt&gt; to the value _&lt;tt&gt;tickadj&lt;/tt&gt;_specified.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-A&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the kernel variable &lt;tt&gt;tickadj&lt;/tt&gt; to an internally computed &amp;ldquo;optimal&amp;rdquo; value.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-t _tick_&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the kernel variable &lt;tt&gt;tick&lt;/tt&gt; to the value &lt;em&gt;&lt;tt&gt;tick&lt;/tt&gt;&lt;/em&gt; specified.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-s&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Set the kernel variable &lt;tt&gt;dosynctodr&lt;/tt&gt; to zero, which disables the hardware time-of-year clock, a prerequisite for running the &lt;tt&gt;ntpd&lt;/tt&gt; daemon under SunOS 4.x.&lt;/p&gt;
&lt;dt&gt;&lt;tt&gt;-q&lt;/tt&gt;&lt;/dt&gt;
&lt;p&gt;Normally, &lt;tt&gt;tickadj&lt;/tt&gt; is quite verbose about what it is doing. The &lt;tt&gt;-q&lt;/tt&gt; flag tells it to shut up about everything except errors.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;p&gt;&lt;tt&gt;/vmunix&lt;br&gt;
/unix&lt;br&gt;
/dev/kmem&lt;br&gt;
&lt;/tt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;Fiddling with kernel variables at run time as a part of ordinary operations is a hideous practice which is only necessary to make up for deficiencies in the implementation of &lt;tt&gt;adjtime&lt;/tt&gt; in many kernels and/or brokenness of the system clock in some vendors&#39; kernels. It would be much better if the kernels were fixed and the &lt;tt&gt;tickadj&lt;/tt&gt; program went away.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
